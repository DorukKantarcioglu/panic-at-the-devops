{"ast":null,"code":"import axios from \"axios\";\n\nconst StudentService = function () {\n  const _fetchAllStudents = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/students\");\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getStudentById = async id => {\n    const url = \"http://localhost:8080/api/v1/students/\" + id;\n    console.log(url);\n    debugger;\n    const response = await axios.get(url);\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getStudentByHesCode = async hesCode => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/students\", {\n      headers: {\n        \"hesCode\": {\n          hesCode\n        }.toString()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _validateHesCode = async (hesCode, trIdNumber, eGovernmentPassword) => {\n    const response = await axios.post(\"http://localhost:8080/api/v1/students\", {}, {\n      headers: {\n        \"hesCode\": hesCode,\n        \"tridNumber\": trIdNumber,\n        \"eGovernmentPassword\": eGovernmentPassword\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _createStudent = async () => {\n    const response = await axios.post(\"http://localhost:8080/api/v1/students\");\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _updateHesCode = async id => {\n    const url = \"http://localhost:8080/api/v1/students/\" + id;\n    const response = await axios.patch(url);\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _deleteStudent = async id => {\n    const url = \"http://localhost:8080/api/v1/students/\" + id;\n    const response = await axios.delete(url);\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  return {\n    fetchAllStudents: _fetchAllStudents,\n    getStudentById: _getStudentById,\n    createStudent: _createStudent,\n    getStudentByHesCode: _getStudentByHesCode,\n    updateHesCode: _updateHesCode,\n    deleteStudent: _deleteStudent,\n    validateHesCode: _validateHesCode\n  };\n}();\n\nexport default StudentService;","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/StudentService.js"],"names":["axios","StudentService","_fetchAllStudents","response","get","data","_getStudentById","id","url","console","log","_getStudentByHesCode","hesCode","headers","toString","_validateHesCode","trIdNumber","eGovernmentPassword","post","_createStudent","_updateHesCode","patch","_deleteStudent","delete","fetchAllStudents","getStudentById","createStudent","getStudentByHesCode","updateHesCode","deleteStudent","validateHesCode"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAI,YAAY;AAEhC,QAAMC,iBAAiB,GAAG,YAAS;AAC/B,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,uCAAV,CAAvB;;AACA,QAAID,QAAJ,EAAc;AACV,aAAOA,QAAQ,CAACE,IAAhB;AACH;AAEJ,GAND;;AAQA,QAAMC,eAAe,GAAG,MAAOC,EAAP,IAAY;AAChC,UAAMC,GAAG,GAAG,2CAA2CD,EAAvD;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA;AACA,UAAML,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAUI,GAAV,CAAvB;;AACA,QAAIL,QAAJ,EAAc;AACV,aAAOA,QAAQ,CAACE,IAAhB;AACH;AACJ,GARD;;AAUA,QAAMM,oBAAoB,GAAG,MAAOC,OAAP,IAAiB;AAC1C,UAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,uCAAV,EAAmD;AAAES,MAAAA,OAAO,EAAC;AAChF,mBAAW;AAACD,UAAAA;AAAD,UAAUE,QAAV;AADqE;AAAV,KAAnD,CAAvB;;AAGA,QAAIX,QAAJ,EAAc;AACV,aAAOA,QAAQ,CAACE,IAAhB;AACH;AACJ,GAPD;;AASA,QAAMU,gBAAgB,GAAG,OAAOH,OAAP,EAAgBI,UAAhB,EAA4BC,mBAA5B,KAAkD;AAGvE,UAAMd,QAAQ,GAAG,MAAMH,KAAK,CAACkB,IAAN,CAAW,uCAAX,EAAmD,EAAnD,EAAuD;AAACL,MAAAA,OAAO,EAAE;AAChF,mBAAWD,OADqE;AAEhF,sBAAcI,UAFkE;AAGhF,+BAAuBC;AAHyD;AAAV,KAAvD,CAAvB;;AAKA,QAAId,QAAJ,EAAc;AACR,aAAOA,QAAQ,CAACE,IAAhB;AACL;AACJ,GAXD;;AAaA,QAAMc,cAAc,GAAG,YAAS;AAC5B,UAAMhB,QAAQ,GAAG,MAAMH,KAAK,CAACkB,IAAN,CAAW,uCAAX,CAAvB;;AACA,QAAIf,QAAJ,EAAc;AACV,aAAOA,QAAQ,CAACE,IAAhB;AACH;AAEJ,GAND;;AAQA,QAAMe,cAAc,GAAG,MAAOb,EAAP,IAAY;AAC/B,UAAMC,GAAG,GAAG,2CAA2CD,EAAvD;AACA,UAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACqB,KAAN,CAAYb,GAAZ,CAAvB;;AACA,QAAIL,QAAJ,EAAc;AACV,aAAOA,QAAQ,CAACE,IAAhB;AACH;AACJ,GAND;;AAQA,QAAMiB,cAAc,GAAG,MAAOf,EAAP,IAAY;AAC/B,UAAMC,GAAG,GAAG,2CAA2CD,EAAvD;AACA,UAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACuB,MAAN,CAAaf,GAAb,CAAvB;;AACA,QAAIL,QAAJ,EAAc;AACV,aAAOA,QAAQ,CAACE,IAAhB;AACH;AACJ,GAND;;AAQA,SAAO;AACHmB,IAAAA,gBAAgB,EAAEtB,iBADf;AAEHuB,IAAAA,cAAc,EAAEnB,eAFb;AAGHoB,IAAAA,aAAa,EAAEP,cAHZ;AAIHQ,IAAAA,mBAAmB,EAAEhB,oBAJlB;AAKHiB,IAAAA,aAAa,EAAER,cALZ;AAMHS,IAAAA,aAAa,EAAEP,cANZ;AAOHQ,IAAAA,eAAe,EAAEf;AAPd,GAAP;AASH,CA3EsB,EAAvB;;AA4EA,eAAed,cAAf","sourcesContent":["import axios from \"axios\";\n\nconst StudentService = (function () {\n\n    const _fetchAllStudents = async()=>{\n        const response = await axios.get(\"http://localhost:8080/api/v1/students\");\n        if (response) {\n            return response.data;\n        }\n\n    };\n\n    const _getStudentById = async (id)=>{\n        const url = \"http://localhost:8080/api/v1/students/\" + id\n        console.log(url)\n        debugger\n        const response = await axios.get(url)\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _getStudentByHesCode = async (hesCode)=>{\n        const response = await axios.get(\"http://localhost:8080/api/v1/students\", { headers:{\n            \"hesCode\": {hesCode}.toString()\n            }})\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _validateHesCode = async (hesCode, trIdNumber, eGovernmentPassword)=>{\n\n\n        const response = await axios.post(\"http://localhost:8080/api/v1/students\",{}, {headers: {\n                \"hesCode\": hesCode,\n                \"tridNumber\": trIdNumber,\n                \"eGovernmentPassword\": eGovernmentPassword\n            }})\n        if (response) {\n              return response.data;\n        }\n    }\n\n    const _createStudent = async()=>{\n        const response = await axios.post(\"http://localhost:8080/api/v1/students\");\n        if (response) {\n            return response.data;\n        }\n\n    };\n\n    const _updateHesCode = async (id)=>{\n        const url = \"http://localhost:8080/api/v1/students/\" + id\n        const response = await axios.patch(url)\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _deleteStudent = async (id)=>{\n        const url = \"http://localhost:8080/api/v1/students/\" + id\n        const response = await axios.delete(url)\n        if (response) {\n            return response.data;\n        }\n    }\n\n    return {\n        fetchAllStudents: _fetchAllStudents,\n        getStudentById: _getStudentById,\n        createStudent: _createStudent,\n        getStudentByHesCode: _getStudentByHesCode,\n        updateHesCode: _updateHesCode,\n        deleteStudent: _deleteStudent,\n        validateHesCode: _validateHesCode\n    };\n})();\nexport default StudentService;"]},"metadata":{},"sourceType":"module"}