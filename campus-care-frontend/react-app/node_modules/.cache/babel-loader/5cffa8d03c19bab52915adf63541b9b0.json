{"ast":null,"code":"import axios from \"axios\";\n\nconst ReservationService = function () {\n  const _getReservations = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/reservations\");\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getReservation = async id => {\n    const url = \"http://localhost:8080/api/v1/reservations/\" + id;\n    const response = await axios.get(url);\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _createReservation = async reservation => {\n    const response = await axios.post(\"http://localhost:8080/api/v1/reservations\", {}, {\n      headers: {\n        userId: reservation.userId,\n        date: reservation.date,\n        timeSlot: reservation.timeSlot,\n        place: reservation.place,\n        type: reservation.type\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _deleteReservation = async id => {\n    const url = \"http://localhost:8080/api/v1/reservations/\" + id;\n    const response = await axios.delete(url);\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  return {\n    getReservations: _getReservations,\n    getReservation: _getReservation,\n    createReservation: _createReservation,\n    deleteReservation: _deleteReservation\n  };\n}();\n\nexport default ReservationService;","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/service/ReservationService.js"],"names":["axios","ReservationService","_getReservations","response","get","data","_getReservation","id","url","_createReservation","reservation","post","headers","userId","date","timeSlot","place","type","_deleteReservation","delete","getReservations","getReservation","createReservation","deleteReservation"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,kBAAkB,GAAI,YAAY;AACtC,QAAMC,gBAAgB,GAAG,YAAY;AACnC,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACrB,2CADqB,CAAvB;;AAGA,QAAID,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACE,IAAhB;AACD;AACF,GAPD;;AASA,QAAMC,eAAe,GAAG,MAAOC,EAAP,IAAc;AACpC,UAAMC,GAAG,GAAG,+CAA+CD,EAA3D;AACA,UAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAUI,GAAV,CAAvB;;AACA,QAAIL,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACE,IAAhB;AACD;AACF,GAND;;AAQA,QAAMI,kBAAkB,GAAG,MAAOC,WAAP,IAAuB;AAChD,UAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACW,IAAN,CACrB,2CADqB,EAErB,EAFqB,EAGrB;AACEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAEH,WAAW,CAACG,MADb;AAEPC,QAAAA,IAAI,EAAEJ,WAAW,CAACI,IAFX;AAGPC,QAAAA,QAAQ,EAAEL,WAAW,CAACK,QAHf;AAIPC,QAAAA,KAAK,EAAEN,WAAW,CAACM,KAJZ;AAKPC,QAAAA,IAAI,EAAEP,WAAW,CAACO;AALX;AADX,KAHqB,CAAvB;;AAaA,QAAId,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACE,IAAhB;AACD;AACF,GAjBD;;AAmBA,QAAMa,kBAAkB,GAAG,MAAOX,EAAP,IAAc;AACvC,UAAMC,GAAG,GAAG,+CAA+CD,EAA3D;AACA,UAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACmB,MAAN,CAAaX,GAAb,CAAvB;;AACA,QAAIL,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACE,IAAhB;AACD;AACF,GAND;;AAQA,SAAO;AACLe,IAAAA,eAAe,EAAElB,gBADZ;AAELmB,IAAAA,cAAc,EAAEf,eAFX;AAGLgB,IAAAA,iBAAiB,EAAEb,kBAHd;AAILc,IAAAA,iBAAiB,EAAEL;AAJd,GAAP;AAMD,CAnD0B,EAA3B;;AAoDA,eAAejB,kBAAf","sourcesContent":["import axios from \"axios\";\n\nconst ReservationService = (function () {\n  const _getReservations = async () => {\n    const response = await axios.get(\n      \"http://localhost:8080/api/v1/reservations\"\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getReservation = async (id) => {\n    const url = \"http://localhost:8080/api/v1/reservations/\" + id;\n    const response = await axios.get(url);\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _createReservation = async (reservation) => {\n    const response = await axios.post(\n      \"http://localhost:8080/api/v1/reservations\",\n      {},\n      {\n        headers: {\n          userId: reservation.userId,\n          date: reservation.date,\n          timeSlot: reservation.timeSlot,\n          place: reservation.place,\n          type: reservation.type,\n        },\n      }\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _deleteReservation = async (id) => {\n    const url = \"http://localhost:8080/api/v1/reservations/\" + id;\n    const response = await axios.delete(url);\n    if (response) {\n      return response.data;\n    }\n  };\n\n  return {\n    getReservations: _getReservations,\n    getReservation: _getReservation,\n    createReservation: _createReservation,\n    deleteReservation: _deleteReservation,\n  };\n})();\nexport default ReservationService;\n"]},"metadata":{},"sourceType":"module"}