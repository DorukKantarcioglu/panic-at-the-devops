{"ast":null,"code":"var _jsxFileName = \"/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/SeatingPlan.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SeatingPlan extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.saveStudent = event => {\n      let seatId = event.target.id;\n      let studentId = event.target.value;\n      let temp = this.state.data;\n      temp[seatId] = studentId;\n      this.setState({\n        data: temp\n      });\n    };\n\n    this.fetchSeatingPlan = () => {\n      let table = [];\n      let parent = [];\n\n      for (let i = 0; i <= this.state.rowNo; i++) {\n        let children = [];\n\n        for (let j = 0; j <= this.state.columnNo; j++) {\n          let id = j + i * this.state.columnNo;\n          if (j === 0) children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              type: \"text\",\n              name: \"seat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 40\n            }, this), \" \", i]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 35\n          }, this));\n          if (i === 0) children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              type: \"text\",\n              name: \"seat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 40\n            }, this), \" \", String.fromCharCode(j + 97)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 35\n          }, this));else children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"seat\",\n              id: id,\n              onChange: this.saveStudent,\n              readOnly: this.state.readOnly,\n              children: this.state.data[id]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 35\n          }, this));\n        }\n\n        parent.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [\" \", children, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this));\n      }\n\n      table.push( /*#__PURE__*/_jsxDEV(\"table\", {\n        children: parent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this));\n      this.setState({\n        chart: table\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      chart: [],\n      data: [21902461, 21902444, \"ccc\", \"ddd\", 2190222, \"\", \"xxx\"],\n      rowNo: 2,\n      columnNo: 4,\n      readOnly: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSeatingPlan();\n  }\n\n  updateChart() {\n    this.setState({\n      readOnly: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"seatingPlanForm\",\n      children: [this.state.chart, /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"seatingPlanUpdate\",\n        onClick: this.updateChart,\n        children: \" Update the seating plan \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SeatingPlan;","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/SeatingPlan.js"],"names":["React","SeatingPlan","Component","constructor","props","saveStudent","event","seatId","target","id","studentId","value","temp","state","data","setState","fetchSeatingPlan","table","parent","i","rowNo","children","j","columnNo","push","String","fromCharCode","readOnly","chart","handleChange","name","componentDidMount","updateChart","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nclass SeatingPlan extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            chart :[],\n            data: [21902461, 21902444, \"ccc\", \"ddd\", 2190222,\"\", \"xxx\"],\n            rowNo: 2,\n            columnNo: 4,\n            readOnly:false\n        }\n    }\n\n    saveStudent = (event) => {\n        let seatId = event.target.id;\n        let studentId = event.target.value;\n        let temp = this.state.data;\n        temp[seatId] = studentId;\n        this.setState({ data: temp });\n    };\n\n    fetchSeatingPlan=()=>\n    {\n        let table = [];\n        let parent = [];\n        for (let i = 0; i <= this.state.rowNo; i++)\n        {\n            let children = [];\n            for (let j = 0; j <= this.state.columnNo; j++)\n            {\n                let id = j+(i*this.state.columnNo);\n                if (j === 0)\n                    children.push(<td> <label type=\"text\" name=\"seat\" /> {i}</td>)\n                if (i === 0)\n                    children.push(<td> <label type=\"text\" name=\"seat\" /> {String.fromCharCode(j+97)}</td>)\n                else\n                    children.push(<td>\n                        <input type=\"text\" name=\"seat\" id = {id}\n                               onChange={this.saveStudent} readOnly={this.state.readOnly}>\n                            {this.state.data[id]}\n                        </input> </td>);\n            }\n            parent.push(<tr> {children} </tr>);\n        }\n        table.push(<table>{parent}</table>)\n\n        this.setState({chart:table});\n    }\n\n    componentDidMount() {\n        this.fetchSeatingPlan();\n    }\n\n    updateChart(){\n    this.setState({readOnly:false})\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    render()\n    {\n        return(\n\n            <div className=\"seatingPlanForm\">\n                {this.state.chart}\n                <button id = \"seatingPlanUpdate\" onClick={this.updateChart}> Update the seating plan </button>\n            </div>\n        )\n    }\n}\n\nexport default SeatingPlan;"]},"metadata":{},"sourceType":"module"}