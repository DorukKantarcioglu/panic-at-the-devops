{"ast":null,"code":"var _jsxFileName = \"/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/SeatingPlan.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass SeatingPlan extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createSeatingPlan = () => {\n      let table = [];\n      let parent = [];\n\n      for (let i = 0; i < this.state.rowNo; i++) {\n        let children = [];\n\n        for (let j = 0; j < this.state.columnNo; j++) {\n          let id = j + i * this.state.columnNo;\n          children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"seat\",\n              id: id,\n              onChange: this.saveStudent,\n              readOnly: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 36\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 31\n          }, this));\n        }\n\n        parent.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [\" \", children, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this));\n      }\n\n      table.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          children: parent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"seatingPlanSave\",\n          onClick: console.log(\"hello\"),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true));\n      this.setState({\n        chart: table\n      });\n    };\n\n    this.fetchSeatingPlan = () => {\n      let table = [];\n      let parent = [];\n\n      for (let i = 0; i <= this.state.rowNo; i++) {\n        let children = [];\n\n        for (let j = 0; j <= this.state.columnNo; j++) {\n          let id = j + i * this.state.columnNo;\n          if (j === 0) children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              type: \"text\",\n              name: \"seat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 40\n            }, this), \" \", i]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 35\n          }, this));\n          if (i === 0) children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              type: \"text\",\n              name: \"seat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 40\n            }, this), \" \", String.fromCharCode(j + 97)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 35\n          }, this));else children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              type: \"text\",\n              name: \"seat\",\n              id: id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 40\n            }, this), \" \", this.state.data[id], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 35\n          }, this));\n        }\n\n        parent.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [\" \", children, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this));\n      }\n\n      table.push( /*#__PURE__*/_jsxDEV(\"table\", {\n        children: parent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this));\n      this.setState({\n        chart: table\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      chart: [],\n      data: [21902461, 21902444, \"ccc\", \"ddd\", 2190222, \"\", \"xxx\"],\n      rowNo: '',\n      columnNo: ''\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSeatingPlan();\n  }\n\n  updateChart() {\n    let table = [];\n    let parent = [];\n\n    for (let i = 0; i < this.state.rowNo; i++) {\n      let children = [];\n\n      for (let j = 0; j < this.state.columnNo; j++) {\n        let id = j + i * this.state.columnNo;\n        children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"seat\",\n            id: id,\n            value: this.state.data[id],\n            onChange: this.saveStudent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 36\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 31\n        }, this));\n      }\n\n      parent.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [\" \", children, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this));\n    }\n\n    table.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: parent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"seatingPlanSave\",\n        onClick: console.log(\"hello\"),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true));\n    this.setState({\n      chart: table\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"seatingPlanForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"seatingPlanForm\",\n        children: \" Please enter the classroom capacity: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"capacity\",\n        name: \"capacity\",\n        value: this.state.capacity,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"seatingPlanForm\",\n        id: \"rowNo\",\n        children: \" Number of rows: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"rowNo\",\n        name: \"rowNo\",\n        value: this.state.rowNo,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"seatingPlanForm\",\n        id: \"columnNo\",\n        children: \" Number of seats in the rows: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"columnNo\",\n        name: \"columnNo\",\n        value: this.state.columnNo,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"seatingPlanSubmit\",\n        onClick: this.createSeatingPlan,\n        children: \" Create the seating plan \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), this.state.chart]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SeatingPlan;","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/SeatingPlan.js"],"names":["React","SeatingPlan","Component","constructor","props","createSeatingPlan","table","parent","i","state","rowNo","children","j","columnNo","id","push","saveStudent","console","log","setState","chart","fetchSeatingPlan","String","fromCharCode","data","handleChange","event","target","name","value","componentDidMount","updateChart","render","capacity"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nclass SeatingPlan extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            chart :[],\n            data: [21902461, 21902444, \"ccc\", \"ddd\", 2190222,\"\", \"xxx\"],\n            rowNo: '',\n            columnNo: ''\n        }\n    }\n\n    createSeatingPlan=()=>\n    {\n        let table = [];\n        let parent = [];\n        for (let i = 0; i < this.state.rowNo; i++)\n        {\n            let children = [];\n            for (let j = 0; j < this.state.columnNo; j++)\n            {\n                let id = j+(i*this.state.columnNo);\n                children.push(<td> <input type=\"text\" name=\"seat\" id = {id}  onChange={this.saveStudent} readOnly={false}  /> </td>);\n            }\n            parent.push(<tr> {children} </tr>);\n        }\n        table.push(<><table>{parent}</table>\n            <button id = \"seatingPlanSave\" onClick ={console.log(\"hello\")} >Save</button></>)\n\n        this.setState({chart:table});\n    }\n\n    fetchSeatingPlan=()=>\n    {\n        let table = [];\n        let parent = [];\n        for (let i = 0; i <= this.state.rowNo; i++)\n        {\n            let children = [];\n            for (let j = 0; j <= this.state.columnNo; j++)\n            {\n                let id = j+(i*this.state.columnNo);\n                if (j === 0)\n                    children.push(<td> <label type=\"text\" name=\"seat\" /> {i}</td>)\n                if (i === 0)\n                    children.push(<td> <label type=\"text\" name=\"seat\" /> {String.fromCharCode(j+97)}</td>)\n                else\n                    children.push(<td> <label type=\"text\" name=\"seat\" id = {id}/> {this.state.data[id]} </td>);\n            }\n            parent.push(<tr> {children} </tr>);\n        }\n        table.push(<table>{parent}</table>)\n\n        this.setState({chart:table});\n    }\n\n    componentDidMount() {\n        this.fetchSeatingPlan();\n    }\n\n    updateChart(){\n        let table = [];\n        let parent = [];\n        for (let i = 0; i < this.state.rowNo; i++)\n        {\n            let children = [];\n            for (let j = 0; j < this.state.columnNo; j++)\n            {\n                let id = j+(i*this.state.columnNo);\n                children.push(<td> <input type=\"text\" name=\"seat\" id = {id}  value = {this.state.data[id]} onChange={this.saveStudent}  /> </td>);\n            }\n            parent.push(<tr> {children} </tr>);\n        }\n        table.push(<><table>{parent}</table>\n            <button id = \"seatingPlanSave\" onClick ={console.log(\"hello\")} >Save</button></>)\n\n        this.setState({chart:table});\n\n    }\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    render()\n    {\n        return(\n\n            <div className=\"seatingPlanForm\">\n                <label className=\"seatingPlanForm\"> Please enter the classroom capacity: </label>\n                <br/>\n                <input type=\"text\" id=\"capacity\" name=\"capacity\" value= {this.state.capacity}onChange={this.handleChange}/>\n                <label className=\"seatingPlanForm\" id =\"rowNo\"> Number of rows: </label>\n                <input type=\"text\" id=\"rowNo\" name=\"rowNo\" value= {this.state.rowNo} onChange={this.handleChange}/>\n                <br/>\n                <label className=\"seatingPlanForm\" id =\"columnNo\"> Number of seats in the rows: </label>\n                <input type=\"text\" id=\"columnNo\" name=\"columnNo\" value= {this.state.columnNo}onChange={this.handleChange}/>\n                <button id = \"seatingPlanSubmit\" onClick={this.createSeatingPlan}> Create the seating plan </button>\n                {this.state.chart}\n\n            </div>\n        )\n    }\n}\n\nexport default SeatingPlan;"]},"metadata":{},"sourceType":"module"}