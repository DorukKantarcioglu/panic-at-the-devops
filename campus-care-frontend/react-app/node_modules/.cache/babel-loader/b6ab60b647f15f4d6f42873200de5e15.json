{"ast":null,"code":"import React, { useState, useEffect, useContext } from \"react\";\nimport { ResponsivePie } from \"@nivo/pie\";\nimport { ResponsiveLine } from '@nivo/line';\nimport Dashboard from \"../Dashboard\"; // make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\n\n/*return(\nconst MyResponsiveLine = ({ data /* see data tab */\n\n/*}) => (\n<div style={{ height: 450, backgroundColor: \"white\" }}>\n<ResponsiveLine\ndata={data}\nmargin={{ top: 50, right: 110, bottom: 50, left: 60 }}\nxScale={{ type: 'point' }}\nyScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\nyFormat=\" >-.2f\"\naxisTop={null}\naxisRight={null}\naxisBottom={{\norient: 'bottom',\ntickSize: 5,\ntickPadding: 5,\ntickRotation: 0,\nlegend: 'transportation',\nlegendOffset: 36,\nlegendPosition: 'middle'\n}}\naxisLeft={{\norient: 'left',\ntickSize: 5,\ntickPadding: 5,\ntickRotation: 0,\nlegend: 'count',\nlegendOffset: -40,\nlegendPosition: 'middle'\n}}\ncolors={{ scheme: 'nivo' }}\npointSize={10}\npointColor={{ theme: 'background' }}\npointBorderWidth={2}\npointBorderColor={{ from: 'serieColor' }}\npointLabelYOffset={-12}\nenableArea={true}\nareaOpacity={0.5}\nuseMesh={true}\nlegends={[\n{\nanchor: 'bottom-right',\ndirection: 'column',\njustify: false,\ntranslateX: 100,\ntranslateY: 0,\nitemsSpacing: 0,\nitemDirection: 'left-to-right',\nitemWidth: 80,\nitemHeight: 20,\nitemOpacity: 0.75,\nsymbolSize: 12,\nsymbolShape: 'circle',\nsymbolBorderColor: 'rgba(0, 0, 0, .5)',\neffects: [\n{\non: 'hover',\nstyle: {\nitemBackground: 'rgba(0, 0, 0, .03)',\nitemOpacity: 1\n}\n}\n]\n}\n]}\n/>\n</div>\n)\n);\nexport default Dashboard;*/","map":{"version":3,"sources":["/Users/yagmureryilmaz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/MyResponsiveLine.js"],"names":["React","useState","useEffect","useContext","ResponsivePie","ResponsiveLine","Dashboard"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,WAA9B;AAEA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,SAAP,MAAsB,cAAtB,C,CAEA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { ResponsivePie } from \"@nivo/pie\";\n\nimport { ResponsiveLine } from '@nivo/line'\nimport Dashboard from \"../Dashboard\";\n\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\n/*return(\nconst MyResponsiveLine = ({ data /* see data tab */ /*}) => (\n\n    <div style={{ height: 450, backgroundColor: \"white\" }}>\n    <ResponsiveLine\n        data={data}\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n        xScale={{ type: 'point' }}\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n        yFormat=\" >-.2f\"\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'transportation',\n            legendOffset: 36,\n            legendPosition: 'middle'\n        }}\n        axisLeft={{\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'count',\n            legendOffset: -40,\n            legendPosition: 'middle'\n        }}\n        colors={{ scheme: 'nivo' }}\n        pointSize={10}\n        pointColor={{ theme: 'background' }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: 'serieColor' }}\n        pointLabelYOffset={-12}\n        enableArea={true}\n        areaOpacity={0.5}\n        useMesh={true}\n        legends={[\n            {\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 100,\n                translateY: 0,\n                itemsSpacing: 0,\n                itemDirection: 'left-to-right',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 0.75,\n                symbolSize: 12,\n                symbolShape: 'circle',\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemBackground: 'rgba(0, 0, 0, .03)',\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n    </div>\n   \n)\n);\n\nexport default Dashboard;*/\n"]},"metadata":{},"sourceType":"module"}