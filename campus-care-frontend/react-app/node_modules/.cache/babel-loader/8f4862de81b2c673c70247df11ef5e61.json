{"ast":null,"code":"var _jsxFileName = \"/Users/yagmureryilmaz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/SideBar.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport InfoBox from \"./profileComponents/InfoBox\";\nimport React from \"react\";\nimport CoursePage from \"../CoursePage\";\nimport { Navigation } from \"react-minimal-side-navigation\";\nimport { FaUserAlt, FaBook } from \"react-icons/fa\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst courses = [{\n  name: \"cs319\",\n  itemId: \"1\"\n}, {\n  name: \"cs315\",\n  itemId: \"2\"\n}, {\n  name: \"math225\",\n  itemId: \"3\"\n}];\nconst profilePageElements = [{\n  name: \"Profile Info\"\n}, {\n  name: \"Courses\"\n}];\n\nconst SideBar = props => {\n  _s();\n\n  const [path, setPath] = useState(\"\");\n  const history = useHistory();\n  let subNavArr = [];\n  useEffect(() => {\n    createSubNav();\n  }, []);\n\n  const createSubNav = () => {\n    courses.forEach(c => subNavArr.push({\n      title: c.name,\n      itemId: c.itemId\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: profilePageElements && profilePageElements.map(element => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3 justify-content-start\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"side \",\n                style: {\n                  margin: \"1\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Navigation // you can use your own router's api to get pathname\n                , {\n                  activeItemId: \"/management/members\",\n                  onSelect: _ref => {\n                    let {\n                      itemId,\n                      title\n                    } = _ref;\n\n                    if (itemId !== \"/management\") {\n                      setPath(\"course/\".concat(itemId));\n                      history.push({\n                        path\n                      });\n                    }\n                  },\n                  items: [{\n                    title: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: element.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 36\n                    }, this),\n                    itemId: \"/dashboard\",\n                    // you can use your own custom Icon component as well\n                    // icon is optional\n                    elemBefore: () => /*#__PURE__*/_jsxDEV(FaUserAlt, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 47\n                    }, this)\n                  }, {\n                    title: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: element.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 36\n                    }, this),\n                    itemId: \"/management\",\n                    elemBefore: () => /*#__PURE__*/_jsxDEV(FaBook, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 47\n                    }, this),\n                    subNav: subNavArr\n                  }, {\n                    title: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: element.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 36\n                    }, this),\n                    itemId: \"/another\",\n                    subNav: [{\n                      title: \"Teams\",\n                      itemId: \"/management/teams\"\n                    }]\n                  }]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Router, {\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: path,\n              children: /*#__PURE__*/_jsxDEV(CoursePage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SideBar, \"1sXqp4P6nR93O0o/mUo9bBHxp+o=\", false, function () {\n  return [useHistory];\n});\n\n_c = SideBar;\nexport default SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/Users/yagmureryilmaz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/SideBar.js"],"names":["BrowserRouter","Router","Switch","Route","Link","InfoBox","React","CoursePage","Navigation","FaUserAlt","FaBook","useEffect","useState","useHistory","courses","name","itemId","profilePageElements","SideBar","props","path","setPath","history","subNavArr","createSubNav","forEach","c","push","title","map","element","margin","concat","elemBefore","subNav"],"mappings":";;;AAAA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,gBAAlC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,kEAAP;;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,MAAM,EAAE;AAFV,CADc,EAKd;AACED,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,MAAM,EAAE;AAFV,CALc,EASd;AACED,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,MAAM,EAAE;AAFV,CATc,CAAhB;AAeA,MAAMC,mBAAmB,GAAG,CAC1B;AACEF,EAAAA,IAAI,EAAE;AADR,CAD0B,EAI1B;AACEA,EAAAA,IAAI,EAAE;AADR,CAJ0B,CAA5B;;AASA,MAAMG,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMU,OAAO,GAAGT,UAAU,EAA1B;AACA,MAAIU,SAAS,GAAG,EAAhB;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,YAAY,GAAG,MAAM;AACzBV,IAAAA,OAAO,CAACW,OAAR,CAAiBC,CAAD,IAAOH,SAAS,CAACI,IAAV,CAAe;AAAEC,MAAAA,KAAK,EAAEF,CAAC,CAACX,IAAX;AAAiBC,MAAAA,MAAM,EAAEU,CAAC,CAACV;AAA3B,KAAf,CAAvB;AACD,GAFD;;AAGA,sBACE;AAAA,cACGC,mBAAmB,IAClBA,mBAAmB,CAACY,GAApB,CAAyBC,OAAD,IAAa;AACnC,0BACE;AAAA,gCACE;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,6BAAf;AAAA,qCACE;AAAI,gBAAA,SAAS,EAAC,OAAd;AAAsB,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,MAAM,EAAE;AAAV,iBAA7B;AAAA,uCACE,QAAC,UAAD,CACE;AADF;AAEE,kBAAA,YAAY,EAAC,qBAFf;AAGE,kBAAA,QAAQ,EAAE,QAAuB;AAAA,wBAAtB;AAAEf,sBAAAA,MAAF;AAAUY,sBAAAA;AAAV,qBAAsB;;AAC/B,wBAAIZ,MAAM,KAAK,aAAf,EAA8B;AAC5BK,sBAAAA,OAAO,CAAC,UAAUW,MAAV,CAAiBhB,MAAjB,CAAD,CAAP;AACAM,sBAAAA,OAAO,CAACK,IAAR,CAAa;AAAEP,wBAAAA;AAAF,uBAAb;AACD;AACF,mBARH;AASE,kBAAA,KAAK,EAAE,CACL;AACEQ,oBAAAA,KAAK,eAAE;AAAA,gCAAQE,OAAO,CAACf;AAAhB;AAAA;AAAA;AAAA;AAAA,4BADT;AAEEC,oBAAAA,MAAM,EAAE,YAFV;AAGE;AACA;AACAiB,oBAAAA,UAAU,EAAE,mBAAM,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AALpB,mBADK,EAQL;AACEL,oBAAAA,KAAK,eAAE;AAAA,gCAAQE,OAAO,CAACf;AAAhB;AAAA;AAAA;AAAA;AAAA,4BADT;AAEEC,oBAAAA,MAAM,EAAE,aAFV;AAGEiB,oBAAAA,UAAU,EAAE,mBAAM,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,4BAHpB;AAIEC,oBAAAA,MAAM,EAAEX;AAJV,mBARK,EAcL;AACEK,oBAAAA,KAAK,eAAE;AAAA,gCAAQE,OAAO,CAACf;AAAhB;AAAA;AAAA;AAAA;AAAA,4BADT;AAEEC,oBAAAA,MAAM,EAAE,UAFV;AAGEkB,oBAAAA,MAAM,EAAE,CACN;AACEN,sBAAAA,KAAK,EAAE,OADT;AAEEZ,sBAAAA,MAAM,EAAE;AAFV,qBADM;AAHV,mBAdK;AATT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,yBADF,eA4CE,QAAC,MAAD;AAAA,iCACE,QAAC,MAAD;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAEI,IAAb;AAAA,qCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAsDD,KAvDD;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD,CAxED;;GAAMF,O;UAEYL,U;;;KAFZK,O;AA0EN,eAAeA,OAAf","sourcesContent":["import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport InfoBox from \"./profileComponents/InfoBox\";\nimport React from \"react\";\nimport CoursePage from \"../CoursePage\";\nimport { Navigation } from \"react-minimal-side-navigation\";\nimport { FaUserAlt, FaBook } from \"react-icons/fa\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\n\nconst courses = [\n  {\n    name: \"cs319\",\n    itemId: \"1\",\n  },\n  {\n    name: \"cs315\",\n    itemId: \"2\",\n  },\n  {\n    name: \"math225\",\n    itemId: \"3\",\n  },\n];\n\nconst profilePageElements = [\n  {\n    name: \"Profile Info\",\n  },\n  {\n    name: \"Courses\",\n  },\n];\n\nconst SideBar = (props) => {\n  const [path, setPath] = useState(\"\");\n  const history = useHistory();\n  let subNavArr = [];\n  useEffect(() => {\n    createSubNav();\n  }, []);\n\n  const createSubNav = () => {\n    courses.forEach((c) => subNavArr.push({ title: c.name, itemId: c.itemId }));\n  };\n  return (\n    <div>\n      {profilePageElements &&\n        profilePageElements.map((element) => {\n          return (\n            <div>\n              <>\n                <div className=\"\">\n                  <div className=\"col-3 justify-content-start\">\n                    <ul className=\"side \" style={{ margin: \"1\" }}>\n                      <Navigation\n                        // you can use your own router's api to get pathname\n                        activeItemId=\"/management/members\"\n                        onSelect={({ itemId, title }) => {\n                          if (itemId !== \"/management\") {\n                            setPath(\"course/\".concat(itemId));\n                            history.push({ path });\n                          }\n                        }}\n                        items={[\n                          {\n                            title: <label>{element.name}</label>,\n                            itemId: \"/dashboard\",\n                            // you can use your own custom Icon component as well\n                            // icon is optional\n                            elemBefore: () => <FaUserAlt />,\n                          },\n                          {\n                            title: <label>{element.name}</label>,\n                            itemId: \"/management\",\n                            elemBefore: () => <FaBook />,\n                            subNav: subNavArr,\n                          },\n                          {\n                            title: <label>{element.name}</label>,\n                            itemId: \"/another\",\n                            subNav: [\n                              {\n                                title: \"Teams\",\n                                itemId: \"/management/teams\",\n                              },\n                            ],\n                          },\n                        ]}\n                      />\n                    </ul>\n                  </div>\n                </div>\n              </>\n              <Router>\n                <Switch>\n                  <Route path={path}>\n                    <CoursePage />\n                  </Route>\n                </Switch>\n              </Router>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default SideBar;\n"]},"metadata":{},"sourceType":"module"}