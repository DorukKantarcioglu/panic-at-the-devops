{"ast":null,"code":"var _jsxFileName = \"/Users/yagmureryilmaz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/SeatingPlan.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewSeatingPlanForm from \"./profileComponents/NewSeatingPlanForm\";\nimport { Modal } from \"react-bootstrap\";\nimport { ModalBody } from \"react-bootstrap\";\nimport SeatingPlanService from \"../../service/SeatingPlanService\";\nimport CourseService from \"../../service/CourseService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SeatingPlan(props) {\n  _s();\n\n  const [chart, setChart] = useState([]);\n  const [data, setData] = useState([]);\n  const [rowNo, setRowNo] = useState(2);\n  const [columnNo, setColumnNo] = useState(4);\n  const [read, setRead] = useState(true);\n  const [exist, setExist] = useState(false);\n  const [list, setList] = useState();\n  useEffect(async () => {\n    await fetch();\n\n    if (exist) {\n      getSeatingPlan();\n      fetchSeatingPlan();\n    }\n  }, [exist]);\n\n  fetch = async function () {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const seatingList = await CourseService.getSeatingPlan(props.courseCode);\n    setList(seatingList);\n    if (seatingList != null) setExist(true);\n  };\n\n  const getSeatingPlan = () => {\n    for (let x = 0; x < list.length; x++) {\n      let i = list[x].rowNo;\n      let j = list[x].columnNo;\n      let id = j + i * 1;\n      let temp = data;\n      temp[id] = list[x].student.id;\n      setData(temp);\n    }\n  };\n\n  const saveStudent = event => {\n    let seatId = event.target.id;\n    let studentId = event.target.value;\n    let temp = data;\n    temp[seatId] = studentId;\n    setData(temp);\n  };\n\n  const fetchSeatingPlan = () => {\n    let table = [];\n    let parent = [];\n\n    for (let i = 0; i < rowNo; i++) {\n      let children = [];\n\n      for (let j = 0; j < columnNo; j++) {\n        let id = j + i * columnNo;\n        children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"seat\",\n            id: id,\n            onChange: saveStudent,\n            readOnly: read,\n            defaultValue: data[id]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this));\n      }\n\n      parent.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [\" \", children, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }, this));\n    }\n\n    table.push( /*#__PURE__*/_jsxDEV(\"table\", {\n      children: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this));\n    setChart(table);\n  };\n\n  const save = () => {\n    setExist(true);\n  };\n\n  const updateChart = () => {\n    setRead(false);\n  };\n\n  const handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: props.show,\n      className: \"seatingPlanForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-end\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-close\",\n          \"data-dismiss\": \"modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: exist ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [chart, /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"seatingPlanUpdate\",\n            onClick: updateChart,\n            children: [\" \", \"Update the seating plan\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(NewSeatingPlanForm, {\n          onSave: save,\n          courseCode: props.courseCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SeatingPlan, \"4XbjvjGRe1VHFivNf8gPH0vqA98=\");\n\n_c = SeatingPlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeatingPlan\");","map":{"version":3,"sources":["/Users/yagmureryilmaz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/SeatingPlan.js"],"names":["React","useEffect","useState","NewSeatingPlanForm","Modal","ModalBody","SeatingPlanService","CourseService","SeatingPlan","props","chart","setChart","data","setData","rowNo","setRowNo","columnNo","setColumnNo","read","setRead","exist","setExist","list","setList","fetch","getSeatingPlan","fetchSeatingPlan","params","seatingList","courseCode","x","length","i","j","id","temp","student","saveStudent","event","seatId","target","studentId","value","table","parent","children","push","save","updateChart","handleChange","setState","name","show"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NewSeatingPlanForm from \"./profileComponents/NewSeatingPlanForm\";\nimport { Modal } from \"react-bootstrap\";\nimport { ModalBody } from \"react-bootstrap\";\nimport SeatingPlanService from \"../../service/SeatingPlanService\";\nimport CourseService from \"../../service/CourseService\";\n\nexport default function SeatingPlan(props) {\n  const [chart, setChart] = useState([]);\n  const [data, setData] = useState([]);\n  const [rowNo, setRowNo] = useState(2);\n  const [columnNo, setColumnNo] = useState(4);\n  const [read, setRead] = useState(true);\n  const [exist, setExist] = useState(false);\n  const [list, setList] = useState();\n\n  useEffect(async () => {\n    await fetch();\n    if (exist) {\n      getSeatingPlan();\n      fetchSeatingPlan();\n    }\n  }, [exist]);\n\n  fetch = async (params = {}) => {\n    const seatingList = await CourseService.getSeatingPlan(props.courseCode);\n    setList(seatingList);\n    if (seatingList != null) setExist(true);\n  };\n\n  const getSeatingPlan = () => {\n    for (let x = 0; x < list.length; x++) {\n      let i = list[x].rowNo;\n      let j = list[x].columnNo;\n      let id = j + i * 1;\n\n      let temp = data;\n      temp[id] = list[x].student.id;\n      setData(temp);\n    }\n  };\n\n  const saveStudent = (event) => {\n    let seatId = event.target.id;\n    let studentId = event.target.value;\n    let temp = data;\n    temp[seatId] = studentId;\n    setData(temp);\n  };\n\n  const fetchSeatingPlan = () => {\n    let table = [];\n    let parent = [];\n    for (let i = 0; i < rowNo; i++) {\n      let children = [];\n      for (let j = 0; j < columnNo; j++) {\n        let id = j + i * columnNo;\n\n        children.push(\n          <td>\n            <input\n              type=\"text\"\n              name=\"seat\"\n              id={id}\n              onChange={saveStudent}\n              readOnly={read}\n              defaultValue={data[id]}\n            ></input>{\" \"}\n          </td>\n        );\n      }\n      parent.push(<tr> {children} </tr>);\n    }\n    table.push(<table>{parent}</table>);\n\n    setChart(table);\n  };\n  const save = () => {\n    setExist(true);\n  };\n\n  const updateChart = () => {\n    setRead(false);\n  };\n\n  const handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <div>\n      <Modal show={props.show} className=\"seatingPlanForm\">\n        <div className=\"row justify-content-end\">\n          {\" \"}\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            data-dismiss=\"modal\"\n          ></button>\n        </div>\n        <ModalBody>\n          {exist ? (\n            <div>\n              {chart}\n              <button id=\"seatingPlanUpdate\" onClick={updateChart}>\n                {\" \"}\n                Update the seating plan{\" \"}\n              </button>\n            </div>\n          ) : (\n            <NewSeatingPlanForm onSave={save} courseCode={props.courseCode} />\n          )}\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}