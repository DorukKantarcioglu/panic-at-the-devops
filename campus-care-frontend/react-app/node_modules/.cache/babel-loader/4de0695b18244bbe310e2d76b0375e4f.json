{"ast":null,"code":"var _jsxFileName = \"/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/SeatingPlan.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewSeatingPlanForm from \"./NewSeatingPlanForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SeatingPlan = () => {\n  _s();\n\n  const [chart, setChart] = useState([]);\n  const [data, setData] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);\n  const [rowNo, setRowNo] = useState(2);\n  const [columnNo, setColumnNo] = useState(4);\n  const [read, setRead] = useState(true);\n  const [exist, setExist] = useState(true);\n  useEffect(() => {\n    if (exist) fetchSeatingPlan();\n  }, [read, exist]);\n\n  const saveStudent = event => {\n    let seatId = event.target.id;\n    let studentId = event.target.value;\n    let temp = data;\n    temp[seatId] = studentId;\n    setData(temp);\n  };\n\n  const fetchSeatingPlan = () => {\n    let table = [];\n    let parent = [];\n\n    for (let i = 1; i <= rowNo; i++) {\n      let children = [];\n\n      for (let j = 1; j <= columnNo; j++) {\n        let id = j + i * columnNo;\n        children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"seat\",\n            id: id,\n            onChange: saveStudent,\n            readOnly: read,\n            defaultValue: data[id]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 35\n        }, this));\n      }\n\n      parent.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [\" \", children, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this));\n    }\n\n    table.push( /*#__PURE__*/_jsxDEV(\"table\", {\n      children: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 20\n    }, this));\n    setChart(table);\n  };\n\n  const save = () => {\n    setExist(true);\n  };\n\n  const updateChart = () => {\n    setRead(false);\n  };\n\n  const handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seatingPlanForm\",\n    children: exist ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [chart, /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"seatingPlanUpdate\",\n        onClick: updateChart,\n        children: \" Update the seating plan \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(NewSeatingPlanForm, {\n      onSave: save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SeatingPlan, \"djn6WFrDO2UPho8jQoJqB5WbZWw=\");\n\n_c = SeatingPlan;\nexport default SeatingPlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeatingPlan\");","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/SeatingPlan.js"],"names":["React","useEffect","useState","NewSeatingPlanForm","SeatingPlan","chart","setChart","data","setData","rowNo","setRowNo","columnNo","setColumnNo","read","setRead","exist","setExist","fetchSeatingPlan","saveStudent","event","seatId","target","id","studentId","value","temp","table","parent","i","children","j","push","save","updateChart","handleChange","setState","name"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport NewSeatingPlanForm from \"./NewSeatingPlanForm\";\n\nconst SeatingPlan =()=>\n{\n\n    const [chart, setChart] = useState([]);\n    const [data, setData] = useState([1,2,3,4,5,6,7,8,9,10,11,12]);\n    const [rowNo, setRowNo] = useState(2);\n    const [columnNo, setColumnNo] = useState(4);\n    const [read, setRead] = useState(true);\n    const [exist, setExist] = useState(true);\n\n    useEffect(()=>{\n        if(exist)\n        fetchSeatingPlan();\n    },[read, exist])\n\n    const saveStudent = (event) => {\n        let seatId = event.target.id;\n        let studentId = event.target.value;\n        let temp = data;\n        temp[seatId] = studentId;\n        setData(temp);\n    };\n\n    const fetchSeatingPlan=()=>\n    {\n        let table = [];\n        let parent = [];\n        for (let i = 1; i <= rowNo; i++)\n        {\n            let children = [];\n            for (let j = 1; j <= columnNo; j++)\n            {\n                let id = j+(i*columnNo);\n\n                    children.push(<td>\n                        <input type=\"text\" name=\"seat\" id = {id}\n                               onChange={saveStudent} readOnly={read}  defaultValue={data[id]} >\n\n                        </input> </td>);\n            }\n            parent.push(<tr> {children} </tr>);\n        }\n        table.push(<table>{parent}</table>)\n\n        setChart(table);\n    }\n    const save=()=>\n    {\n        setExist(true);\n\n    }\n\n    const updateChart=()=>{\n        setRead(false);\n    }\n\n    const handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    };\n\n\n        return(\n            <div className=\"seatingPlanForm\">\n            {exist?(<div>\n                    {chart}\n                    <button id = \"seatingPlanUpdate\" onClick={updateChart}> Update the seating plan </button>\n                    </div>\n                ):\n                    (\n                        <NewSeatingPlanForm onSave = {save}/>\n\n                    )\n            }\n            </div>\n        )\n}\n\nexport default SeatingPlan;"]},"metadata":{},"sourceType":"module"}