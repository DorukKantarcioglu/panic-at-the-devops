{"ast":null,"code":"import * as t from \"react\";\nimport { memo as e, useMemo as i, createElement as n } from \"react\";\nimport { animated as r, useSpring as a, useTransition as o } from \"@react-spring/web\";\nimport { textPropsByEngine as l, useTheme as s, useMotionConfig as c, degreesToRadians as f } from \"@nivo/core\";\nimport { timeFormat as x } from \"d3-time-format\";\nimport { format as d } from \"d3-format\";\nimport { getScaleTicks as u, centerScale as m } from \"@nivo/scales\";\nimport { jsxs as y, jsx as g, Fragment as k } from \"react/jsx-runtime\";\nimport h from \"prop-types\";\n\nfunction v() {\n  return v = Object.assign || function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var i = arguments[e];\n\n      for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]);\n    }\n\n    return t;\n  }, v.apply(this, arguments);\n}\n\nvar p = function (t) {\n  var e,\n      i = t.axis,\n      n = t.scale,\n      r = t.ticksPosition,\n      a = t.tickValues,\n      o = t.tickSize,\n      s = t.tickPadding,\n      c = t.tickRotation,\n      f = t.engine,\n      x = void 0 === f ? \"svg\" : f,\n      d = u(n, a),\n      y = l[x],\n      g = \"bandwidth\" in n ? m(n) : n,\n      k = {\n    lineX: 0,\n    lineY: 0\n  },\n      h = {\n    textX: 0,\n    textY: 0\n  },\n      p = \"object\" == typeof document && \"rtl\" === document.dir,\n      b = y.align.center,\n      P = y.baseline.center;\n  return \"x\" === i ? (e = function (t) {\n    var e;\n    return {\n      x: null != (e = g(t)) ? e : 0,\n      y: 0\n    };\n  }, k.lineY = o * (\"after\" === r ? 1 : -1), h.textY = (o + s) * (\"after\" === r ? 1 : -1), P = \"after\" === r ? y.baseline.top : y.baseline.bottom, 0 === c ? b = y.align.center : \"after\" === r && c < 0 || \"before\" === r && c > 0 ? (b = y.align[p ? \"left\" : \"right\"], P = y.baseline.center) : (\"after\" === r && c > 0 || \"before\" === r && c < 0) && (b = y.align[p ? \"right\" : \"left\"], P = y.baseline.center)) : (e = function (t) {\n    var e;\n    return {\n      x: 0,\n      y: null != (e = g(t)) ? e : 0\n    };\n  }, k.lineX = o * (\"after\" === r ? 1 : -1), h.textX = (o + s) * (\"after\" === r ? 1 : -1), b = \"after\" === r ? y.align.left : y.align.right), {\n    ticks: d.map(function (t) {\n      return v({\n        key: \"number\" == typeof t || \"string\" == typeof t ? t : \"\" + t,\n        value: t\n      }, e(t), k, h);\n    }),\n    textAlign: b,\n    textBaseline: P\n  };\n},\n    b = function (t, e) {\n  if (void 0 === t || \"function\" == typeof t) return t;\n\n  if (\"time\" === e.type) {\n    var i = x(t);\n    return function (t) {\n      return i(t instanceof Date ? t : new Date(t));\n    };\n  }\n\n  return d(t);\n},\n    P = function (t) {\n  var e,\n      i = t.width,\n      n = t.height,\n      r = t.scale,\n      a = t.axis,\n      o = t.values,\n      l = (e = o, Array.isArray(e) ? o : void 0) || u(r, o),\n      s = \"bandwidth\" in r ? m(r) : r,\n      c = \"x\" === a ? l.map(function (t) {\n    var e, i;\n    return {\n      key: \"\" + t,\n      x1: null != (e = s(t)) ? e : 0,\n      x2: null != (i = s(t)) ? i : 0,\n      y1: 0,\n      y2: n\n    };\n  }) : l.map(function (t) {\n    var e, n;\n    return {\n      key: \"\" + t,\n      x1: 0,\n      x2: i,\n      y1: null != (e = s(t)) ? e : 0,\n      y2: null != (n = s(t)) ? n : 0\n    };\n  });\n  return c;\n},\n    S = e(function (t) {\n  var e,\n      n = t.value,\n      a = t.format,\n      o = t.lineX,\n      l = t.lineY,\n      c = t.onClick,\n      f = t.textBaseline,\n      x = t.textAnchor,\n      d = t.animatedProps,\n      u = s(),\n      m = null != (e = null == a ? void 0 : a(n)) ? e : n,\n      k = i(function () {\n    var t = {\n      opacity: d.opacity\n    };\n    return c ? {\n      style: v({}, t, {\n        cursor: \"pointer\"\n      }),\n      onClick: function (t) {\n        return c(t, m);\n      }\n    } : {\n      style: t\n    };\n  }, [d.opacity, c, m]);\n  return y(r.g, v({\n    transform: d.transform\n  }, k, {\n    children: [g(\"line\", {\n      x1: 0,\n      x2: o,\n      y1: 0,\n      y2: l,\n      style: u.axis.ticks.line\n    }), g(r.text, {\n      dominantBaseline: f,\n      textAnchor: x,\n      transform: d.textTransform,\n      style: u.axis.ticks.text,\n      children: m\n    })]\n  }));\n}),\n    T = e(function (e) {\n  var n = e.axis,\n      l = e.scale,\n      f = e.x,\n      x = void 0 === f ? 0 : f,\n      d = e.y,\n      u = void 0 === d ? 0 : d,\n      m = e.length,\n      k = e.ticksPosition,\n      h = e.tickValues,\n      P = e.tickSize,\n      T = void 0 === P ? 5 : P,\n      w = e.tickPadding,\n      A = void 0 === w ? 5 : w,\n      O = e.tickRotation,\n      X = void 0 === O ? 0 : O,\n      Y = e.format,\n      W = e.renderTick,\n      B = void 0 === W ? S : W,\n      z = e.legend,\n      V = e.legendPosition,\n      C = void 0 === V ? \"end\" : V,\n      R = e.legendOffset,\n      j = void 0 === R ? 0 : R,\n      E = e.onClick,\n      D = e.ariaHidden,\n      q = s(),\n      F = i(function () {\n    return b(Y, l);\n  }, [Y, l]),\n      H = p({\n    axis: n,\n    scale: l,\n    ticksPosition: k,\n    tickValues: h,\n    tickSize: T,\n    tickPadding: A,\n    tickRotation: X\n  }),\n      N = H.ticks,\n      I = H.textAlign,\n      G = H.textBaseline,\n      J = null;\n\n  if (void 0 !== z) {\n    var K,\n        L = 0,\n        M = 0,\n        Q = 0;\n    \"y\" === n ? (Q = -90, L = j, \"start\" === C ? (K = \"start\", M = m) : \"middle\" === C ? (K = \"middle\", M = m / 2) : \"end\" === C && (K = \"end\")) : (M = j, \"start\" === C ? K = \"start\" : \"middle\" === C ? (K = \"middle\", L = m / 2) : \"end\" === C && (K = \"end\", L = m)), J = g(\"text\", {\n      transform: \"translate(\" + L + \", \" + M + \") rotate(\" + Q + \")\",\n      textAnchor: K,\n      style: v({\n        dominantBaseline: \"central\"\n      }, q.axis.legend.text),\n      children: z\n    });\n  }\n\n  var U = c(),\n      Z = U.animate,\n      $ = U.config,\n      _ = a({\n    transform: \"translate(\" + x + \",\" + u + \")\",\n    lineX2: \"x\" === n ? m : 0,\n    lineY2: \"x\" === n ? 0 : m,\n    config: $,\n    immediate: !Z\n  }),\n      tt = o(N, {\n    keys: function (t) {\n      return t.key;\n    },\n    initial: function (t) {\n      return {\n        opacity: 1,\n        transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n        textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + X + \")\"\n      };\n    },\n    from: function (t) {\n      return {\n        opacity: 0,\n        transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n        textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + X + \")\"\n      };\n    },\n    enter: function (t) {\n      return {\n        opacity: 1,\n        transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n        textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + X + \")\"\n      };\n    },\n    update: function (t) {\n      return {\n        opacity: 1,\n        transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n        textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + X + \")\"\n      };\n    },\n    leave: {\n      opacity: 0\n    },\n    config: $,\n    immediate: !Z\n  });\n\n  return y(r.g, {\n    transform: _.transform,\n    \"aria-hidden\": D,\n    children: [tt(function (e, i, n, r) {\n      return t.createElement(B, v({\n        tickIndex: r,\n        format: F,\n        rotate: X,\n        textBaseline: G,\n        textAnchor: I,\n        animatedProps: e\n      }, i, E ? {\n        onClick: E\n      } : {}));\n    }), g(r.line, {\n      style: q.axis.domain.line,\n      x1: 0,\n      x2: _.lineX2,\n      y1: 0,\n      y2: _.lineY2\n    }), J]\n  });\n}),\n    w = {\n  ticksPosition: h.oneOf([\"before\", \"after\"]),\n  tickValues: h.oneOfType([h.number, h.arrayOf(h.oneOfType([h.number, h.string, h.instanceOf(Date)])), h.string]),\n  tickSize: h.number,\n  tickPadding: h.number,\n  tickRotation: h.number,\n  format: h.oneOfType([h.func, h.string]),\n  renderTick: h.func,\n  legend: h.node,\n  legendPosition: h.oneOf([\"start\", \"middle\", \"end\"]),\n  legendOffset: h.number,\n  ariaHidden: h.bool\n},\n    A = h.shape(w),\n    O = [\"top\", \"right\", \"bottom\", \"left\"],\n    X = e(function (t) {\n  var e = t.xScale,\n      i = t.yScale,\n      n = t.width,\n      r = t.height,\n      a = {\n    top: t.top,\n    right: t.right,\n    bottom: t.bottom,\n    left: t.left\n  };\n  return g(k, {\n    children: O.map(function (t) {\n      var o = a[t];\n      if (!o) return null;\n      var l = \"top\" === t || \"bottom\" === t;\n      return g(T, v({}, o, {\n        axis: l ? \"x\" : \"y\",\n        x: \"right\" === t ? n : 0,\n        y: \"bottom\" === t ? r : 0,\n        scale: l ? e : i,\n        length: l ? n : r,\n        ticksPosition: \"top\" === t || \"left\" === t ? \"before\" : \"after\"\n      }), t);\n    })\n  });\n}),\n    Y = e(function (t) {\n  var e = t.animatedProps,\n      i = s();\n  return g(r.line, v({}, e, i.grid.line));\n}),\n    W = e(function (t) {\n  var e = t.lines,\n      i = c(),\n      r = i.animate,\n      a = i.config,\n      l = o(e, {\n    keys: function (t) {\n      return t.key;\n    },\n    initial: function (t) {\n      return {\n        opacity: 1,\n        x1: t.x1,\n        x2: t.x2,\n        y1: t.y1,\n        y2: t.y2\n      };\n    },\n    from: function (t) {\n      return {\n        opacity: 0,\n        x1: t.x1,\n        x2: t.x2,\n        y1: t.y1,\n        y2: t.y2\n      };\n    },\n    enter: function (t) {\n      return {\n        opacity: 1,\n        x1: t.x1,\n        x2: t.x2,\n        y1: t.y1,\n        y2: t.y2\n      };\n    },\n    update: function (t) {\n      return {\n        opacity: 1,\n        x1: t.x1,\n        x2: t.x2,\n        y1: t.y1,\n        y2: t.y2\n      };\n    },\n    leave: {\n      opacity: 0\n    },\n    config: a,\n    immediate: !r\n  });\n  return g(\"g\", {\n    children: l(function (t, e) {\n      return n(Y, v({}, e, {\n        key: e.key,\n        animatedProps: t\n      }));\n    })\n  });\n}),\n    B = e(function (t) {\n  var e = t.width,\n      n = t.height,\n      r = t.xScale,\n      a = t.yScale,\n      o = t.xValues,\n      l = t.yValues,\n      s = i(function () {\n    return !!r && P({\n      width: e,\n      height: n,\n      scale: r,\n      axis: \"x\",\n      values: o\n    });\n  }, [r, o, e, n]),\n      c = i(function () {\n    return !!a && P({\n      width: e,\n      height: n,\n      scale: a,\n      axis: \"y\",\n      values: l\n    });\n  }, [n, e, a, l]);\n  return y(k, {\n    children: [s && g(W, {\n      lines: s\n    }), c && g(W, {\n      lines: c\n    })]\n  });\n}),\n    z = function (t, e) {\n  var i,\n      n = e.axis,\n      r = e.scale,\n      a = e.x,\n      o = void 0 === a ? 0 : a,\n      l = e.y,\n      s = void 0 === l ? 0 : l,\n      c = e.length,\n      x = e.ticksPosition,\n      d = e.tickValues,\n      u = e.tickSize,\n      m = void 0 === u ? 5 : u,\n      y = e.tickPadding,\n      g = void 0 === y ? 5 : y,\n      k = e.tickRotation,\n      h = void 0 === k ? 0 : k,\n      v = e.format,\n      b = e.legend,\n      P = e.legendPosition,\n      S = void 0 === P ? \"end\" : P,\n      T = e.legendOffset,\n      w = void 0 === T ? 0 : T,\n      A = e.theme,\n      O = p({\n    axis: n,\n    scale: r,\n    ticksPosition: x,\n    tickValues: d,\n    tickSize: m,\n    tickPadding: g,\n    tickRotation: h,\n    engine: \"canvas\"\n  }),\n      X = O.ticks,\n      Y = O.textAlign,\n      W = O.textBaseline;\n  t.save(), t.translate(o, s), t.textAlign = Y, t.textBaseline = W, t.font = (A.axis.ticks.text.fontWeight ? A.axis.ticks.text.fontWeight + \" \" : \"\") + A.axis.ticks.text.fontSize + \"px \" + A.axis.ticks.text.fontFamily, (null != (i = A.axis.domain.line.strokeWidth) ? i : 0) > 0 && (t.lineWidth = Number(A.axis.domain.line.strokeWidth), t.lineCap = \"square\", A.axis.domain.line.stroke && (t.strokeStyle = A.axis.domain.line.stroke), t.beginPath(), t.moveTo(0, 0), t.lineTo(\"x\" === n ? c : 0, \"x\" === n ? 0 : c), t.stroke());\n  var B = \"function\" == typeof v ? v : function (t) {\n    return \"\" + t;\n  };\n\n  if (X.forEach(function (e) {\n    var i;\n    (null != (i = A.axis.ticks.line.strokeWidth) ? i : 0) > 0 && (t.lineWidth = Number(A.axis.ticks.line.strokeWidth), t.lineCap = \"square\", A.axis.ticks.line.stroke && (t.strokeStyle = A.axis.ticks.line.stroke), t.beginPath(), t.moveTo(e.x, e.y), t.lineTo(e.x + e.lineX, e.y + e.lineY), t.stroke());\n    var n = B(e.value);\n    t.save(), t.translate(e.x + e.textX, e.y + e.textY), t.rotate(f(h)), A.axis.ticks.text.fill && (t.fillStyle = A.axis.ticks.text.fill), t.fillText(String(n), 0, 0), t.restore();\n  }), void 0 !== b) {\n    var z = 0,\n        V = 0,\n        C = 0,\n        R = \"center\";\n    \"y\" === n ? (C = -90, z = w, \"start\" === S ? (R = \"start\", V = c) : \"middle\" === S ? (R = \"center\", V = c / 2) : \"end\" === S && (R = \"end\")) : (V = w, \"start\" === S ? R = \"start\" : \"middle\" === S ? (R = \"center\", z = c / 2) : \"end\" === S && (R = \"end\", z = c)), t.translate(z, V), t.rotate(f(C)), t.font = (A.axis.legend.text.fontWeight ? A.axis.legend.text.fontWeight + \" \" : \"\") + A.axis.legend.text.fontSize + \"px \" + A.axis.legend.text.fontFamily, A.axis.legend.text.fill && (t.fillStyle = A.axis.legend.text.fill), t.textAlign = R, t.textBaseline = \"middle\", t.fillText(b, 0, 0);\n  }\n\n  t.restore();\n},\n    V = function (t, e) {\n  var i = e.xScale,\n      n = e.yScale,\n      r = e.width,\n      a = e.height,\n      o = e.top,\n      l = e.right,\n      s = e.bottom,\n      c = e.left,\n      f = e.theme,\n      x = {\n    top: o,\n    right: l,\n    bottom: s,\n    left: c\n  };\n  O.forEach(function (e) {\n    var o = x[e];\n    if (!o) return null;\n    var l = \"top\" === e || \"bottom\" === e,\n        s = \"top\" === e || \"left\" === e ? \"before\" : \"after\",\n        c = l ? i : n,\n        d = b(o.format, c);\n    z(t, v({}, o, {\n      axis: l ? \"x\" : \"y\",\n      x: \"right\" === e ? r : 0,\n      y: \"bottom\" === e ? a : 0,\n      scale: c,\n      format: d,\n      length: l ? r : a,\n      ticksPosition: s,\n      theme: f\n    }));\n  });\n},\n    C = function (t, e) {\n  var i = e.width,\n      n = e.height,\n      r = e.scale,\n      a = e.axis,\n      o = e.values;\n  P({\n    width: i,\n    height: n,\n    scale: r,\n    axis: a,\n    values: o\n  }).forEach(function (e) {\n    t.beginPath(), t.moveTo(e.x1, e.y1), t.lineTo(e.x2, e.y2), t.stroke();\n  });\n};\n\nexport { X as Axes, T as Axis, S as AxisTick, B as Grid, Y as GridLine, W as GridLines, A as axisPropType, w as axisPropTypes, O as positions, V as renderAxesToCanvas, z as renderAxisToCanvas, C as renderGridLinesToCanvas };","map":{"version":3,"sources":["../src/compute.ts","../src/components/AxisTick.tsx","../src/components/Axis.tsx","../src/props.ts","../src/components/Axes.tsx","../src/components/GridLine.tsx","../src/components/GridLines.tsx","../src/components/Grid.tsx","../src/canvas.ts"],"names":["value","Array","isArray","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","line","lineX","lineY","text","textX","textY","isRTL","document","dir","translate","textAlign","align","center","textBaseline","baseline","x","d","y","top","bottom","left","right","map","key","ticks","getFormatter","format","type","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","undefined","lines","x1","x2","y1","y2","_value","onClick","textAnchor","animatedProps","theme","useTheme","props","useMemo","style","opacity","cursor","event","_jsxs","animated","g","transform","_jsx","dominantBaseline","textTransform","memoizedAxisTick","memo","length","renderTick","AxisTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","animate","config","springConfig","useMotionConfig","useSpring","lineX2","lineY2","immediate","transition","useTransition","keys","tick","initial","from","enter","update","leave","transitionProps","_state","tickIndex","React","createElement","rotate","domain","memoizedAxis","axisPropTypes","PropTypes","oneOf","oneOfType","number","arrayOf","string","instanceOf","func","node","bool","axisPropType","shape","positions","Axes","xScale","yScale","axes","isXAxis","Axis","GridLine","grid","GridLines","_createElement","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","ctx","_format","save","font","fontWeight","fontSize","fontFamily","strokeWidth","lineWidth","Number","lineCap","stroke","strokeStyle","beginPath","moveTo","lineTo","forEach","degreesToRadians","fill","fillStyle","fillText","String","restore","renderAxesToCanvas","renderGridLinesToCanvas"],"mappings":"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","sourcesContent":["import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n"]},"metadata":{},"sourceType":"module"}