{"ast":null,"code":"/*import axios from \"axios\";\n\nconst InstructorService =(function () {\n    \n    const _getAllInstructors=async()=>\n    {\n        const response = await axios.get(\"http://localhost:8080/api/v1/instructors\");\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _createInstructor=async(instructor)=>\n    {\n        const response = await axios.post(\"http://localhost:8080/api/v1/instructors\", {\n            id: instructor.id,\n            name: instructor.name,\n            email: instructor.email,\n            hesCode: instructor.hesCode,\n            coursesGiven: instructor.coursesGiven\n        });\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _getInstructorById=async(id)=>\n    {\n        const url = \"http://localhost:8080/api/v1/instructors\".concat(id);\n        const response = await axios.get(url);\n        if (response) {\n            return response.data;\n        }\n    }\n    \n    const _getInstructorByHesCode=async(hesCode)=>\n    {\n        const response = await axios.get(\"http://localhost:8080/api/v1/instructors\", { headers:{\n                \"hesCode\": {hesCode}.toString()\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _updateHesCode = async (id, hesCode)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id)\n        const response = await axios.patch(url,{}, {headers: {\n                \"hesCode\": hesCode\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _getNotAllowedStudents =async(courseCode)=>\n    {\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.get(url,{}, {headers: {\n                \"courseCode\": courseCode\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _deleteInstructor = async (id)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.delete(url)\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _addCourse =async(courseCode)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.patch(url,{}, {headers: {\n                \"courseCode\": courseCode\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _deleteCourse =async(courseCode)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.delete(url,{}, {headers: {\n                \"courseCode\": courseCode\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n\n    return(\n        {\n            createInstructor: _createInstructor,\n            getAllInstructors: _getAllInstructors,\n            getInstructorById: _getInstructorById,\n            getInstructorByHesCode: _getInstructorByHesCode,\n            updateHesCode: _updateHesCode,\n            getNotAllowedStudents: _getNotAllowedStudents,\n            deleteInstructor: _deleteInstructor,\n            addCourse: _addCourse,\n            deleteCourse: _deleteCourse\n        }\n    );\n\n})();\nexport default InstructorService;\n*/","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/service/InstructorService.js"],"names":[],"mappingssourcesContent":["/*import axios from \"axios\";\n\nconst InstructorService =(function () {\n    \n    const _getAllInstructors=async()=>\n    {\n        const response = await axios.get(\"http://localhost:8080/api/v1/instructors\");\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _createInstructor=async(instructor)=>\n    {\n        const response = await axios.post(\"http://localhost:8080/api/v1/instructors\", {\n            id: instructor.id,\n            name: instructor.name,\n            email: instructor.email,\n            hesCode: instructor.hesCode,\n            coursesGiven: instructor.coursesGiven\n        });\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _getInstructorById=async(id)=>\n    {\n        const url = \"http://localhost:8080/api/v1/instructors\".concat(id);\n        const response = await axios.get(url);\n        if (response) {\n            return response.data;\n        }\n    }\n    \n    const _getInstructorByHesCode=async(hesCode)=>\n    {\n        const response = await axios.get(\"http://localhost:8080/api/v1/instructors\", { headers:{\n                \"hesCode\": {hesCode}.toString()\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _updateHesCode = async (id, hesCode)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id)\n        const response = await axios.patch(url,{}, {headers: {\n                \"hesCode\": hesCode\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _getNotAllowedStudents =async(courseCode)=>\n    {\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.get(url,{}, {headers: {\n                \"courseCode\": courseCode\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _deleteInstructor = async (id)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.delete(url)\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _addCourse =async(courseCode)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.patch(url,{}, {headers: {\n                \"courseCode\": courseCode\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _deleteCourse =async(courseCode)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.delete(url,{}, {headers: {\n                \"courseCode\": courseCode\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n\n    return(\n        {\n            createInstructor: _createInstructor,\n            getAllInstructors: _getAllInstructors,\n            getInstructorById: _getInstructorById,\n            getInstructorByHesCode: _getInstructorByHesCode,\n            updateHesCode: _updateHesCode,\n            getNotAllowedStudents: _getNotAllowedStudents,\n            deleteInstructor: _deleteInstructor,\n            addCourse: _addCourse,\n            deleteCourse: _deleteCourse\n        }\n    );\n\n})();\nexport default InstructorService;\n*/\n"]},"metadata":{},"sourceType":"module"}