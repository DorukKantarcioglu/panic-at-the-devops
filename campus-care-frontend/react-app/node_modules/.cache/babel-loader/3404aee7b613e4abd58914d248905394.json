{"ast":null,"code":"import axios from \"axios\";\nimport LocalStorageService from \"./LocalStorageService\";\nimport StudentService from \"./StudentService\";\n\nconst InstructorService = function () {\n  const _getAllInstructors = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/instructors\");\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _createInstructor = async instructor => {\n    const response = await axios.post(\"http://localhost:8080/api/v1/instructors\", {\n      id: instructor.id,\n      name: instructor.name,\n      email: instructor.email,\n      hesCode: instructor.hesCode,\n      coursesGiven: instructor.coursesGiven\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getInstructorById = async id => {\n    const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    } else {\n      console.log(\"else\");\n      return StudentService.getStudentById(id);\n    }\n  };\n\n  const _getInstructorByHesCode = async hesCode => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/instructors\", {\n      headers: {\n        \"hesCode\": {\n          hesCode\n        }.toString(),\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _updateHesCode = async (id, hesCode) => {\n    const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n    const response = await axios.patch(url, {}, {\n      headers: {\n        \"hesCode\": hesCode,\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotAllowedStudents = async (courseCode, id) => {\n    const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n    const response = await axios.get(url, {}, {\n      headers: {\n        \"courseCode\": courseCode,\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _deleteInstructor = async id => {\n    const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n    const response = await axios.delete(url, {\n      headers: {\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _addCourse = async (courseCode, id) => {\n    const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n    const response = await axios.patch(url, {}, {\n      headers: {\n        \"courseCode\": courseCode,\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _deleteCourse = async (courseCode, id) => {\n    const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n    const response = await axios.delete(url, {}, {\n      headers: {\n        \"courseCode\": courseCode,\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getCourses = async id => {\n    const url = \"http://localhost:8080/api/v1/instructors/\".concat(id).concat(\"/courses\");\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotifications = async id => {\n    const url = \"http://localhost:8080/api/v1/instructors/\" + id + \"/notifications\";\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  return {\n    createInstructor: _createInstructor,\n    getAllInstructors: _getAllInstructors,\n    getInstructorById: _getInstructorById,\n    getInstructorByHesCode: _getInstructorByHesCode,\n    updateHesCode: _updateHesCode,\n    getNotAllowedStudents: _getNotAllowedStudents,\n    deleteInstructor: _deleteInstructor,\n    addCourse: _addCourse,\n    deleteCourse: _deleteCourse,\n    getCourses: _getCourses,\n    getNotifications: _getNotifications\n  };\n}();\n\nexport default InstructorService;","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/service/InstructorService.js"],"names":["axios","LocalStorageService","StudentService","InstructorService","_getAllInstructors","response","get","data","_createInstructor","instructor","post","id","name","email","hesCode","coursesGiven","_getInstructorById","url","concat","headers","Authorization","getToken","console","log","getStudentById","_getInstructorByHesCode","toString","_updateHesCode","patch","_getNotAllowedStudents","courseCode","_deleteInstructor","delete","_addCourse","_deleteCourse","_getCourses","_getNotifications","createInstructor","getAllInstructors","getInstructorById","getInstructorByHesCode","updateHesCode","getNotAllowedStudents","deleteInstructor","addCourse","deleteCourse","getCourses","getNotifications"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport LocalStorageService from \"./LocalStorageService\";\nimport StudentService from \"./StudentService\";\n\nconst InstructorService =(function () {\n    \n    const _getAllInstructors=async()=>\n    {\n        const response = await axios.get(\"http://localhost:8080/api/v1/instructors\");\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _createInstructor=async(instructor)=>\n    {\n        const response = await axios.post(\"http://localhost:8080/api/v1/instructors\", {\n            id: instructor.id,\n            name: instructor.name,\n            email: instructor.email,\n            hesCode: instructor.hesCode,\n            coursesGiven: instructor.coursesGiven\n        });\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _getInstructorById=async(id)=>\n    {\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.get(url, {headers:{Authorization : \"Bearer \" + LocalStorageService.getToken()}});\n        if (response) {\n\n            return response.data;\n        }\n        else {\n            console.log(\"else\")\n            return StudentService.getStudentById(id);\n        }\n    }\n    \n    const _getInstructorByHesCode=async(hesCode)=>\n    {\n        const response = await axios.get(\"http://localhost:8080/api/v1/instructors\", { headers:{\n                \"hesCode\": {hesCode}.toString(),\n                Authorization : \"Bearer \" + LocalStorageService.getToken()\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _updateHesCode = async (id, hesCode)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id)\n        const response = await axios.patch(url,{}, {headers: {\n                \"hesCode\": hesCode,\n                Authorization : \"Bearer \" + LocalStorageService.getToken()\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _getNotAllowedStudents =async(courseCode, id)=>\n    {\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.get(url,{}, {headers: {\n                \"courseCode\": courseCode,\n                Authorization : \"Bearer \" + LocalStorageService.getToken()\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _deleteInstructor = async (id)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.delete(url, {headers:{Authorization : \"Bearer \" + LocalStorageService.getToken()}})\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _addCourse =async(courseCode, id)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.patch(url,{}, {headers: {\n                \"courseCode\": courseCode,\n                Authorization : \"Bearer \" + LocalStorageService.getToken()\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _deleteCourse =async(courseCode, id)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.delete(url,{}, {headers: {\n                \"courseCode\": courseCode,\n                Authorization : \"Bearer \" + LocalStorageService.getToken()\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _getCourses=async (id) => {\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id).concat(\"/courses\");\n        const response = await axios.get(url, {headers:{\n                Authorization : \"Bearer \" + LocalStorageService.getToken()\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n    const _getNotifications=async (id) => {\n        const url = \"http://localhost:8080/api/v1/instructors/\" + id + \"/notifications\"\n        const response = await axios.get(url, {\n            headers: {\n                Authorization: \"Bearer \" + LocalStorageService.getToken()\n            }\n        })\n        if (response) {\n            return response.data;\n        }\n    }\n\n    return(\n        {\n            createInstructor: _createInstructor,\n            getAllInstructors: _getAllInstructors,\n            getInstructorById: _getInstructorById,\n            getInstructorByHesCode: _getInstructorByHesCode,\n            updateHesCode: _updateHesCode,\n            getNotAllowedStudents: _getNotAllowedStudents,\n            deleteInstructor: _deleteInstructor,\n            addCourse: _addCourse,\n            deleteCourse: _deleteCourse,\n            getCourses: _getCourses,\n            getNotifications: _getNotifications\n        }\n    );\n\n})();\nexport default InstructorService;\n\n"]},"metadata":{},"sourceType":"module"}