{"ast":null,"code":"var _jsxFileName = \"/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/loginComponents/ForgotPasswordForm.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button, Card, App, Modal } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport React from \"react\";\nimport LocalStorageService from \"../../../service/LocalStorageService\";\nimport axios from \"axios\";\nimport Dashboard from \"../../Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForgotPasswordForm(props) {\n  _s();\n\n  const [yes, setYes] = useState(false);\n  const [email, showEmail] = useState(true);\n  const [newPasswordForm, showNewPasswordForm] = useState(false);\n  const [verification, showVerification] = useState(false);\n  const [credentials, setCredentials] = useState({});\n  const history = useHistory();\n  useEffect(() => {\n    setYes(props.show);\n    console.log(props.show);\n  }, []);\n\n  const verifyCode = () => {\n    showNewPasswordForm(true);\n    showVerification(false);\n  };\n\n  const changePassword = () => {};\n\n  const handleClose = () => {\n    setYes(false);\n  };\n\n  const handleEmail = () => {\n    showEmail(false);\n    showVerification(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: yes,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"e-mail\",\n        class: \"col-form-label\",\n        hidden: !email,\n        children: \"E-mail:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"e-mail\",\n        hidden: !email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"verificationCode\",\n        class: \"col-form-label\",\n        hidden: !verification,\n        children: \"VerificationCode:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"verificationCode\",\n        hidden: !verification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        hidden: !newPasswordForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter your new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"inputPassword2\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Reenter your new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"inputPassword2\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: changePassword,\n          children: \"Change password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: email ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEmail,\n          children: \" Send Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: verifyCode,\n          children: \"Verify Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ForgotPasswordForm, \"3k3DM1yIYqQF9hcdwTmW/AL1zt8=\", false, function () {\n  return [useHistory];\n});\n\n_c = ForgotPasswordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordForm\");","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/loginComponents/ForgotPasswordForm.js"],"names":["Form","Button","Card","App","Modal","useEffect","useState","useHistory","React","LocalStorageService","axios","Dashboard","ForgotPasswordForm","props","yes","setYes","email","showEmail","newPasswordForm","showNewPasswordForm","verification","showVerification","credentials","setCredentials","history","show","console","log","verifyCode","changePassword","handleClose","handleEmail"],"mappings":"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","sourcesContent":["import { Form, Button, Card, App, Modal } from \"react-bootstrap\";\nimport {useEffect, useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport React from \"react\";\nimport LocalStorageService from \"../../../service/LocalStorageService\";\nimport axios from \"axios\";\nimport Dashboard from \"../../Dashboard\";\nexport default function ForgotPasswordForm(props) {\n\n\n  const [yes, setYes] = useState(false);\n  const [email, showEmail] = useState(true);\n  const [newPasswordForm, showNewPasswordForm] = useState(false);\n  const [verification, showVerification] = useState(false);\n  const [credentials, setCredentials] = useState({});\n  const history = useHistory();\n\n\n  useEffect(()=>{\n    setYes(props.show)\n    console.log(props.show)\n  }, [])\n\n  const verifyCode=()=>{\n    showNewPasswordForm(true);\n    showVerification(false);\n\n  }\n\n  const changePassword=()=>{\n  }\n\n  const handleClose = () => {\n    setYes(false);\n  };\n\n  const handleEmail = () => {\n    showEmail(false);\n    showVerification(true);\n  };\n\n\n\n\n  return (\n\n      <Modal show={yes} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Change Password</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {\" \"}\n          <label for=\"e-mail\" class=\"col-form-label\" hidden={!email}>\n            E-mail:\n          </label>\n          <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"e-mail\"\n              hidden={!email}\n          />\n          <label\n              for=\"verificationCode\"\n              class=\"col-form-label\"\n              hidden={!verification}\n          >\n            VerificationCode:\n          </label>\n          <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"verificationCode\"\n              hidden={!verification}\n          />\n          <div hidden={!newPasswordForm}>\n            <label >Enter your new password</label>\n            <input type=\"password\" className=\"form-control\" id=\"inputPassword2\" placeholder=\"Password\"/>\n            <label >Reenter your new password</label>\n            <input type=\"password\" className=\"form-control\" id=\"inputPassword2\" placeholder=\"Password\"/>\n            <Button onClick = {changePassword}>Change password</Button>\n          </div>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <div>\n            {email ? (\n                <Button onClick={handleEmail}> Send Email</Button>\n            ) : (\n                <Button onClick={verifyCode}>Verify Code</Button>\n            )}\n          </div>\n        </Modal.Footer>\n      </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}