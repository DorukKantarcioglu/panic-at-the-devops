{"ast":null,"code":"import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport AxiosConfigurer from \"./AxiosConfigurer\";\nimport LocalStorageService from \"./LocalStorageService\";\n\nconst CourseService = function () {\n  const path = \"http://localhost:8080/api/v1/courses\";\n\n  const _getAllCourses = async () => {\n    AxiosConfigurer.configure();\n    const response = await axios.get(path, {\n      headers: {\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getCourseById = async id => {\n    const url = path.concat(\"/\").concat(id);\n    const response = await axios.get(url);\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getStudentList = async courseCode => {\n    let url = path.concat(\"/\").concat(courseCode);\n    const response = await axios.get(url.concat(\"/studentList\"));\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _addSeatingPlan = async (seatingPlanId, courseCode) => {\n    console.log(seatingPlanId);\n    debugger;\n    const response = await axios.patch(path.concat(\"/\").concat(courseCode).concat(\"/seatingPlan\"), {}, {\n      headers: {\n        seatingPlanId: seatingPlanId\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getSeatingPlan = async courseCode => {\n    const response = await axios.get(path.concat(\"/\").concat(courseCode).concat(\"/seatingPlan\"));\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  return {\n    getCourseById: _getCourseById,\n    getAllCourses: _getAllCourses,\n    getStudentList: _getStudentList,\n    getSeatingPlan: _getSeatingPlan,\n    addSeatingPlan: _addSeatingPlan\n  };\n}();\n\nexport default CourseService;","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/service/CourseService.js"],"names":["axios","useEffect","AxiosConfigurer","LocalStorageService","CourseService","path","_getAllCourses","configure","response","get","headers","Authorization","getToken","data","_getCourseById","id","url","concat","_getStudentList","courseCode","_addSeatingPlan","seatingPlanId","console","log","patch","_getSeatingPlan","getCourseById","getAllCourses","getStudentList","getSeatingPlan","addSeatingPlan"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;AAEA,MAAMC,aAAa,GAAI,YAAY;AAKjC,QAAMC,IAAI,GAAG,sCAAb;;AAEA,QAAMC,cAAc,GAAG,YAAY;AACjCJ,IAAAA,eAAe,CAACK,SAAhB;AAEA,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUJ,IAAV,EAAgB;AACrCK,MAAAA,OAAO,EAAC;AACNC,QAAAA,aAAa,EAAG,YAAYR,mBAAmB,CAACS,QAApB;AADtB;AAD6B,KAAhB,CAAvB;;AAMA,QAAIJ,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAZD;;AAcA,QAAMC,cAAc,GAAG,MAAOC,EAAP,IAAc;AACnC,UAAMC,GAAG,GAAGX,IAAI,CAACY,MAAL,CAAY,GAAZ,EAAiBA,MAAjB,CAAwBF,EAAxB,CAAZ;AACA,UAAMP,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUO,GAAV,CAAvB;;AACA,QAAIR,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAND;;AAQA,QAAMK,eAAe,GAAG,MAAOC,UAAP,IAAsB;AAC5C,QAAIH,GAAG,GAAGX,IAAI,CAACY,MAAL,CAAY,GAAZ,EAAiBA,MAAjB,CAAwBE,UAAxB,CAAV;AACA,UAAMX,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUO,GAAG,CAACC,MAAJ,CAAW,cAAX,CAAV,CAAvB;;AACA,QAAIT,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAND;;AAQA,QAAMO,eAAe,GAAC,OAAOC,aAAP,EAAsBF,UAAtB,KAAqC;AACzDG,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACA;AACA,UAAMb,QAAQ,GAAG,MAAMR,KAAK,CAACwB,KAAN,CAAYnB,IAAI,CAACY,MAAL,CAAY,GAAZ,EAAiBA,MAAjB,CAAwBE,UAAxB,EAAoCF,MAApC,CAA2C,cAA3C,CAAZ,EAAuE,EAAvE,EAA2E;AAChGP,MAAAA,OAAO,EAAE;AACPW,QAAAA,aAAa,EAAEA;AADR;AADuF,KAA3E,CAAvB;;AAMA,QAAIb,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAZD;;AAcA,QAAMY,eAAe,GAAC,MAAON,UAAP,IAAsB;AAE1C,UAAMX,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUJ,IAAI,CAACY,MAAL,CAAY,GAAZ,EAAiBA,MAAjB,CAAwBE,UAAxB,EAAoCF,MAApC,CAA2C,cAA3C,CAAV,CAAvB;;AACA,QAAIT,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAND;;AASA,SAAO;AACLa,IAAAA,aAAa,EAAEZ,cADV;AAELa,IAAAA,aAAa,EAAErB,cAFV;AAGLsB,IAAAA,cAAc,EAAEV,eAHX;AAILW,IAAAA,cAAc,EAAEJ,eAJX;AAKLK,IAAAA,cAAc,EAAEV;AALX,GAAP;AAOD,CAnEqB,EAAtB;;AAqEA,eAAehB,aAAf","sourcesContent":["import axios from \"axios\";\nimport {useEffect} from \"react\";\nimport AxiosConfigurer from \"./AxiosConfigurer\";\nimport LocalStorageService from \"./LocalStorageService\";\n\nconst CourseService = (function () {\n\n\n\n\n  const path = \"http://localhost:8080/api/v1/courses\"\n\n  const _getAllCourses = async () => {\n    AxiosConfigurer.configure()\n\n    const response = await axios.get(path, {\n      headers:{\n        Authorization : \"Bearer \" + LocalStorageService.getToken()\n      }\n          \n    });\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getCourseById = async (id) => {\n    const url = path.concat(\"/\").concat(id);\n    const response = await axios.get(url);\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getStudentList = async (courseCode) => {\n    let url = path.concat(\"/\").concat(courseCode);\n    const response = await axios.get(url.concat(\"/studentList\"));\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _addSeatingPlan=async (seatingPlanId, courseCode) => {\n    console.log(seatingPlanId)\n    debugger\n    const response = await axios.patch(path.concat(\"/\").concat(courseCode).concat(\"/seatingPlan\"),{}, {\n      headers: {\n        seatingPlanId: seatingPlanId\n      }\n    })\n\n    if (response) {\n      return response.data;\n    }\n  }\n\n  const _getSeatingPlan=async (courseCode) => {\n\n    const response = await axios.get(path.concat(\"/\").concat(courseCode).concat(\"/seatingPlan\"));\n    if (response) {\n      return response.data;\n    }\n  }\n\n\n  return {\n    getCourseById: _getCourseById,\n    getAllCourses: _getAllCourses,\n    getStudentList: _getStudentList,\n    getSeatingPlan: _getSeatingPlan,\n    addSeatingPlan: _addSeatingPlan\n  };\n})();\n\nexport default CourseService;\n"]},"metadata":{},"sourceType":"module"}