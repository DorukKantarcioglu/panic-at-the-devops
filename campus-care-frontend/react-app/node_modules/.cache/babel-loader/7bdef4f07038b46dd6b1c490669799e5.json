{"ast":null,"code":"import { useMemo as n, Fragment as e, createElement as i, useRef as o, useState as t, useCallback as r } from \"react\";\nimport { Container as l, useDimensions as u, SvgWrapper as a, ResponsiveWrapper as d, getRelativeCursor as s } from \"@nivo/core\";\nimport { scaleLinear as c } from \"d3-scale\";\nimport { Delaunay as h } from \"d3-delaunay\";\nimport { jsx as f, jsxs as v, Fragment as p } from \"react/jsx-runtime\";\n\nfunction m() {\n  return m = Object.assign || function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var i = arguments[e];\n\n      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);\n    }\n\n    return n;\n  }, m.apply(this, arguments);\n}\n\nvar y = {\n  xDomain: [0, 1],\n  yDomain: [0, 1],\n  layers: [\"links\", \"cells\", \"points\", \"bounds\"],\n  enableLinks: !1,\n  linkLineWidth: 1,\n  linkLineColor: \"#bbbbbb\",\n  enableCells: !0,\n  cellLineWidth: 2,\n  cellLineColor: \"#000000\",\n  enablePoints: !0,\n  pointSize: 4,\n  pointColor: \"#666666\",\n  role: \"img\"\n},\n    g = function (n) {\n  return \"function\" == typeof n ? n : function (e) {\n    return e[n];\n  };\n},\n    b = function (n) {\n  var e = n.points,\n      i = n.x,\n      o = void 0 === i ? \"x\" : i,\n      t = n.y,\n      r = void 0 === t ? \"y\" : t,\n      l = g(o),\n      u = g(r);\n  return e.map(function (n) {\n    return [l(n), u(n)];\n  });\n},\n    k = function (n) {\n  var e = n.points,\n      i = n.width,\n      o = n.height,\n      t = n.debug,\n      r = h.from(e),\n      l = t ? r.voronoi([0, 0, i, o]) : void 0;\n  return {\n    delaunay: r,\n    voronoi: l\n  };\n},\n    x = function (e) {\n  var i = e.points,\n      o = e.x,\n      t = e.y,\n      r = e.width,\n      l = e.height,\n      u = e.debug,\n      a = n(function () {\n    return b({\n      points: i,\n      x: o,\n      y: t\n    });\n  }, [i, o, t]);\n  return n(function () {\n    return k({\n      points: a,\n      width: r,\n      height: l,\n      debug: u\n    });\n  }, [a, r, l, u]);\n},\n    C = function (e) {\n  var i = e.data,\n      o = e.width,\n      t = e.height,\n      r = e.xDomain,\n      l = e.yDomain,\n      u = n(function () {\n    return c().domain(r).range([0, o]);\n  }, [r, o]),\n      a = n(function () {\n    return c().domain(l).range([0, t]);\n  }, [l, t]),\n      d = n(function () {\n    return i.map(function (n) {\n      return {\n        x: u(n.x),\n        y: a(n.y),\n        data: n\n      };\n    });\n  }, [i, u, a]);\n  return n(function () {\n    var n = h.from(d.map(function (n) {\n      return [n.x, n.y];\n    })),\n        e = n.voronoi([0, 0, o, t]);\n    return {\n      points: d,\n      delaunay: n,\n      voronoi: e\n    };\n  }, [d, o, t]);\n},\n    L = function (e) {\n  var i = e.points,\n      o = e.delaunay,\n      t = e.voronoi;\n  return n(function () {\n    return {\n      points: i,\n      delaunay: o,\n      voronoi: t\n    };\n  }, [i, o, t]);\n},\n    w = [\"theme\"],\n    W = function (n) {\n  var o = n.data,\n      t = n.width,\n      r = n.height,\n      l = n.margin,\n      d = n.layers,\n      s = void 0 === d ? y.layers : d,\n      c = n.xDomain,\n      h = void 0 === c ? y.xDomain : c,\n      v = n.yDomain,\n      p = void 0 === v ? y.yDomain : v,\n      m = n.enableLinks,\n      g = void 0 === m ? y.enableLinks : m,\n      b = n.linkLineWidth,\n      k = void 0 === b ? y.linkLineWidth : b,\n      x = n.linkLineColor,\n      w = void 0 === x ? y.linkLineColor : x,\n      W = n.enableCells,\n      D = void 0 === W ? y.enableCells : W,\n      M = n.cellLineWidth,\n      P = void 0 === M ? y.cellLineWidth : M,\n      O = n.cellLineColor,\n      S = void 0 === O ? y.cellLineColor : O,\n      j = n.enablePoints,\n      z = void 0 === j ? y.enableCells : j,\n      A = n.pointSize,\n      E = void 0 === A ? y.pointSize : A,\n      H = n.pointColor,\n      B = void 0 === H ? y.pointColor : H,\n      F = n.role,\n      I = void 0 === F ? y.role : F,\n      q = u(t, r, l),\n      G = q.outerWidth,\n      J = q.outerHeight,\n      K = q.margin,\n      N = q.innerWidth,\n      Q = q.innerHeight,\n      R = C({\n    data: o,\n    width: N,\n    height: Q,\n    xDomain: h,\n    yDomain: p\n  }),\n      T = R.points,\n      U = R.delaunay,\n      V = R.voronoi,\n      X = {\n    links: null,\n    cells: null,\n    points: null,\n    bounds: null\n  };\n  g && s.includes(\"links\") && (X.links = f(\"path\", {\n    stroke: w,\n    strokeWidth: k,\n    fill: \"none\",\n    d: U.render()\n  }, \"links\")), D && s.includes(\"cells\") && (X.cells = f(\"path\", {\n    d: V.render(),\n    fill: \"none\",\n    stroke: S,\n    strokeWidth: P\n  }, \"cells\")), z && s.includes(\"points\") && (X.points = f(\"path\", {\n    stroke: \"none\",\n    fill: B,\n    d: U.renderPoints(void 0, E / 2)\n  }, \"points\")), s.includes(\"bounds\") && (X.bounds = f(\"path\", {\n    fill: \"none\",\n    stroke: S,\n    strokeWidth: P,\n    d: V.renderBounds()\n  }, \"bounds\"));\n  var Y = L({\n    points: T,\n    delaunay: U,\n    voronoi: V\n  });\n  return f(a, {\n    width: G,\n    height: J,\n    margin: K,\n    role: I,\n    children: s.map(function (n, o) {\n      return void 0 !== X[n] ? X[n] : \"function\" == typeof n ? f(e, {\n        children: i(n, Y)\n      }, o) : null;\n    })\n  });\n},\n    D = function (n) {\n  var e = n.theme,\n      i = function (n, e) {\n    if (null == n) return {};\n    var i,\n        o,\n        t = {},\n        r = Object.keys(n);\n\n    for (o = 0; o < r.length; o++) i = r[o], e.indexOf(i) >= 0 || (t[i] = n[i]);\n\n    return t;\n  }(n, w);\n\n  return f(l, {\n    isInteractive: !1,\n    animate: !1,\n    theme: e,\n    children: f(W, m({}, i))\n  });\n},\n    M = function (n) {\n  return f(d, {\n    children: function (e) {\n      var i = e.width,\n          o = e.height;\n      return f(D, m({\n        width: i,\n        height: o\n      }, n));\n    }\n  });\n},\n    P = function (e) {\n  var i = e.nodes,\n      l = e.width,\n      u = e.height,\n      a = e.x,\n      d = e.y,\n      c = e.onMouseEnter,\n      h = e.onMouseMove,\n      m = e.onMouseLeave,\n      y = e.onClick,\n      g = e.debug,\n      b = o(null),\n      k = t(null),\n      C = k[0],\n      L = k[1],\n      w = x({\n    points: i,\n    x: a,\n    y: d,\n    width: l,\n    height: u,\n    debug: g\n  }),\n      W = w.delaunay,\n      D = w.voronoi,\n      M = n(function () {\n    if (g && D) return D.render();\n  }, [g, D]),\n      P = r(function (n) {\n    if (!b.current) return [null, null];\n    var e = s(b.current, n),\n        o = e[0],\n        t = e[1],\n        r = W.find(o, t);\n    return [r, void 0 !== r ? i[r] : null];\n  }, [b, W]),\n      O = r(function (n) {\n    var e = P(n),\n        i = e[0],\n        o = e[1];\n    L(i), o && (null == c || c(o, n));\n  }, [P, L, c]),\n      S = r(function (n) {\n    var e = P(n),\n        i = e[0],\n        o = e[1];\n    L(i), o && (null == h || h(o, n));\n  }, [P, L, h]),\n      j = r(function (n) {\n    if (L(null), m) {\n      var e = void 0;\n      null !== C && (e = i[C]), e && m(e, n);\n    }\n  }, [L, C, m, i]),\n      z = r(function (n) {\n    var e = P(n),\n        i = e[0],\n        o = e[1];\n    L(i), o && (null == y || y(o, n));\n  }, [P, L, y]);\n  return v(\"g\", {\n    ref: b,\n    children: [g && D && v(p, {\n      children: [f(\"path\", {\n        d: M,\n        stroke: \"red\",\n        strokeWidth: 1,\n        opacity: .75\n      }), null !== C && f(\"path\", {\n        fill: \"pink\",\n        opacity: .35,\n        d: D.renderCell(C)\n      })]\n    }), f(\"rect\", {\n      width: l,\n      height: u,\n      fill: \"red\",\n      opacity: 0,\n      style: {\n        cursor: \"auto\"\n      },\n      onMouseEnter: O,\n      onMouseMove: S,\n      onMouseLeave: j,\n      onClick: z\n    })]\n  });\n},\n    O = function (n, e) {\n  n.save(), n.globalAlpha = .75, n.beginPath(), e.render(n), n.strokeStyle = \"red\", n.lineWidth = 1, n.stroke(), n.restore();\n},\n    S = function (n, e, i) {\n  n.save(), n.globalAlpha = .35, n.beginPath(), e.renderCell(i, n), n.fillStyle = \"red\", n.fill(), n.restore();\n};\n\nexport { P as Mesh, M as ResponsiveVoronoi, D as Voronoi, k as computeMesh, b as computeMeshPoints, y as defaultVoronoiProps, S as renderVoronoiCellToCanvas, O as renderVoronoiToCanvas, C as useVoronoi, L as useVoronoiLayerContext, x as useVoronoiMesh };","map":{"version":3,"sources":["../src/props.ts","../src/computeMesh.ts","../src/hooks.ts","../src/Voronoi.tsx","../src/ResponsiveVoronoi.tsx","../src/Mesh.tsx","../src/meshCanvas.ts"],"names":["defaultVoronoiProps","xDomain","yDomain","layers","enableLinks","linkLineWidth","linkLineColor","enableCells","cellLineWidth","cellLineColor","enablePoints","pointSize","pointColor","role","getAccessor","directive","datum","computeMeshPoints","points","x","y","getX","getY","map","point","computeMesh","width","height","debug","delaunay","Delaunay","from","voronoi","undefined","useVoronoiMesh","points2d","useMemo","useVoronoi","data","xScale","scaleLinear","domain","range","yScale","d","p","useVoronoiLayerContext","InnerVoronoi","margin","partialMargin","outerWidth","outerHeight","innerWidth","innerHeight","useDimensions","layerById","links","cells","bounds","includes","_jsx","stroke","strokeWidth","fill","render","renderPoints","renderBounds","layerContext","SvgWrapper","layer","i","Fragment","createElement","Voronoi","theme","otherProps","Container","isInteractive","animate","ResponsiveVoronoi","props","ResponsiveWrapper","Mesh","nodes","onMouseEnter","onMouseMove","onMouseLeave","onClick","elementRef","useRef","currentIndex","setCurrentIndex","useState","voronoiPath","getIndexAndNodeFromEvent","useCallback","current","getRelativeCursor","event","index","find","handleMouseEnter","node","handleMouseMove","handleMouseLeave","previousNode","handleClick","_jsxs","ref","opacity","renderCell","style","cursor","renderVoronoiToCanvas","ctx","save","globalAlpha","beginPath","strokeStyle","lineWidth","restore","renderVoronoiCellToCanvas","fillStyle"],"mappings":"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","sourcesContent":["import { VoronoiDomain, VoronoiLayer } from './types'\n\nexport const defaultVoronoiProps = {\n    xDomain: [0, 1] as VoronoiDomain,\n    yDomain: [0, 1] as VoronoiDomain,\n    layers: ['links', 'cells', 'points', 'bounds'] as VoronoiLayer[],\n    enableLinks: false,\n    linkLineWidth: 1,\n    linkLineColor: '#bbbbbb',\n    enableCells: true,\n    cellLineWidth: 2,\n    cellLineColor: '#000000',\n    enablePoints: true,\n    pointSize: 4,\n    pointColor: '#666666',\n    role: 'img',\n}\n","import { Delaunay } from 'd3-delaunay'\n\ntype NumberPropertyNames<T> = {\n    [K in keyof T]: T[K] extends number ? K : never\n}[keyof T]\n\nexport type XYAccessor<Datum> = NumberPropertyNames<Datum> | ((datum: Datum) => number)\n\nconst getAccessor = <Datum>(directive: XYAccessor<Datum>) =>\n    typeof directive === 'function' ? directive : (datum: Datum) => datum[directive]\n\n/**\n * The delaunay generator requires an array\n * where each point is defined as an array\n * of 2 elements: [x: number, y: number].\n *\n * Points represent the raw input data\n * and x/y represent accessors to x & y.\n */\nexport const computeMeshPoints = <Datum>({\n    points,\n    x = 'x' as NumberPropertyNames<Datum>,\n    y = 'y' as NumberPropertyNames<Datum>,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n}): [number, number][] => {\n    const getX = getAccessor<Datum>(x)\n    const getY = getAccessor<Datum>(y)\n\n    return points.map(point => [getX(point) as number, getY(point) as number])\n}\n\nexport const computeMesh = ({\n    points,\n    width,\n    height,\n    debug,\n}: {\n    points: [number, number][]\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const delaunay = Delaunay.from(points)\n    const voronoi = debug ? delaunay.voronoi([0, 0, width, height]) : undefined\n\n    return { delaunay, voronoi }\n}\n","import { useMemo } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { Delaunay } from 'd3-delaunay'\nimport { computeMeshPoints, computeMesh, XYAccessor } from './computeMesh'\nimport { VoronoiCommonProps, VoronoiDatum, VoronoiCustomLayerProps } from './types'\n\nexport const useVoronoiMesh = <Datum>({\n    points,\n    x,\n    y,\n    width,\n    height,\n    debug,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const points2d = useMemo(() => computeMeshPoints<Datum>({ points, x, y }), [points, x, y])\n\n    return useMemo(\n        () => computeMesh({ points: points2d, width, height, debug }),\n        [points2d, width, height, debug]\n    )\n}\n\nexport const useVoronoi = ({\n    data,\n    width,\n    height,\n    xDomain,\n    yDomain,\n}: {\n    data: VoronoiDatum[]\n    width: number\n    height: number\n    xDomain: VoronoiCommonProps['xDomain']\n    yDomain: VoronoiCommonProps['yDomain']\n}) => {\n    const xScale = useMemo(() => scaleLinear().domain(xDomain).range([0, width]), [xDomain, width])\n    const yScale = useMemo(\n        () => scaleLinear().domain(yDomain).range([0, height]),\n        [yDomain, height]\n    )\n\n    const points = useMemo(\n        () =>\n            data.map(d => ({\n                x: xScale(d.x),\n                y: yScale(d.y),\n                data: d,\n            })),\n        [data, xScale, yScale]\n    )\n\n    return useMemo(() => {\n        const delaunay = Delaunay.from(points.map(p => [p.x, p.y]))\n        const voronoi = delaunay.voronoi([0, 0, width, height])\n\n        return {\n            points,\n            delaunay,\n            voronoi,\n        }\n    }, [points, width, height])\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useVoronoiLayerContext = ({\n    points,\n    delaunay,\n    voronoi,\n}: VoronoiCustomLayerProps): VoronoiCustomLayerProps =>\n    useMemo(\n        () => ({\n            points,\n            delaunay,\n            voronoi,\n        }),\n        [points, delaunay, voronoi]\n    )\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { Container, SvgWrapper, useDimensions } from '@nivo/core'\nimport { VoronoiSvgProps, VoronoiLayerId } from './types'\nimport { defaultVoronoiProps } from './props'\nimport { useVoronoi, useVoronoiLayerContext } from './hooks'\n\ntype InnerVoronoiProps = Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data' | 'width' | 'height'>\n\nconst InnerVoronoi = ({\n    data,\n    width,\n    height,\n    margin: partialMargin,\n    layers = defaultVoronoiProps.layers,\n    xDomain = defaultVoronoiProps.xDomain,\n    yDomain = defaultVoronoiProps.yDomain,\n    enableLinks = defaultVoronoiProps.enableLinks,\n    linkLineWidth = defaultVoronoiProps.linkLineWidth,\n    linkLineColor = defaultVoronoiProps.linkLineColor,\n    enableCells = defaultVoronoiProps.enableCells,\n    cellLineWidth = defaultVoronoiProps.cellLineWidth,\n    cellLineColor = defaultVoronoiProps.cellLineColor,\n    enablePoints = defaultVoronoiProps.enableCells,\n    pointSize = defaultVoronoiProps.pointSize,\n    pointColor = defaultVoronoiProps.pointColor,\n    role = defaultVoronoiProps.role,\n}: InnerVoronoiProps) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { points, delaunay, voronoi } = useVoronoi({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        xDomain,\n        yDomain,\n    })\n\n    const layerById: Record<VoronoiLayerId, ReactNode> = {\n        links: null,\n        cells: null,\n        points: null,\n        bounds: null,\n    }\n\n    if (enableLinks && layers.includes('links')) {\n        layerById.links = (\n            <path\n                key=\"links\"\n                stroke={linkLineColor}\n                strokeWidth={linkLineWidth}\n                fill=\"none\"\n                d={delaunay.render()}\n            />\n        )\n    }\n\n    if (enableCells && layers.includes('cells')) {\n        layerById.cells = (\n            <path\n                key=\"cells\"\n                d={voronoi.render()}\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n            />\n        )\n    }\n\n    if (enablePoints && layers.includes('points')) {\n        layerById.points = (\n            <path\n                key=\"points\"\n                stroke=\"none\"\n                fill={pointColor}\n                d={delaunay.renderPoints(undefined, pointSize / 2)}\n            />\n        )\n    }\n\n    if (layers.includes('bounds')) {\n        layerById.bounds = (\n            <path\n                key=\"bounds\"\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n                d={voronoi.renderBounds()}\n            />\n        )\n    }\n\n    const layerContext = useVoronoiLayerContext({\n        points,\n        delaunay,\n        voronoi,\n    })\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (layerById[layer as VoronoiLayerId] !== undefined) {\n                    return layerById[layer as VoronoiLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Voronoi = ({\n    theme,\n    ...otherProps\n}: Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data' | 'width' | 'height'>) => (\n    <Container isInteractive={false} animate={false} theme={theme}>\n        <InnerVoronoi {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { VoronoiSvgProps } from './types'\nimport { Voronoi } from './Voronoi'\n\ntype ResponsiveVoronoiProps = Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data'>\n\nexport const ResponsiveVoronoi = (props: ResponsiveVoronoiProps) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Voronoi width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { useRef, useState, useCallback, useMemo } from 'react'\nimport * as React from 'react'\nimport { getRelativeCursor } from '@nivo/core'\nimport { useVoronoiMesh } from './hooks'\nimport { XYAccessor } from './computeMesh'\n\ntype MouseHandler<Datum> = (datum: Datum, event: React.MouseEvent) => void\n\ninterface MeshProps<Datum> {\n    nodes: Datum[]\n    width: number\n    height: number\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    onMouseEnter?: MouseHandler<Datum>\n    onMouseMove?: MouseHandler<Datum>\n    onMouseLeave?: MouseHandler<Datum>\n    onClick?: MouseHandler<Datum>\n    debug?: boolean\n}\n\nexport const Mesh = <Datum,>({\n    nodes,\n    width,\n    height,\n    x,\n    y,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    debug,\n}: MeshProps<Datum>) => {\n    const elementRef = useRef<SVGGElement>(null)\n    const [currentIndex, setCurrentIndex] = useState<number | null>(null)\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points: nodes,\n        x,\n        y,\n        width,\n        height,\n        debug,\n    })\n\n    const voronoiPath = useMemo(() => {\n        if (debug && voronoi) {\n            return voronoi.render()\n        }\n\n        return undefined\n    }, [debug, voronoi])\n\n    const getIndexAndNodeFromEvent = useCallback(\n        event => {\n            if (!elementRef.current) {\n                return [null, null]\n            }\n\n            const [x, y] = getRelativeCursor(elementRef.current, event)\n            const index = delaunay.find(x, y)\n\n            return [index, index !== undefined ? nodes[index] : null] as [number, Datum | null]\n        },\n        [elementRef, delaunay]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseEnter?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseMove?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent) => {\n            setCurrentIndex(null)\n            if (onMouseLeave) {\n                let previousNode: Datum | undefined = undefined\n                if (currentIndex !== null) {\n                    previousNode = nodes[currentIndex]\n                }\n                previousNode && onMouseLeave(previousNode, event)\n            }\n        },\n        [setCurrentIndex, currentIndex, onMouseLeave, nodes]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onClick?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onClick]\n    )\n\n    return (\n        <g ref={elementRef}>\n            {debug && voronoi && (\n                <>\n                    <path d={voronoiPath} stroke=\"red\" strokeWidth={1} opacity={0.75} />\n                    {/* highlight current cell */}\n                    {currentIndex !== null && (\n                        <path fill=\"pink\" opacity={0.35} d={voronoi.renderCell(currentIndex)} />\n                    )}\n                </>\n            )}\n            {/* transparent rect to intercept mouse events */}\n            <rect\n                width={width}\n                height={height}\n                fill=\"red\"\n                opacity={0}\n                style={{ cursor: 'auto' }}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        </g>\n    )\n}\n","import { Delaunay, Voronoi } from 'd3-delaunay'\n\nexport const renderVoronoiToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.75\n    ctx.beginPath()\n    voronoi.render(ctx)\n    ctx.strokeStyle = 'red'\n    ctx.lineWidth = 1\n    ctx.stroke()\n\n    ctx.restore()\n}\n\nexport const renderVoronoiCellToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>,\n    index: number\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.35\n    ctx.beginPath()\n    voronoi.renderCell(index, ctx)\n    ctx.fillStyle = 'red'\n    ctx.fill()\n\n    ctx.restore()\n}\n"]},"metadata":{},"sourceType":"module"}