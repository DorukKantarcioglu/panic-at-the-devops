{"ast":null,"code":"import axios from \"axios\";\n\nconst StudentService = function () {\n  const _fetchAllStudents = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/students\");\n\n    if (response) {\n      console.log(response.data);\n      return response.data;\n    }\n  };\n\n  const _getStudentById = async id => {\n    const url = \"http://localhost:8080/api/v1/students/\".concat(id);\n    const response = await axios.get(url);\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getStudentByHesCode = async hesCode => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/students\", {\n      headers: {\n        \"hesCode\": {\n          hesCode\n        }.toString()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _validateHesCode = async (hesCode, trIdNumber, eGovernmentPassword) => {\n    const response = await axios.post(\"http://localhost:8080/api/v1/students\", {}, {\n      headers: {\n        \"hesCode\": hesCode,\n        \"tridNumber\": trIdNumber,\n        \"eGovernmentPassword\": eGovernmentPassword\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _createStudent = async () => {\n    const response = await axios.post(\"http://localhost:8080/api/v1/students\");\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _updateHesCode = async (id, hesCode) => {\n    const url = \"http://localhost:8080/api/v1/students/\" + id;\n    const response = await axios.patch(url, {}, {\n      headers: {\n        \"hesCode\": hesCode\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _deleteStudent = async id => {\n    const url = \"http://localhost:8080/api/v1/students/\" + id;\n    const response = await axios.delete(url);\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  return {\n    fetchAllStudents: _fetchAllStudents,\n    getStudentById: _getStudentById,\n    createStudent: _createStudent,\n    getStudentByHesCode: _getStudentByHesCode,\n    updateHesCode: _updateHesCode,\n    deleteStudent: _deleteStudent,\n    validateHesCode: _validateHesCode\n  };\n}();\n\nexport default StudentService;","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/StudentService.js"],"names":["axios","StudentService","_fetchAllStudents","response","get","console","log","data","_getStudentById","id","url","concat","_getStudentByHesCode","hesCode","headers","toString","_validateHesCode","trIdNumber","eGovernmentPassword","post","_createStudent","_updateHesCode","patch","_deleteStudent","delete","fetchAllStudents","getStudentById","createStudent","getStudentByHesCode","updateHesCode","deleteStudent","validateHesCode"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAI,YAAY;AAEhC,QAAMC,iBAAiB,GAAG,YAAS;AAC/B,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,uCAAV,CAAvB;;AACA,QAAID,QAAJ,EAAc;AACVE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACA,aAAOJ,QAAQ,CAACI,IAAhB;AACH;AAEJ,GAPD;;AASA,QAAMC,eAAe,GAAG,MAAOC,EAAP,IAAY;AAChC,UAAMC,GAAG,GAAG,yCAAyCC,MAAzC,CAAgDF,EAAhD,CAAZ;AACA,UAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAUM,GAAV,CAAvB;;AACA,QAAIP,QAAJ,EAAc;AAEV,aAAOA,QAAQ,CAACI,IAAhB;AACH;AACJ,GAPD;;AASA,QAAMK,oBAAoB,GAAG,MAAOC,OAAP,IAAiB;AAC1C,UAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,uCAAV,EAAmD;AAAEU,MAAAA,OAAO,EAAC;AAChF,mBAAW;AAACD,UAAAA;AAAD,UAAUE,QAAV;AADqE;AAAV,KAAnD,CAAvB;;AAGA,QAAIZ,QAAJ,EAAc;AACV,aAAOA,QAAQ,CAACI,IAAhB;AACH;AACJ,GAPD;;AASA,QAAMS,gBAAgB,GAAG,OAAOH,OAAP,EAAgBI,UAAhB,EAA4BC,mBAA5B,KAAkD;AAGvE,UAAMf,QAAQ,GAAG,MAAMH,KAAK,CAACmB,IAAN,CAAW,uCAAX,EAAmD,EAAnD,EAAuD;AAACL,MAAAA,OAAO,EAAE;AAChF,mBAAWD,OADqE;AAEhF,sBAAcI,UAFkE;AAGhF,+BAAuBC;AAHyD;AAAV,KAAvD,CAAvB;;AAKA,QAAIf,QAAJ,EAAc;AACR,aAAOA,QAAQ,CAACI,IAAhB;AACL;AACJ,GAXD;;AAaA,QAAMa,cAAc,GAAG,YAAS;AAC5B,UAAMjB,QAAQ,GAAG,MAAMH,KAAK,CAACmB,IAAN,CAAW,uCAAX,CAAvB;;AACA,QAAIhB,QAAJ,EAAc;AACV,aAAOA,QAAQ,CAACI,IAAhB;AACH;AAEJ,GAND;;AAQA,QAAMc,cAAc,GAAG,OAAOZ,EAAP,EAAWI,OAAX,KAAqB;AACxC,UAAMH,GAAG,GAAG,2CAA2CD,EAAvD;AACA,UAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACsB,KAAN,CAAYZ,GAAZ,EAAgB,EAAhB,EAAoB;AAACI,MAAAA,OAAO,EAAE;AAC7C,mBAAWD;AADkC;AAAV,KAApB,CAAvB;;AAGA,QAAIV,QAAJ,EAAc;AACV,aAAOA,QAAQ,CAACI,IAAhB;AACH;AACJ,GARD;;AAUA,QAAMgB,cAAc,GAAG,MAAOd,EAAP,IAAY;AAC/B,UAAMC,GAAG,GAAG,2CAA2CD,EAAvD;AACA,UAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACwB,MAAN,CAAad,GAAb,CAAvB;;AACA,QAAIP,QAAJ,EAAc;AACV,aAAOA,QAAQ,CAACI,IAAhB;AACH;AACJ,GAND;;AAQA,SAAO;AACHkB,IAAAA,gBAAgB,EAAEvB,iBADf;AAEHwB,IAAAA,cAAc,EAAElB,eAFb;AAGHmB,IAAAA,aAAa,EAAEP,cAHZ;AAIHQ,IAAAA,mBAAmB,EAAEhB,oBAJlB;AAKHiB,IAAAA,aAAa,EAAER,cALZ;AAMHS,IAAAA,aAAa,EAAEP,cANZ;AAOHQ,IAAAA,eAAe,EAAEf;AAPd,GAAP;AASH,CA7EsB,EAAvB;;AA8EA,eAAef,cAAf","sourcesContent":["import axios from \"axios\";\n\nconst StudentService = (function () {\n\n    const _fetchAllStudents = async()=>{\n        const response = await axios.get(\"http://localhost:8080/api/v1/students\");\n        if (response) {\n            console.log(response.data)\n            return response.data;\n        }\n\n    };\n\n    const _getStudentById = async (id)=>{\n        const url = \"http://localhost:8080/api/v1/students/\".concat(id)\n        const response = await axios.get(url)\n        if (response) {\n\n            return response.data;\n        }\n    }\n\n    const _getStudentByHesCode = async (hesCode)=>{\n        const response = await axios.get(\"http://localhost:8080/api/v1/students\", { headers:{\n            \"hesCode\": {hesCode}.toString()\n            }})\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _validateHesCode = async (hesCode, trIdNumber, eGovernmentPassword)=>{\n\n\n        const response = await axios.post(\"http://localhost:8080/api/v1/students\",{}, {headers: {\n                \"hesCode\": hesCode,\n                \"tridNumber\": trIdNumber,\n                \"eGovernmentPassword\": eGovernmentPassword\n            }})\n        if (response) {\n              return response.data;\n        }\n    }\n\n    const _createStudent = async()=>{\n        const response = await axios.post(\"http://localhost:8080/api/v1/students\");\n        if (response) {\n            return response.data;\n        }\n\n    };\n\n    const _updateHesCode = async (id, hesCode)=>{\n        const url = \"http://localhost:8080/api/v1/students/\" + id\n        const response = await axios.patch(url,{}, {headers: {\n                \"hesCode\": hesCode\n            }})\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _deleteStudent = async (id)=>{\n        const url = \"http://localhost:8080/api/v1/students/\" + id\n        const response = await axios.delete(url)\n        if (response) {\n            return response.data;\n        }\n    }\n\n    return {\n        fetchAllStudents: _fetchAllStudents,\n        getStudentById: _getStudentById,\n        createStudent: _createStudent,\n        getStudentByHesCode: _getStudentByHesCode,\n        updateHesCode: _updateHesCode,\n        deleteStudent: _deleteStudent,\n        validateHesCode: _validateHesCode\n    };\n})();\nexport default StudentService;"]},"metadata":{},"sourceType":"module"}