{"ast":null,"code":"import { memo as e, useMemo as r, useState as i, useCallback as n, createElement as t, Fragment as o, forwardRef as a, useRef as s, useEffect as l } from \"react\";\nimport { useTheme as u, lineCurvePropType as d, blendModePropType as c, motionPropTypes as f, defsPropTypes as p, curveFromProp as h, useValueFormatter as y, useMotionConfig as b, useAnimatedPath as g, getLabelGenerator as m, DotsItem as v, withContainer as x, useDimensions as R, CartesianMarkers as q, bindDefs as O, SvgWrapper as S, ResponsiveWrapper as C, getRelativeCursor as T, isCursorInRect as M } from \"@nivo/core\";\nimport { ordinalColorsPropType as w, useOrdinalColorScale as B, useInheritedColor as k } from \"@nivo/colors\";\nimport { axisPropType as W, Grid as G, Axes as L, renderGridLinesToCanvas as P, renderAxesToCanvas as j } from \"@nivo/axes\";\nimport { LegendPropShape as F, BoxLegendSvg as V, renderLegendToCanvas as E } from \"@nivo/legends\";\nimport { BasicTooltip as Y, TableTooltip as D, Chip as X, useTooltip as z, Crosshair as A } from \"@nivo/tooltip\";\nimport { line as H, area as I } from \"d3-shape\";\nimport { computeXYScalesForSeries as J } from \"@nivo/scales\";\nimport K from \"prop-types\";\nimport { jsx as N, jsxs as Q } from \"react/jsx-runtime\";\nimport { useSpring as U, animated as Z } from \"@react-spring/web\";\nimport { Mesh as $, useVoronoiMesh as _, renderVoronoiToCanvas as ee, renderVoronoiCellToCanvas as re } from \"@nivo/voronoi\";\n\nfunction ie() {\n  return ie = Object.assign || function (e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var i = arguments[r];\n\n      for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n]);\n    }\n\n    return e;\n  }, ie.apply(this, arguments);\n}\n\nvar ne = function (e) {\n  var r = e.point;\n  return N(Y, {\n    id: Q(\"span\", {\n      children: [\"x: \", N(\"strong\", {\n        children: r.data.xFormatted\n      }), \", y:\", \" \", N(\"strong\", {\n        children: r.data.yFormatted\n      })]\n    }),\n    enableChip: !0,\n    color: r.serieColor\n  });\n};\n\nne.propTypes = {\n  point: K.object.isRequired\n};\n\nvar te = e(ne),\n    oe = function (e) {\n  var r = e.slice,\n      i = e.axis,\n      n = u(),\n      t = \"x\" === i ? \"y\" : \"x\";\n  return N(D, {\n    rows: r.points.map(function (e) {\n      return [N(X, {\n        color: e.serieColor,\n        style: n.tooltip.chip\n      }, \"chip\"), e.serieId, N(\"span\", {\n        style: n.tooltip.tableCellValue,\n        children: e.data[t + \"Formatted\"]\n      }, \"value\")];\n    })\n  });\n};\n\noe.propTypes = {\n  slice: K.object.isRequired,\n  axis: K.oneOf([\"x\", \"y\"]).isRequired\n};\n\nvar ae = e(oe),\n    se = {\n  data: K.arrayOf(K.shape({\n    id: K.oneOfType([K.string, K.number]).isRequired,\n    data: K.arrayOf(K.shape({\n      x: K.oneOfType([K.number, K.string, K.instanceOf(Date)]),\n      y: K.oneOfType([K.number, K.string, K.instanceOf(Date)])\n    })).isRequired\n  })).isRequired,\n  xScale: K.object.isRequired,\n  xFormat: K.oneOfType([K.func, K.string]),\n  yScale: K.object.isRequired,\n  yFormat: K.oneOfType([K.func, K.string]),\n  layers: K.arrayOf(K.oneOfType([K.oneOf([\"grid\", \"markers\", \"axes\", \"areas\", \"crosshair\", \"lines\", \"slices\", \"points\", \"mesh\", \"legends\"]), K.func])).isRequired,\n  curve: d.isRequired,\n  axisTop: W,\n  axisRight: W,\n  axisBottom: W,\n  axisLeft: W,\n  enableGridX: K.bool.isRequired,\n  enableGridY: K.bool.isRequired,\n  gridXValues: K.oneOfType([K.number, K.arrayOf(K.oneOfType([K.number, K.string, K.instanceOf(Date)]))]),\n  gridYValues: K.oneOfType([K.number, K.arrayOf(K.oneOfType([K.number, K.string, K.instanceOf(Date)]))]),\n  enablePoints: K.bool.isRequired,\n  pointSymbol: K.func,\n  pointSize: K.number.isRequired,\n  pointColor: K.any.isRequired,\n  pointBorderWidth: K.number.isRequired,\n  pointBorderColor: K.any.isRequired,\n  enablePointLabel: K.bool.isRequired,\n  pointLabel: K.oneOfType([K.string, K.func]).isRequired,\n  markers: K.arrayOf(K.shape({\n    axis: K.oneOf([\"x\", \"y\"]).isRequired,\n    value: K.oneOfType([K.number, K.string, K.instanceOf(Date)]).isRequired,\n    style: K.object\n  })),\n  colors: w.isRequired,\n  enableArea: K.bool.isRequired,\n  areaOpacity: K.number.isRequired,\n  areaBlendMode: c.isRequired,\n  areaBaselineValue: K.oneOfType([K.number, K.string, K.instanceOf(Date)]).isRequired,\n  lineWidth: K.number.isRequired,\n  legends: K.arrayOf(K.shape(F)).isRequired,\n  isInteractive: K.bool.isRequired,\n  debugMesh: K.bool.isRequired,\n  tooltip: K.oneOfType([K.func, K.object]).isRequired,\n  enableSlices: K.oneOf([\"x\", \"y\", !1]).isRequired,\n  debugSlices: K.bool.isRequired,\n  sliceTooltip: K.oneOfType([K.func, K.object]).isRequired,\n  enableCrosshair: K.bool.isRequired,\n  crosshairType: K.string.isRequired\n},\n    le = ie({}, se, {\n  enablePointLabel: K.bool.isRequired,\n  role: K.string.isRequired,\n  useMesh: K.bool.isRequired\n}, f, p),\n    ue = ie({\n  pixelRatio: K.number.isRequired\n}, se),\n    de = {\n  curve: \"linear\",\n  xScale: {\n    type: \"point\"\n  },\n  yScale: {\n    type: \"linear\",\n    min: 0,\n    max: \"auto\"\n  },\n  layers: [\"grid\", \"markers\", \"axes\", \"areas\", \"crosshair\", \"lines\", \"points\", \"slices\", \"mesh\", \"legends\"],\n  axisBottom: {},\n  axisLeft: {},\n  enableGridX: !0,\n  enableGridY: !0,\n  enablePoints: !0,\n  pointSize: 6,\n  pointColor: {\n    from: \"color\"\n  },\n  pointBorderWidth: 0,\n  pointBorderColor: {\n    theme: \"background\"\n  },\n  enablePointLabel: !1,\n  pointLabel: \"yFormatted\",\n  colors: {\n    scheme: \"nivo\"\n  },\n  enableArea: !1,\n  areaBaselineValue: 0,\n  areaOpacity: .2,\n  areaBlendMode: \"normal\",\n  lineWidth: 2,\n  legends: [],\n  isInteractive: !0,\n  tooltip: te,\n  enableSlices: !1,\n  debugSlices: !1,\n  sliceTooltip: ae,\n  debugMesh: !1,\n  enableCrosshair: !0,\n  crosshairType: \"bottom-left\"\n},\n    ce = ie({}, de, {\n  enablePointLabel: !1,\n  useMesh: !1,\n  animate: !0,\n  motionConfig: \"gentle\",\n  defs: [],\n  fill: [],\n  role: \"img\"\n}),\n    fe = ie({}, de, {\n  pixelRatio: \"undefined\" != typeof window && window.devicePixelRatio || 1\n}),\n    pe = function (e) {\n  var i = e.curve;\n  return r(function () {\n    return H().defined(function (e) {\n      return null !== e.x && null !== e.y;\n    }).x(function (e) {\n      return e.x;\n    }).y(function (e) {\n      return e.y;\n    }).curve(h(i));\n  }, [i]);\n},\n    he = function (e) {\n  var i = e.curve,\n      n = e.yScale,\n      t = e.areaBaselineValue;\n  return r(function () {\n    return I().defined(function (e) {\n      return null !== e.x && null !== e.y;\n    }).x(function (e) {\n      return e.x;\n    }).y1(function (e) {\n      return e.y;\n    }).curve(h(i)).y0(n(t));\n  }, [i, n, t]);\n},\n    ye = function (e) {\n  var i = e.enableSlices,\n      n = e.points,\n      t = e.width,\n      o = e.height;\n  return r(function () {\n    if (!1 === i) return [];\n\n    if (\"x\" === i) {\n      var e = new Map();\n      return n.forEach(function (r) {\n        null !== r.data.x && null !== r.data.y && (e.has(r.x) ? e.get(r.x).push(r) : e.set(r.x, [r]));\n      }), Array.from(e.entries()).sort(function (e, r) {\n        return e[0] - r[0];\n      }).map(function (e, r, i) {\n        var n,\n            a = e[0],\n            s = e[1],\n            l = i[r - 1],\n            u = i[r + 1];\n        return {\n          id: a,\n          x0: n = l ? a - (a - l[0]) / 2 : a,\n          x: a,\n          y0: 0,\n          y: 0,\n          width: u ? a - n + (u[0] - a) / 2 : t - n,\n          height: o,\n          points: s.reverse()\n        };\n      });\n    }\n\n    if (\"y\" === i) {\n      var r = new Map();\n      return n.forEach(function (e) {\n        null !== e.data.x && null !== e.data.y && (r.has(e.y) ? r.get(e.y).push(e) : r.set(e.y, [e]));\n      }), Array.from(r.entries()).sort(function (e, r) {\n        return e[0] - r[0];\n      }).map(function (e, r, i) {\n        var n,\n            a,\n            s = e[0],\n            l = e[1],\n            u = i[r - 1],\n            d = i[r + 1];\n        return n = u ? s - (s - u[0]) / 2 : s, a = d ? s - n + (d[0] - s) / 2 : o - n, {\n          id: s,\n          x0: 0,\n          x: 0,\n          y0: n,\n          y: s,\n          width: t,\n          height: a,\n          points: l.reverse()\n        };\n      });\n    }\n  }, [i, n]);\n},\n    be = function (e) {\n  var t = e.data,\n      o = e.xScale,\n      a = void 0 === o ? ce.xScale : o,\n      s = e.xFormat,\n      l = e.yScale,\n      d = void 0 === l ? ce.yScale : l,\n      c = e.yFormat,\n      f = e.width,\n      p = e.height,\n      h = e.colors,\n      b = void 0 === h ? ce.colors : h,\n      g = e.curve,\n      m = void 0 === g ? ce.curve : g,\n      v = e.areaBaselineValue,\n      x = void 0 === v ? ce.areaBaselineValue : v,\n      R = e.pointColor,\n      q = void 0 === R ? ce.pointColor : R,\n      O = e.pointBorderColor,\n      S = void 0 === O ? ce.pointBorderColor : O,\n      C = e.enableSlices,\n      T = void 0 === C ? ce.enableSlicesTooltip : C,\n      M = y(s),\n      w = y(c),\n      W = B(b, \"id\"),\n      G = u(),\n      L = k(q, G),\n      P = k(S, G),\n      j = i([]),\n      F = j[0],\n      V = j[1],\n      E = r(function () {\n    return J(t.filter(function (e) {\n      return -1 === F.indexOf(e.id);\n    }), a, d, f, p);\n  }, [t, F, a, d, f, p]),\n      Y = E.xScale,\n      D = E.yScale,\n      X = E.series,\n      z = r(function () {\n    var e = t.map(function (e) {\n      return {\n        id: e.id,\n        label: e.id,\n        color: W(e)\n      };\n    }),\n        r = e.map(function (e) {\n      return ie({}, X.find(function (r) {\n        return r.id === e.id;\n      }), {\n        color: e.color\n      });\n    }).filter(function (e) {\n      return Boolean(e.id);\n    });\n    return {\n      legendData: e.map(function (e) {\n        return ie({}, e, {\n          hidden: !r.find(function (r) {\n            return r.id === e.id;\n          })\n        });\n      }).reverse(),\n      series: r\n    };\n  }, [t, X, W]),\n      A = z.legendData,\n      H = z.series,\n      I = n(function (e) {\n    V(function (r) {\n      return r.indexOf(e) > -1 ? r.filter(function (r) {\n        return r !== e;\n      }) : [].concat(r, [e]);\n    });\n  }, []),\n      K = function (e) {\n    var i = e.series,\n        n = e.getPointColor,\n        t = e.getPointBorderColor,\n        o = e.formatX,\n        a = e.formatY;\n    return r(function () {\n      return i.reduce(function (e, r) {\n        return [].concat(e, r.data.filter(function (e) {\n          return null !== e.position.x && null !== e.position.y;\n        }).map(function (i, s) {\n          var l = {\n            id: r.id + \".\" + s,\n            index: e.length + s,\n            serieId: r.id,\n            serieColor: r.color,\n            x: i.position.x,\n            y: i.position.y\n          };\n          return l.color = n(r), l.borderColor = t(l), l.data = ie({}, i.data, {\n            xFormatted: o(i.data.x),\n            yFormatted: a(i.data.y)\n          }), l;\n        }));\n      }, []);\n    }, [i, n, t, o, a]);\n  }({\n    series: H,\n    getPointColor: L,\n    getPointBorderColor: P,\n    formatX: M,\n    formatY: w\n  }),\n      N = ye({\n    enableSlices: T,\n    points: K,\n    width: f,\n    height: p\n  });\n\n  return {\n    legendData: A,\n    toggleSerie: I,\n    lineGenerator: pe({\n      curve: m\n    }),\n    areaGenerator: he({\n      curve: m,\n      yScale: D,\n      areaBaselineValue: x\n    }),\n    getColor: W,\n    series: H,\n    xScale: Y,\n    yScale: D,\n    slices: N,\n    points: K\n  };\n},\n    ge = function (e) {\n  var r = e.areaBlendMode,\n      i = e.areaOpacity,\n      n = e.color,\n      t = e.fill,\n      o = e.path,\n      a = b(),\n      s = a.animate,\n      l = a.config,\n      u = g(o),\n      d = U({\n    color: n,\n    config: l,\n    immediate: !s\n  });\n  return N(Z.path, {\n    d: u,\n    fill: t || d.color,\n    fillOpacity: i,\n    strokeWidth: 0,\n    style: {\n      mixBlendMode: r\n    }\n  });\n};\n\nge.propTypes = {\n  areaBlendMode: c.isRequired,\n  areaOpacity: K.number.isRequired,\n  color: K.string,\n  fill: K.string,\n  path: K.string.isRequired\n};\n\nvar me = function (e) {\n  var r = e.areaGenerator,\n      i = e.areaOpacity,\n      n = e.areaBlendMode,\n      t = e.lines.slice(0).reverse();\n  return N(\"g\", {\n    children: t.map(function (e) {\n      return N(ge, ie({\n        path: r(e.data.map(function (e) {\n          return e.position;\n        }))\n      }, ie({\n        areaOpacity: i,\n        areaBlendMode: n\n      }, e)), e.id);\n    })\n  });\n};\n\nme.propTypes = {\n  areaGenerator: K.func.isRequired,\n  areaOpacity: K.number.isRequired,\n  areaBlendMode: c.isRequired,\n  lines: K.arrayOf(K.object).isRequired\n};\n\nvar ve = e(me),\n    xe = function (e) {\n  var i = e.lineGenerator,\n      n = e.points,\n      t = e.color,\n      o = e.thickness,\n      a = r(function () {\n    return i(n);\n  }, [i, n]),\n      s = g(a);\n  return N(Z.path, {\n    d: s,\n    fill: \"none\",\n    strokeWidth: o,\n    stroke: t\n  });\n};\n\nxe.propTypes = {\n  points: K.arrayOf(K.shape({\n    x: K.oneOfType([K.string, K.number]),\n    y: K.oneOfType([K.string, K.number])\n  })),\n  lineGenerator: K.func.isRequired,\n  color: K.string.isRequired,\n  thickness: K.number.isRequired\n};\n\nvar Re = e(xe),\n    qe = function (e) {\n  var r = e.lines,\n      i = e.lineGenerator,\n      n = e.lineWidth;\n  return r.slice(0).reverse().map(function (e) {\n    var r = e.id,\n        t = e.data,\n        o = e.color;\n    return N(Re, {\n      id: r,\n      points: t.map(function (e) {\n        return e.position;\n      }),\n      lineGenerator: i,\n      color: o,\n      thickness: n\n    }, r);\n  });\n};\n\nqe.propTypes = {\n  lines: K.arrayOf(K.shape({\n    id: K.oneOfType([K.string, K.number]).isRequired,\n    color: K.string.isRequired,\n    data: K.arrayOf(K.shape({\n      data: K.shape({\n        x: K.oneOfType([K.string, K.number, K.instanceOf(Date)]),\n        y: K.oneOfType([K.string, K.number, K.instanceOf(Date)])\n      }).isRequired,\n      position: K.shape({\n        x: K.number,\n        y: K.number\n      }).isRequired\n    })).isRequired\n  })).isRequired,\n  lineWidth: K.number.isRequired,\n  lineGenerator: K.func.isRequired\n};\n\nvar Oe = e(qe),\n    Se = function (e) {\n  var r = e.slice,\n      i = e.axis,\n      o = e.debug,\n      a = e.tooltip,\n      s = e.isCurrent,\n      l = e.setCurrent,\n      u = z(),\n      d = u.showTooltipFromEvent,\n      c = u.hideTooltip,\n      f = n(function (e) {\n    d(t(a, {\n      slice: r,\n      axis: i\n    }), e, \"right\"), l(r);\n  }, [d, a, r]),\n      p = n(function (e) {\n    d(t(a, {\n      slice: r,\n      axis: i\n    }), e, \"right\");\n  }, [d, a, r]),\n      h = n(function () {\n    c(), l(null);\n  }, [c]);\n  return N(\"rect\", {\n    x: r.x0,\n    y: r.y0,\n    width: r.width,\n    height: r.height,\n    stroke: \"red\",\n    strokeWidth: o ? 1 : 0,\n    strokeOpacity: .75,\n    fill: \"red\",\n    fillOpacity: s && o ? .35 : 0,\n    onMouseEnter: f,\n    onMouseMove: p,\n    onMouseLeave: h\n  });\n};\n\nSe.propTypes = {\n  slice: K.object.isRequired,\n  axis: K.oneOf([\"x\", \"y\"]).isRequired,\n  debug: K.bool.isRequired,\n  height: K.number.isRequired,\n  tooltip: K.oneOfType([K.func, K.object]),\n  isCurrent: K.bool.isRequired,\n  setCurrent: K.func.isRequired\n};\n\nvar Ce = e(Se),\n    Te = function (e) {\n  var r = e.slices,\n      i = e.axis,\n      n = e.debug,\n      t = e.height,\n      o = e.tooltip,\n      a = e.current,\n      s = e.setCurrent;\n  return r.map(function (e) {\n    return N(Ce, {\n      slice: e,\n      axis: i,\n      debug: n,\n      height: t,\n      tooltip: o,\n      setCurrent: s,\n      isCurrent: null !== a && a.id === e.id\n    }, e.id);\n  });\n};\n\nTe.propTypes = {\n  slices: K.arrayOf(K.shape({\n    id: K.oneOfType([K.number, K.string, K.instanceOf(Date)]).isRequired,\n    x: K.number.isRequired,\n    y: K.number.isRequired,\n    points: K.arrayOf(K.object).isRequired\n  })).isRequired,\n  axis: K.oneOf([\"x\", \"y\"]).isRequired,\n  debug: K.bool.isRequired,\n  height: K.number.isRequired,\n  tooltip: K.oneOfType([K.func, K.object]).isRequired,\n  current: K.object,\n  setCurrent: K.func.isRequired\n};\n\nvar Me = e(Te),\n    we = function (e) {\n  var r = e.points,\n      i = e.symbol,\n      n = e.size,\n      t = e.borderWidth,\n      o = e.enableLabel,\n      a = e.label,\n      s = e.labelYOffset,\n      l = u(),\n      d = m(a),\n      c = r.reverse().map(function (e) {\n    return {\n      id: e.id,\n      x: e.x,\n      y: e.y,\n      datum: e.data,\n      fill: e.color,\n      stroke: e.borderColor,\n      label: o ? d(e.data) : null\n    };\n  });\n  return N(\"g\", {\n    children: c.map(function (e) {\n      return N(v, {\n        x: e.x,\n        y: e.y,\n        datum: e.datum,\n        symbol: i,\n        size: n,\n        color: e.fill,\n        borderWidth: t,\n        borderColor: e.stroke,\n        label: e.label,\n        labelYOffset: s,\n        theme: l\n      }, e.id);\n    })\n  });\n};\n\nwe.propTypes = {\n  points: K.arrayOf(K.object),\n  symbol: K.func,\n  size: K.number.isRequired,\n  color: K.func.isRequired,\n  borderWidth: K.number.isRequired,\n  borderColor: K.func.isRequired,\n  enableLabel: K.bool.isRequired,\n  label: K.oneOfType([K.string, K.func]).isRequired,\n  labelYOffset: K.number\n};\n\nvar Be = e(we),\n    ke = function (e) {\n  var r = e.points,\n      i = e.width,\n      o = e.height,\n      a = e.margin,\n      s = e.setCurrent,\n      l = e.onMouseEnter,\n      u = e.onMouseMove,\n      d = e.onMouseLeave,\n      c = e.onClick,\n      f = e.tooltip,\n      p = e.debug,\n      h = z(),\n      y = h.showTooltipAt,\n      b = h.hideTooltip,\n      g = n(function (e, r) {\n    y(t(f, {\n      point: e\n    }), [e.x + a.left, e.y + a.top], \"top\"), s(e), l && l(e, r);\n  }, [s, y, f, l, a]),\n      m = n(function (e, r) {\n    y(t(f, {\n      point: e\n    }), [e.x + a.left, e.y + a.top], \"top\"), s(e), u && u(e, r);\n  }, [s, y, f, u]),\n      v = n(function (e, r) {\n    b(), s(null), d && d(e, r);\n  }, [b, s, d]),\n      x = n(function (e, r) {\n    c && c(e, r);\n  }, [c]);\n  return N($, {\n    nodes: r,\n    width: i,\n    height: o,\n    onMouseEnter: g,\n    onMouseMove: m,\n    onMouseLeave: v,\n    onClick: x,\n    debug: p\n  });\n};\n\nke.propTypes = {\n  points: K.arrayOf(K.object).isRequired,\n  width: K.number.isRequired,\n  height: K.number.isRequired,\n  margin: K.object.isRequired,\n  setCurrent: K.func.isRequired,\n  onMouseEnter: K.func,\n  onMouseMove: K.func,\n  onMouseLeave: K.func,\n  onClick: K.func,\n  tooltip: K.oneOfType([K.func, K.object]).isRequired,\n  debug: K.bool.isRequired\n};\n\nvar We = e(ke),\n    Ge = function (e) {\n  var r = e.data,\n      n = e.xScale,\n      t = e.xFormat,\n      a = e.yScale,\n      s = e.yFormat,\n      l = e.layers,\n      d = e.curve,\n      c = e.areaBaselineValue,\n      f = e.colors,\n      p = e.margin,\n      h = e.width,\n      y = e.height,\n      b = e.axisTop,\n      g = e.axisRight,\n      m = e.axisBottom,\n      v = e.axisLeft,\n      x = e.enableGridX,\n      C = e.enableGridY,\n      T = e.gridXValues,\n      M = e.gridYValues,\n      w = e.lineWidth,\n      B = e.enableArea,\n      W = e.areaOpacity,\n      P = e.areaBlendMode,\n      j = e.enablePoints,\n      F = e.pointSymbol,\n      E = e.pointSize,\n      Y = e.pointColor,\n      D = e.pointBorderWidth,\n      X = e.pointBorderColor,\n      z = e.enablePointLabel,\n      H = e.pointLabel,\n      I = e.pointLabelYOffset,\n      J = e.defs,\n      K = e.fill,\n      Q = e.markers,\n      U = e.legends,\n      Z = e.isInteractive,\n      $ = e.useMesh,\n      _ = e.debugMesh,\n      ee = e.onMouseEnter,\n      re = e.onMouseMove,\n      ne = e.onMouseLeave,\n      te = e.onClick,\n      oe = e.tooltip,\n      ae = e.enableSlices,\n      se = e.debugSlices,\n      le = e.sliceTooltip,\n      ue = e.enableCrosshair,\n      de = e.crosshairType,\n      ce = e.role,\n      fe = R(h, y, p),\n      pe = fe.margin,\n      he = fe.innerWidth,\n      ye = fe.innerHeight,\n      ge = fe.outerWidth,\n      me = fe.outerHeight,\n      xe = be({\n    data: r,\n    xScale: n,\n    xFormat: t,\n    yScale: a,\n    yFormat: s,\n    width: he,\n    height: ye,\n    colors: f,\n    curve: d,\n    areaBaselineValue: c,\n    pointColor: Y,\n    pointBorderColor: X,\n    enableSlices: ae\n  }),\n      Re = xe.legendData,\n      qe = xe.toggleSerie,\n      Se = xe.lineGenerator,\n      Ce = xe.areaGenerator,\n      Te = xe.series,\n      we = xe.xScale,\n      ke = xe.yScale,\n      Ge = xe.slices,\n      Le = xe.points,\n      Pe = u(),\n      je = k(Y, Pe),\n      Fe = k(X, Pe),\n      Ve = i(null),\n      Ee = Ve[0],\n      Ye = Ve[1],\n      De = i(null),\n      Xe = De[0],\n      ze = De[1],\n      Ae = {\n    grid: N(G, {\n      theme: Pe,\n      width: he,\n      height: ye,\n      xScale: x ? we : null,\n      yScale: C ? ke : null,\n      xValues: T,\n      yValues: M\n    }, \"grid\"),\n    markers: N(q, {\n      markers: Q,\n      width: he,\n      height: ye,\n      xScale: we,\n      yScale: ke,\n      theme: Pe\n    }, \"markers\"),\n    axes: N(L, {\n      xScale: we,\n      yScale: ke,\n      width: he,\n      height: ye,\n      theme: Pe,\n      top: b,\n      right: g,\n      bottom: m,\n      left: v\n    }, \"axes\"),\n    areas: null,\n    lines: N(Oe, {\n      lines: Te,\n      lineGenerator: Se,\n      lineWidth: w\n    }, \"lines\"),\n    slices: null,\n    points: null,\n    crosshair: null,\n    mesh: null,\n    legends: U.map(function (e, r) {\n      return N(V, ie({}, e, {\n        containerWidth: he,\n        containerHeight: ye,\n        data: e.data || Re,\n        theme: Pe,\n        toggleSerie: e.toggleSerie ? qe : void 0\n      }), \"legend.\" + r);\n    })\n  },\n      He = O(J, Te, K);\n  return B && (Ae.areas = N(ve, {\n    areaGenerator: Ce,\n    areaOpacity: W,\n    areaBlendMode: P,\n    lines: Te\n  }, \"areas\")), Z && !1 !== ae && (Ae.slices = N(Me, {\n    slices: Ge,\n    axis: ae,\n    debug: se,\n    height: ye,\n    tooltip: le,\n    current: Xe,\n    setCurrent: ze\n  }, \"slices\")), j && (Ae.points = N(Be, {\n    points: Le,\n    symbol: F,\n    size: E,\n    color: je,\n    borderWidth: D,\n    borderColor: Fe,\n    enableLabel: z,\n    label: H,\n    labelYOffset: I\n  }, \"points\")), Z && ue && (null !== Ee && (Ae.crosshair = N(A, {\n    width: he,\n    height: ye,\n    x: Ee.x,\n    y: Ee.y,\n    type: de\n  }, \"crosshair\")), null !== Xe && (Ae.crosshair = N(A, {\n    width: he,\n    height: ye,\n    x: Xe.x,\n    y: Xe.y,\n    type: ae\n  }, \"crosshair\"))), Z && $ && !1 === ae && (Ae.mesh = N(We, {\n    points: Le,\n    width: he,\n    height: ye,\n    margin: pe,\n    current: Ee,\n    setCurrent: Ye,\n    onMouseEnter: ee,\n    onMouseMove: re,\n    onMouseLeave: ne,\n    onClick: te,\n    tooltip: oe,\n    debug: _\n  }, \"mesh\")), N(S, {\n    defs: He,\n    width: ge,\n    height: me,\n    margin: pe,\n    role: ce,\n    children: l.map(function (r, i) {\n      return \"function\" == typeof r ? N(o, {\n        children: r(ie({}, e, {\n          innerWidth: he,\n          innerHeight: ye,\n          series: Te,\n          slices: Ge,\n          points: Le,\n          xScale: we,\n          yScale: ke,\n          lineGenerator: Se,\n          areaGenerator: Ce,\n          currentPoint: Ee,\n          setCurrentPoint: Ye,\n          currentSlice: Xe,\n          setCurrentSlice: ze\n        }))\n      }, i) : Ae[r];\n    })\n  });\n};\n\nGe.propTypes = le, Ge.defaultProps = ce;\n\nvar Le = x(Ge),\n    Pe = function (e) {\n  return N(C, {\n    children: function (r) {\n      var i = r.width,\n          n = r.height;\n      return N(Le, ie({\n        width: i,\n        height: n\n      }, e));\n    }\n  });\n},\n    je = function (e) {\n  var r = e.width,\n      o = e.height,\n      a = e.margin,\n      d = e.pixelRatio,\n      c = e.data,\n      f = e.xScale,\n      p = e.xFormat,\n      h = e.yScale,\n      y = e.yFormat,\n      b = e.curve,\n      g = e.layers,\n      m = e.colors,\n      v = e.lineWidth,\n      x = e.enableArea,\n      q = e.areaBaselineValue,\n      O = e.areaOpacity,\n      S = e.enablePoints,\n      C = e.pointSize,\n      w = e.pointColor,\n      B = e.pointBorderWidth,\n      k = e.pointBorderColor,\n      W = e.enableGridX,\n      G = e.gridXValues,\n      L = e.enableGridY,\n      F = e.gridYValues,\n      V = e.axisTop,\n      Y = e.axisRight,\n      D = e.axisBottom,\n      X = e.axisLeft,\n      A = e.legends,\n      H = e.isInteractive,\n      I = e.debugMesh,\n      J = e.onMouseLeave,\n      K = e.onClick,\n      Q = e.tooltip,\n      U = e.canvasRef,\n      Z = s(null),\n      $ = R(r, o, a),\n      ne = $.margin,\n      te = $.innerWidth,\n      oe = $.innerHeight,\n      ae = $.outerWidth,\n      se = $.outerHeight,\n      le = u(),\n      ue = i(null),\n      de = ue[0],\n      ce = ue[1],\n      fe = be({\n    data: c,\n    xScale: f,\n    xFormat: p,\n    yScale: h,\n    yFormat: y,\n    width: te,\n    height: oe,\n    colors: m,\n    curve: b,\n    areaBaselineValue: q,\n    pointColor: w,\n    pointBorderColor: k\n  }),\n      pe = fe.lineGenerator,\n      he = fe.areaGenerator,\n      ye = fe.series,\n      ge = fe.xScale,\n      me = fe.yScale,\n      ve = fe.points,\n      xe = _({\n    points: ve,\n    width: te,\n    height: oe,\n    debug: I\n  }),\n      Re = xe.delaunay,\n      qe = xe.voronoi;\n\n  l(function () {\n    U && (U.current = Z.current), Z.current.width = ae * d, Z.current.height = se * d;\n    var e = Z.current.getContext(\"2d\");\n    e.scale(d, d), e.fillStyle = le.background, e.fillRect(0, 0, ae, se), e.translate(ne.left, ne.top), g.forEach(function (r) {\n      if (\"function\" == typeof r && r({\n        ctx: e,\n        innerWidth: te,\n        innerHeight: oe,\n        series: ye,\n        points: ve,\n        xScale: ge,\n        yScale: me,\n        lineWidth: v,\n        lineGenerator: pe,\n        areaGenerator: he,\n        currentPoint: de,\n        setCurrentPoint: ce\n      }), \"grid\" === r && le.grid.line.strokeWidth > 0 && (e.lineWidth = le.grid.line.strokeWidth, e.strokeStyle = le.grid.line.stroke, W && P(e, {\n        width: te,\n        height: oe,\n        scale: ge,\n        axis: \"x\",\n        values: G\n      }), L && P(e, {\n        width: te,\n        height: oe,\n        scale: me,\n        axis: \"y\",\n        values: F\n      })), \"axes\" === r && j(e, {\n        xScale: ge,\n        yScale: me,\n        width: te,\n        height: oe,\n        top: V,\n        right: Y,\n        bottom: D,\n        left: X,\n        theme: le\n      }), \"areas\" === r && !0 === x && (e.save(), e.globalAlpha = O, he.context(e), ye.forEach(function (r) {\n        e.fillStyle = r.color, e.beginPath(), he(r.data.map(function (e) {\n          return e.position;\n        })), e.fill();\n      }), e.restore()), \"lines\" === r && (pe.context(e), ye.forEach(function (r) {\n        e.strokeStyle = r.color, e.lineWidth = v, e.beginPath(), pe(r.data.map(function (e) {\n          return e.position;\n        })), e.stroke();\n      })), \"points\" === r && !0 === S && C > 0 && ve.forEach(function (r) {\n        e.fillStyle = r.color, e.beginPath(), e.arc(r.x, r.y, C / 2, 0, 2 * Math.PI), e.fill(), B > 0 && (e.strokeStyle = r.borderColor, e.lineWidth = B, e.stroke());\n      }), \"mesh\" === r && !0 === I && (ee(e, qe), de && re(e, qe, de.index)), \"legends\" === r) {\n        var i = ye.map(function (e) {\n          return {\n            id: e.id,\n            label: e.id,\n            color: e.color\n          };\n        }).reverse();\n        A.forEach(function (r) {\n          E(e, ie({}, r, {\n            data: r.data || i,\n            containerWidth: te,\n            containerHeight: oe,\n            theme: le\n          }));\n        });\n      }\n    });\n  }, [Z, ae, se, g, le, pe, ye, ge, me, W, G, L, F, V, Y, D, X, A, ve, S, C, de]);\n  var Oe = n(function (e) {\n    var r = T(Z.current, e),\n        i = r[0],\n        n = r[1];\n    if (!M(ne.left, ne.top, te, oe, i, n)) return null;\n    var t = Re.find(i - ne.left, n - ne.top);\n    return ve[t];\n  }, [Z, ne, te, oe, Re]),\n      Se = z(),\n      Ce = Se.showTooltipFromEvent,\n      Te = Se.hideTooltip,\n      Me = n(function (e) {\n    var r = Oe(e);\n    ce(r), r ? Ce(t(Q, {\n      point: r\n    }), e) : Te();\n  }, [Oe, ce, Ce, Te, Q]),\n      we = n(function (e) {\n    Te(), ce(null), de && J && J(de, e);\n  }, [Te, ce, J]),\n      Be = n(function (e) {\n    if (K) {\n      var r = Oe(e);\n      r && K(r, e);\n    }\n  }, [Oe, K]);\n  return N(\"canvas\", {\n    ref: Z,\n    width: ae * d,\n    height: se * d,\n    style: {\n      width: ae,\n      height: se,\n      cursor: H ? \"auto\" : \"normal\"\n    },\n    onMouseEnter: H ? Me : void 0,\n    onMouseMove: H ? Me : void 0,\n    onMouseLeave: H ? we : void 0,\n    onClick: H ? Be : void 0\n  });\n};\n\nje.propTypes = ue, je.defaultProps = fe;\nvar Fe = x(je),\n    Ve = a(function (e, r) {\n  return N(Fe, ie({}, e, {\n    canvasRef: r\n  }));\n}),\n    Ee = a(function (e, r) {\n  return N(C, {\n    children: function (i) {\n      var n = i.width,\n          t = i.height;\n      return N(Ve, ie({\n        width: n,\n        height: t\n      }, e, {\n        ref: r\n      }));\n    }\n  });\n});\nexport { Le as Line, Ve as LineCanvas, fe as LineCanvasDefaultProps, ue as LineCanvasPropTypes, ce as LineDefaultProps, le as LinePropTypes, Pe as ResponsiveLine, Ee as ResponsiveLineCanvas, he as useAreaGenerator, be as useLine, pe as useLineGenerator, ye as useSlices };","map":{"version":3,"sources":["../src/PointTooltip.js","../src/SliceTooltip.js","../src/props.js","../src/hooks.js","../src/Areas.js","../src/LinesItem.js","../src/Lines.js","../src/SlicesItem.js","../src/Slices.js","../src/Points.js","../src/Mesh.js","../src/Line.js","../src/ResponsiveLine.js","../src/LineCanvas.js","../src/ResponsiveLineCanvas.js"],"names":["LinePointTooltip","point","_jsx","BasicTooltip","id","_jsxs","data","xFormatted","yFormatted","enableChip","color","serieColor","propTypes","PropTypes","object","isRequired","memo","SliceTooltip","slice","axis","theme","useTheme","otherAxis","TableTooltip","rows","points","map","Chip","style","tooltip","chip","serieId","tableCellValue","oneOf","commonPropTypes","arrayOf","shape","oneOfType","string","number","x","instanceOf","Date","y","xScale","xFormat","func","yScale","yFormat","layers","curve","lineCurvePropType","axisTop","axisPropType","axisRight","axisBottom","axisLeft","enableGridX","bool","enableGridY","gridXValues","gridYValues","enablePoints","pointSymbol","pointSize","pointColor","any","pointBorderWidth","pointBorderColor","enablePointLabel","pointLabel","markers","value","colors","ordinalColorsPropType","enableArea","areaOpacity","areaBlendMode","blendModePropType","areaBaselineValue","lineWidth","legends","LegendPropShape","isInteractive","debugMesh","enableSlices","debugSlices","sliceTooltip","enableCrosshair","crosshairType","LinePropTypes","role","useMesh","motionPropTypes","defsPropTypes","LineCanvasPropTypes","pixelRatio","commonDefaultProps","type","min","max","from","scheme","PointTooltip","LineDefaultProps","animate","motionConfig","defs","fill","LineCanvasDefaultProps","window","devicePixelRatio","useLineGenerator","useMemo","line","defined","d","curveFromProp","useAreaGenerator","area","y1","y0","series","getPointColor","getPointBorderColor","formatX","formatY","reduce","acc","serie","filter","datum","position","i","index","length","borderColor","useSlices","width","height","Map","forEach","has","set","get","push","Array","entries","sort","a","b","slicePoints","slices","prevSlice","nextSlice","x0","reverse","sliceHeight","useLine","xScaleSpec","yScaleSpec","enableSlicesTooltip","useValueFormatter","getColor","useOrdinalColorScale","useInheritedColor","hiddenIds","setHiddenIds","useState","rawSeries","computeXYScalesForSeries","indexOf","item","legendData","dataWithColor","label","find","Boolean","hidden","toggleSerie","useCallback","state","usePoints","lineGenerator","areaGenerator","AreaPath","path","config","springConfig","useMotionConfig","animatedPath","useAnimatedPath","animatedProps","useSpring","immediate","animated","fillOpacity","strokeWidth","mixBlendMode","Areas","lines","computedLines","LinesItem","thickness","stroke","Lines","SlicesItem","debug","isCurrent","setCurrent","showTooltipFromEvent","hideTooltip","useTooltip","handleMouseEnter","createElement","event","handleMouseMove","handleMouseLeave","strokeOpacity","onMouseEnter","onMouseMove","onMouseLeave","Slices","current","Points","symbol","size","borderWidth","enableLabel","labelYOffset","getLabel","getLabelGenerator","mappedPoints","DotsItem","Mesh","margin","onClick","showTooltipAt","left","top","handleClick","BaseMesh","nodes","Line","partialMargin","pointLabelYOffset","props","innerWidth","innerHeight","outerWidth","outerHeight","useDimensions","currentPoint","setCurrentPoint","currentSlice","setCurrentSlice","layerById","grid","Grid","xValues","yValues","CartesianMarkers","axes","Axes","right","bottom","areas","crosshair","mesh","legend","BoxLegendSvg","containerWidth","containerHeight","undefined","boundDefs","bindDefs","Crosshair","SvgWrapper","layer","Fragment","defaultProps","withContainer","ResponsiveLine","ResponsiveWrapper","LineCanvas","canvasRef","canvasEl","useRef","delaunay","voronoi","useVoronoiMesh","useEffect","ctx","getContext","scale","fillStyle","background","fillRect","translate","strokeStyle","renderGridLinesToCanvas","values","renderAxesToCanvas","save","globalAlpha","context","beginPath","restore","arc","Math","PI","renderVoronoiToCanvas","renderVoronoiCellToCanvas","renderLegendToCanvas","getPointFromMouseEvent","getRelativeCursor","isCursorInRect","pointIndex","handleMouseHover","ref","cursor","LineCanvasWithContainer","forwardRef"],"mappings":"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","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LinePointTooltip = ({ point }) => {\n    return (\n        <BasicTooltip\n            id={\n                <span>\n                    x: <strong>{point.data.xFormatted}</strong>, y:{' '}\n                    <strong>{point.data.yFormatted}</strong>\n                </span>\n            }\n            enableChip={true}\n            color={point.serieColor}\n        />\n    )\n}\n\nLinePointTooltip.propTypes = {\n    point: PropTypes.object.isRequired,\n}\n\nexport default memo(LinePointTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\nimport { Chip, TableTooltip } from '@nivo/tooltip'\n\nconst SliceTooltip = ({ slice, axis }) => {\n    const theme = useTheme()\n    const otherAxis = axis === 'x' ? 'y' : 'x'\n\n    return (\n        <TableTooltip\n            rows={slice.points.map(point => [\n                <Chip key=\"chip\" color={point.serieColor} style={theme.tooltip.chip} />,\n                point.serieId,\n                <span key=\"value\" style={theme.tooltip.tableCellValue}>\n                    {point.data[`${otherAxis}Formatted`]}\n                </span>,\n            ])}\n        />\n    )\n}\n\nSliceTooltip.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n}\n\nexport default memo(SliceTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType, blendModePropType, motionPropTypes, defsPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport { LegendPropShape } from '@nivo/legends'\nimport PointTooltip from './PointTooltip'\nimport SliceTooltip from './SliceTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                    y: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    xScale: PropTypes.object.isRequired,\n    xFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    yScale: PropTypes.object.isRequired,\n    yFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf([\n                'grid',\n                'markers',\n                'axes',\n                'areas',\n                'crosshair',\n                'lines',\n                'slices',\n                'points',\n                'mesh',\n                'legends',\n            ]),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    curve: lineCurvePropType.isRequired,\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    gridXValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    gridYValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n\n    enablePoints: PropTypes.bool.isRequired,\n    pointSymbol: PropTypes.func,\n    pointSize: PropTypes.number.isRequired,\n    pointColor: PropTypes.any.isRequired,\n    pointBorderWidth: PropTypes.number.isRequired,\n    pointBorderColor: PropTypes.any.isRequired,\n    enablePointLabel: PropTypes.bool.isRequired,\n    pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            style: PropTypes.object,\n        })\n    ),\n\n    colors: ordinalColorsPropType.isRequired,\n\n    enableArea: PropTypes.bool.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    areaBaselineValue: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableSlices: PropTypes.oneOf(['x', 'y', false]).isRequired,\n    debugSlices: PropTypes.bool.isRequired,\n    sliceTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableCrosshair: PropTypes.bool.isRequired,\n    crosshairType: PropTypes.string.isRequired,\n}\n\nexport const LinePropTypes = {\n    ...commonPropTypes,\n    enablePointLabel: PropTypes.bool.isRequired,\n    role: PropTypes.string.isRequired,\n    useMesh: PropTypes.bool.isRequired,\n    ...motionPropTypes,\n    ...defsPropTypes,\n}\n\nexport const LineCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    curve: 'linear',\n\n    xScale: {\n        type: 'point',\n    },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n\n    layers: [\n        'grid',\n        'markers',\n        'axes',\n        'areas',\n        'crosshair',\n        'lines',\n        'points',\n        'slices',\n        'mesh',\n        'legends',\n    ],\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: true,\n    enableGridY: true,\n\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: { from: 'color' },\n    pointBorderWidth: 0,\n    pointBorderColor: { theme: 'background' },\n    enablePointLabel: false,\n    pointLabel: 'yFormatted',\n\n    colors: { scheme: 'nivo' },\n    enableArea: false,\n    areaBaselineValue: 0,\n    areaOpacity: 0.2,\n    areaBlendMode: 'normal',\n    lineWidth: 2,\n\n    legends: [],\n\n    isInteractive: true,\n    tooltip: PointTooltip,\n    enableSlices: false,\n    debugSlices: false,\n    sliceTooltip: SliceTooltip,\n    debugMesh: false,\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n\nexport const LineDefaultProps = {\n    ...commonDefaultProps,\n    enablePointLabel: false,\n    useMesh: false,\n    animate: true,\n    motionConfig: 'gentle',\n    defs: [],\n    fill: [],\n    role: 'img',\n}\n\nexport const LineCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useCallback, useMemo, useState } from 'react'\nimport { area, line } from 'd3-shape'\nimport { curveFromProp, useTheme, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { LineDefaultProps } from './props'\n\nexport const useLineGenerator = ({ curve }) => {\n    return useMemo(\n        () =>\n            line()\n                .defined(d => d.x !== null && d.y !== null)\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n}\n\nexport const useAreaGenerator = ({ curve, yScale, areaBaselineValue }) => {\n    return useMemo(() => {\n        return area()\n            .defined(d => d.x !== null && d.y !== null)\n            .x(d => d.x)\n            .y1(d => d.y)\n            .curve(curveFromProp(curve))\n            .y0(yScale(areaBaselineValue))\n    }, [curve, yScale, areaBaselineValue])\n}\n\nconst usePoints = ({ series, getPointColor, getPointBorderColor, formatX, formatY }) => {\n    return useMemo(() => {\n        return series.reduce((acc, serie) => {\n            return [\n                ...acc,\n                ...serie.data\n                    .filter(datum => datum.position.x !== null && datum.position.y !== null)\n                    .map((datum, i) => {\n                        const point = {\n                            id: `${serie.id}.${i}`,\n                            index: acc.length + i,\n                            serieId: serie.id,\n                            serieColor: serie.color,\n                            x: datum.position.x,\n                            y: datum.position.y,\n                        }\n                        point.color = getPointColor(serie)\n                        point.borderColor = getPointBorderColor(point)\n                        point.data = {\n                            ...datum.data,\n                            xFormatted: formatX(datum.data.x),\n                            yFormatted: formatY(datum.data.y),\n                        }\n\n                        return point\n                    }),\n            ]\n        }, [])\n    }, [series, getPointColor, getPointBorderColor, formatX, formatY])\n}\n\nexport const useSlices = ({ enableSlices, points, width, height }) => {\n    return useMemo(() => {\n        if (enableSlices === false) return []\n\n        if (enableSlices === 'x') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.x)) map.set(point.x, [point])\n                else map.get(point.x).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([x, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let x0\n                    if (!prevSlice) x0 = x\n                    else x0 = x - (x - prevSlice[0]) / 2\n\n                    let sliceWidth\n                    if (!nextSlice) sliceWidth = width - x0\n                    else sliceWidth = x - x0 + (nextSlice[0] - x) / 2\n\n                    return {\n                        id: x,\n                        x0,\n                        x,\n                        y0: 0,\n                        y: 0,\n                        width: sliceWidth,\n                        height,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        } else if (enableSlices === 'y') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.y)) map.set(point.y, [point])\n                else map.get(point.y).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([y, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let y0\n                    if (!prevSlice) y0 = y\n                    else y0 = y - (y - prevSlice[0]) / 2\n\n                    let sliceHeight\n                    if (!nextSlice) sliceHeight = height - y0\n                    else sliceHeight = y - y0 + (nextSlice[0] - y) / 2\n\n                    return {\n                        id: y,\n                        x0: 0,\n                        x: 0,\n                        y0,\n                        y,\n                        width,\n                        height: sliceHeight,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        }\n    }, [enableSlices, points])\n}\n\nexport const useLine = ({\n    data,\n    xScale: xScaleSpec = LineDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = LineDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    colors = LineDefaultProps.colors,\n    curve = LineDefaultProps.curve,\n    areaBaselineValue = LineDefaultProps.areaBaselineValue,\n    pointColor = LineDefaultProps.pointColor,\n    pointBorderColor = LineDefaultProps.pointBorderColor,\n    enableSlices = LineDefaultProps.enableSlicesTooltip,\n}) => {\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const [hiddenIds, setHiddenIds] = useState([])\n\n    const {\n        xScale,\n        yScale,\n        series: rawSeries,\n    } = useMemo(\n        () =>\n            computeXYScalesForSeries(\n                data.filter(item => hiddenIds.indexOf(item.id) === -1),\n                xScaleSpec,\n                yScaleSpec,\n                width,\n                height\n            ),\n        [data, hiddenIds, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const { legendData, series } = useMemo(() => {\n        const dataWithColor = data.map(line => ({\n            id: line.id,\n            label: line.id,\n            color: getColor(line),\n        }))\n        const series = dataWithColor\n            .map(datum => ({\n                ...rawSeries.find(serie => serie.id === datum.id),\n                color: datum.color,\n            }))\n            .filter(item => Boolean(item.id))\n        const legendData = dataWithColor\n            .map(item => ({ ...item, hidden: !series.find(serie => serie.id === item.id) }))\n            .reverse()\n\n        return { legendData, series }\n    }, [data, rawSeries, getColor])\n\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const points = usePoints({\n        series,\n        getPointColor,\n        getPointBorderColor,\n        formatX,\n        formatY,\n    })\n\n    const slices = useSlices({\n        enableSlices,\n        points,\n        width,\n        height,\n    })\n\n    const lineGenerator = useLineGenerator({ curve })\n    const areaGenerator = useAreaGenerator({\n        curve,\n        yScale,\n        areaBaselineValue,\n    })\n\n    return {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        getColor,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\n\nconst AreaPath = ({ areaBlendMode, areaOpacity, color, fill, path }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={fill ? fill : animatedProps.color}\n            fillOpacity={areaOpacity}\n            strokeWidth={0}\n            style={{\n                mixBlendMode: areaBlendMode,\n            }}\n        />\n    )\n}\n\nAreaPath.propTypes = {\n    areaBlendMode: blendModePropType.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    color: PropTypes.string,\n    fill: PropTypes.string,\n    path: PropTypes.string.isRequired,\n}\n\nconst Areas = ({ areaGenerator, areaOpacity, areaBlendMode, lines }) => {\n    const computedLines = lines.slice(0).reverse()\n\n    return (\n        <g>\n            {computedLines.map(line => (\n                <AreaPath\n                    key={line.id}\n                    path={areaGenerator(line.data.map(d => d.position))}\n                    {...{ areaOpacity, areaBlendMode, ...line }}\n                />\n            ))}\n        </g>\n    )\n}\n\nAreas.propTypes = {\n    areaGenerator: PropTypes.func.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    lines: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default memo(Areas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath } from '@nivo/core'\n\nconst LinesItem = ({ lineGenerator, points, color, thickness }) => {\n    const path = useMemo(() => lineGenerator(points), [lineGenerator, points])\n    const animatedPath = useAnimatedPath(path)\n\n    return <animated.path d={animatedPath} fill=\"none\" strokeWidth={thickness} stroke={color} />\n}\n\nLinesItem.propTypes = {\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            y: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        })\n    ),\n    lineGenerator: PropTypes.func.isRequired,\n    color: PropTypes.string.isRequired,\n    thickness: PropTypes.number.isRequired,\n}\n\nexport default memo(LinesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport LinesItem from './LinesItem'\n\nconst Lines = ({ lines, lineGenerator, lineWidth }) => {\n    return lines\n        .slice(0)\n        .reverse()\n        .map(({ id, data, color }) => (\n            <LinesItem\n                key={id}\n                id={id}\n                points={data.map(d => d.position)}\n                lineGenerator={lineGenerator}\n                color={color}\n                thickness={lineWidth}\n            />\n        ))\n}\n\nLines.propTypes = {\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    data: PropTypes.shape({\n                        x: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                        y: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                    }).isRequired,\n                    position: PropTypes.shape({\n                        x: PropTypes.number,\n                        y: PropTypes.number,\n                    }).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n}\n\nexport default memo(Lines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst SlicesItem = ({ slice, axis, debug, tooltip, isCurrent, setCurrent }) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            setCurrent(slice)\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n        setCurrent(null)\n    }, [hideTooltip])\n\n    return (\n        <rect\n            x={slice.x0}\n            y={slice.y0}\n            width={slice.width}\n            height={slice.height}\n            stroke=\"red\"\n            strokeWidth={debug ? 1 : 0}\n            strokeOpacity={0.75}\n            fill=\"red\"\n            fillOpacity={isCurrent && debug ? 0.35 : 0}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n\nSlicesItem.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    isCurrent: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(SlicesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SlicesItem from './SlicesItem'\n\nconst Slices = ({ slices, axis, debug, height, tooltip, current, setCurrent }) => {\n    return slices.map(slice => (\n        <SlicesItem\n            key={slice.id}\n            slice={slice}\n            axis={axis}\n            debug={debug}\n            height={height}\n            tooltip={tooltip}\n            setCurrent={setCurrent}\n            isCurrent={current !== null && current.id === slice.id}\n        />\n    ))\n}\n\nSlices.propTypes = {\n    slices: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            points: PropTypes.arrayOf(PropTypes.object).isRequired,\n        })\n    ).isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    current: PropTypes.object,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(Slices)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { getLabelGenerator, DotsItem, useTheme } from '@nivo/core'\n\nconst Points = ({ points, symbol, size, borderWidth, enableLabel, label, labelYOffset }) => {\n    const theme = useTheme()\n    const getLabel = getLabelGenerator(label)\n\n    /**\n     * We reverse the `points` array so that points from the lower lines in stacked lines\n     * graph are drawn on top. See https://github.com/plouc/nivo/issues/1051.\n     */\n    const mappedPoints = points.reverse().map(point => {\n        const mappedPoint = {\n            id: point.id,\n            x: point.x,\n            y: point.y,\n            datum: point.data,\n            fill: point.color,\n            stroke: point.borderColor,\n            label: enableLabel ? getLabel(point.data) : null,\n        }\n\n        return mappedPoint\n    })\n\n    return (\n        <g>\n            {mappedPoints.map(point => (\n                <DotsItem\n                    key={point.id}\n                    x={point.x}\n                    y={point.y}\n                    datum={point.datum}\n                    symbol={symbol}\n                    size={size}\n                    color={point.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    theme={theme}\n                />\n            ))}\n        </g>\n    )\n}\n\nPoints.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object),\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelYOffset: PropTypes.number,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\n\nconst Mesh = ({\n    points,\n    width,\n    height,\n    margin,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    debug,\n}) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseEnter && onMouseEnter(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]\n    )\n\n    const handleMouseMove = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseMove && onMouseMove(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (point, event) => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(point, event)\n        },\n        [hideTooltip, setCurrent, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (point, event) => {\n            onClick && onClick(point, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={points}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            debug={debug}\n        />\n    )\n}\n\nMesh.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: PropTypes.object.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    debug: PropTypes.bool.isRequired,\n}\n\nexport default memo(Mesh)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useState } from 'react'\nimport {\n    bindDefs,\n    withContainer,\n    useDimensions,\n    useTheme,\n    SvgWrapper,\n    CartesianMarkers,\n} from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { Crosshair } from '@nivo/tooltip'\nimport { useLine } from './hooks'\nimport { LinePropTypes, LineDefaultProps } from './props'\nimport Areas from './Areas'\nimport Lines from './Lines'\nimport Slices from './Slices'\nimport Points from './Points'\nimport Mesh from './Mesh'\n\nconst Line = props => {\n    const {\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        layers,\n        curve,\n        areaBaselineValue,\n\n        colors,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n        gridXValues,\n        gridYValues,\n\n        lineWidth,\n        enableArea,\n        areaOpacity,\n        areaBlendMode,\n\n        enablePoints,\n        pointSymbol,\n        pointSize,\n        pointColor,\n        pointBorderWidth,\n        pointBorderColor,\n        enablePointLabel,\n        pointLabel,\n        pointLabelYOffset,\n\n        defs,\n        fill,\n\n        markers,\n\n        legends,\n\n        isInteractive,\n\n        useMesh,\n        debugMesh,\n\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n\n        tooltip,\n\n        enableSlices,\n        debugSlices,\n        sliceTooltip,\n\n        enableCrosshair,\n        crosshairType,\n\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n        enableSlices,\n    })\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const [currentPoint, setCurrentPoint] = useState(null)\n    const [currentSlice, setCurrentSlice] = useState(null)\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                theme={theme}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        ),\n        markers: (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale}\n                yScale={yScale}\n                theme={theme}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                theme={theme}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        areas: null,\n        lines: (\n            <Lines key=\"lines\" lines={series} lineGenerator={lineGenerator} lineWidth={lineWidth} />\n        ),\n        slices: null,\n        points: null,\n        crosshair: null,\n        mesh: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend.${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legend.data || legendData}\n                theme={theme}\n                toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n            />\n        )),\n    }\n\n    const boundDefs = bindDefs(defs, series, fill)\n\n    if (enableArea) {\n        layerById.areas = (\n            <Areas\n                key=\"areas\"\n                areaGenerator={areaGenerator}\n                areaOpacity={areaOpacity}\n                areaBlendMode={areaBlendMode}\n                lines={series}\n            />\n        )\n    }\n\n    if (isInteractive && enableSlices !== false) {\n        layerById.slices = (\n            <Slices\n                key=\"slices\"\n                slices={slices}\n                axis={enableSlices}\n                debug={debugSlices}\n                height={innerHeight}\n                tooltip={sliceTooltip}\n                current={currentSlice}\n                setCurrent={setCurrentSlice}\n            />\n        )\n    }\n\n    if (enablePoints) {\n        layerById.points = (\n            <Points\n                key=\"points\"\n                points={points}\n                symbol={pointSymbol}\n                size={pointSize}\n                color={getPointColor}\n                borderWidth={pointBorderWidth}\n                borderColor={getPointBorderColor}\n                enableLabel={enablePointLabel}\n                label={pointLabel}\n                labelYOffset={pointLabelYOffset}\n            />\n        )\n    }\n\n    if (isInteractive && enableCrosshair) {\n        if (currentPoint !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentPoint.x}\n                    y={currentPoint.y}\n                    type={crosshairType}\n                />\n            )\n        }\n        if (currentSlice !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentSlice.x}\n                    y={currentSlice.y}\n                    type={enableSlices}\n                />\n            )\n        }\n    }\n\n    if (isInteractive && useMesh && enableSlices === false) {\n        layerById.mesh = (\n            <Mesh\n                key=\"mesh\"\n                points={points}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                current={currentPoint}\n                setCurrent={setCurrentPoint}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                series,\n                                slices,\n                                points,\n                                xScale,\n                                yScale,\n                                lineGenerator,\n                                areaGenerator,\n                                currentPoint,\n                                setCurrentPoint,\n                                currentSlice,\n                                setCurrentSlice,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nLine.propTypes = LinePropTypes\nLine.defaultProps = LineDefaultProps\n\nexport default withContainer(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Line from './Line'\n\nconst ResponsiveLine = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Line width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveLine\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, useRef, useEffect, useState, useCallback, forwardRef } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    getRelativeCursor,\n    isCursorInRect,\n} from '@nivo/core'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { LineCanvasPropTypes, LineCanvasDefaultProps } from './props'\nimport { useLine } from './hooks'\n\nconst LineCanvas = ({\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio,\n\n    data,\n    xScale: xScaleSpec,\n    xFormat,\n    yScale: yScaleSpec,\n    yFormat,\n    curve,\n\n    layers,\n\n    colors,\n    lineWidth,\n\n    enableArea,\n    areaBaselineValue,\n    areaOpacity,\n\n    enablePoints,\n    pointSize,\n    pointColor,\n    pointBorderWidth,\n    pointBorderColor,\n\n    enableGridX,\n    gridXValues,\n    enableGridY,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n\n    legends,\n\n    isInteractive,\n    debugMesh,\n    //onMouseEnter,\n    //onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n\n    canvasRef,\n}) => {\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const theme = useTheme()\n    const [currentPoint, setCurrentPoint] = useState(null)\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n    })\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    useEffect(() => {\n        if (canvasRef) {\n            canvasRef.current = canvasEl.current\n        }\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (typeof layer === 'function') {\n                layer({\n                    ctx,\n                    innerWidth,\n                    innerHeight,\n                    series,\n                    points,\n                    xScale,\n                    yScale,\n                    lineWidth,\n                    lineGenerator,\n                    areaGenerator,\n                    currentPoint,\n                    setCurrentPoint,\n                })\n            }\n\n            if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n                ctx.lineWidth = theme.grid.line.strokeWidth\n                ctx.strokeStyle = theme.grid.line.stroke\n\n                enableGridX &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            }\n\n            if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale,\n                    yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            }\n\n            if (layer === 'areas' && enableArea === true) {\n                ctx.save()\n                ctx.globalAlpha = areaOpacity\n\n                areaGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.fillStyle = serie.color\n                    ctx.beginPath()\n                    areaGenerator(serie.data.map(d => d.position))\n                    ctx.fill()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'lines') {\n                lineGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.strokeStyle = serie.color\n                    ctx.lineWidth = lineWidth\n                    ctx.beginPath()\n                    lineGenerator(serie.data.map(d => d.position))\n                    ctx.stroke()\n                })\n            }\n\n            if (layer === 'points' && enablePoints === true && pointSize > 0) {\n                points.forEach(point => {\n                    ctx.fillStyle = point.color\n                    ctx.beginPath()\n                    ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (pointBorderWidth > 0) {\n                        ctx.strokeStyle = point.borderColor\n                        ctx.lineWidth = pointBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            }\n\n            if (layer === 'mesh' && debugMesh === true) {\n                renderVoronoiToCanvas(ctx, voronoi)\n                if (currentPoint) {\n                    renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index)\n                }\n            }\n\n            if (layer === 'legends') {\n                const legendData = series\n                    .map(serie => ({\n                        id: serie.id,\n                        label: serie.id,\n                        color: serie.color,\n                    }))\n                    .reverse()\n\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legend.data || legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        lineGenerator,\n        series,\n        xScale,\n        yScale,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        points,\n        enablePoints,\n        pointSize,\n        currentPoint,\n    ])\n\n    const getPointFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const pointIndex = delaunay.find(x - margin.left, y - margin.top)\n            return points[pointIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const point = getPointFromMouseEvent(event)\n            setCurrentPoint(point)\n\n            if (point) {\n                showTooltipFromEvent(createElement(tooltip, { point }), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentPoint(null)\n            currentPoint && onMouseLeave && onMouseLeave(currentPoint, event)\n        },\n        [hideTooltip, setCurrentPoint, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const point = getPointFromMouseEvent(event)\n                point && onClick(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nLineCanvas.propTypes = LineCanvasPropTypes\nLineCanvas.defaultProps = LineCanvasDefaultProps\n\nconst LineCanvasWithContainer = withContainer(LineCanvas)\n\nexport default forwardRef((props, ref) => <LineCanvasWithContainer {...props} canvasRef={ref} />)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport LineCanvas from './LineCanvas'\n\nconst ResponsiveLineCanvas = (props, ref) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <LineCanvas width={width} height={height} {...props} ref={ref} />}\n    </ResponsiveWrapper>\n)\n\nexport default forwardRef(ResponsiveLineCanvas)\n"]},"metadata":{},"sourceType":"module"}