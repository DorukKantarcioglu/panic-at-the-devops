{"ast":null,"code":"import axios from \"axios\";\nimport SeatingPlan from \"../app/components/SeatingPlan\";\nimport LocalStorageService from \"./LocalStorageService\";\n\nconst SeatingPlanService = function () {\n  const path = \"http://localhost:8080/api/v1/seatingPlans\";\n\n  const _create = async (rowNo, columnNo) => {\n    const response = await axios.post(path, {}, {\n      headers: {\n        rowNo: rowNo,\n        columnNo: columnNo,\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getSeatingPlan = async seatingPlanId => {\n    const response = await axios.get(path.concat(\"/\").concat(seatingPlanId), {\n      headers: {\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _delete = async seatingPlanId => {\n    const response = await axios.delete(path, {\n      headers: {\n        id: seatingPlanId,\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _addSeating = async props => {\n    const response = await axios.post(path.concat(\"/\").concat(props.seatingPlanId).concat(\"/seatings\"), {}, {\n      headers: {\n        studentId: props.studentId,\n        rowNo: props.rowNo,\n        columnNo: props.columnNo,\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getSeatings = async seatingPlanId => {\n    const response = await axios.get(path.concat(\"/\").concat(seatingPlanId).concat(\"/seatings\"), {\n      headers: {\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _removeSeating = async props => {\n    const response = await axios.delete(path.concat(\"/\").concat(props.seatingPlanId).concat(\"/seatings\").concat(props.seatingId), {\n      headers: {\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  return {\n    create: _create,\n    getSeatingPlan: _getSeatingPlan,\n    delete: _delete,\n    addSeating: _addSeating,\n    getSeatings: _getSeatings,\n    removeSeating: _removeSeating\n  };\n}();\n\nexport default SeatingPlanService;","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/service/SeatingPlanService.js"],"names":["axios","SeatingPlan","LocalStorageService","SeatingPlanService","path","_create","rowNo","columnNo","response","post","headers","Authorization","getToken","data","_getSeatingPlan","seatingPlanId","get","concat","_delete","delete","id","_addSeating","props","studentId","_getSeatings","_removeSeating","seatingId","create","getSeatingPlan","addSeating","getSeatings","removeSeating"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport SeatingPlan from \"../app/components/SeatingPlan\";\nimport LocalStorageService from \"./LocalStorageService\";\n\nconst SeatingPlanService = (function () {\n\n    const path = \"http://localhost:8080/api/v1/seatingPlans\";\n\n    const _create=async (rowNo, columnNo) => {\n        const response = await axios.post(path,{}, {\n            headers: {\n                rowNo: rowNo,\n                columnNo: columnNo,\n                Authorization : \"Bearer \" + LocalStorageService.getToken()\n            }\n        })\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _getSeatingPlan=async (seatingPlanId) => {\n        const response = await axios.get(path.concat(\"/\").concat(seatingPlanId),{headers:{\n                Authorization : \"Bearer \" + LocalStorageService.getToken()\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _delete=async (seatingPlanId) => {\n        const response = await axios.delete(path, {headers: {\n            id:seatingPlanId,\n                Authorization : \"Bearer \" + LocalStorageService.getToken()\n        }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _addSeating=async (props)=>{\n        const response = await axios.post(path.concat(\"/\").concat(props.seatingPlanId).concat(\"/seatings\"),{}, {headers:{\n                studentId: props.studentId,\n                rowNo: props.rowNo,\n                columnNo: props.columnNo,\n                Authorization : \"Bearer \" + LocalStorageService.getToken()\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _getSeatings=async (seatingPlanId)=>{\n        const response = await axios.get(path.concat(\"/\").concat(seatingPlanId).concat(\"/seatings\"),{headers:{\n                Authorization : \"Bearer \" + LocalStorageService.getToken()\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _removeSeating =async (props)=>\n    {\n        const response = await axios.delete(path.concat(\"/\").concat(props.seatingPlanId).concat(\"/seatings\").concat(props.seatingId),\n            {headers:{\n                    Authorization : \"Bearer \" + LocalStorageService.getToken()\n                }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    return(\n        {\n            create: _create,\n            getSeatingPlan: _getSeatingPlan,\n            delete: _delete,\n            addSeating: _addSeating,\n            getSeatings: _getSeatings,\n            removeSeating: _removeSeating\n        }\n    )\n})();\nexport default SeatingPlanService;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}