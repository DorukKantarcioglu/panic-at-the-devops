{"ast":null,"code":"var _jsxFileName = \"/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/SeatingPlan.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SeatingPlan = () => {\n  _s();\n\n  const [chart, setChart] = useState([]);\n  const [data, setData] = useState([21902461, 21902444, \"ccc\", \"ddd\", 2190222, \"\", \"xxx\"]);\n  const [rowNo, setRowNo] = useState(2);\n  const [columnNo, setColumnNo] = useState(4);\n  const [read, setRead] = useState(false);\n  useEffect(() => {\n    fetchSeatingPlan();\n  }, []);\n\n  const saveStudent = event => {\n    let seatId = event.target.id;\n    let studentId = event.target.value;\n    let temp = data;\n    temp[seatId] = studentId;\n    setData(temp);\n  };\n\n  const fetchSeatingPlan = () => {\n    let table = [];\n    let parent = [];\n\n    for (let i = 0; i <= rowNo; i++) {\n      let children = [];\n\n      for (let j = 0; j <= columnNo; j++) {\n        let id = j + i * columnNo;\n        if (j === 0) children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            type: \"text\",\n            name: \"seat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 40\n          }, this), \" \", i]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 35\n        }, this));\n        if (i === 0) children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            type: \"text\",\n            name: \"seat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 40\n          }, this), \" \", String.fromCharCode(j + 97)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 35\n        }, this));else children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"seat\",\n            id: id,\n            onChange: saveStudent,\n            readOnly: false,\n            contentEditable: true,\n            placeholder: data[id]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 35\n        }, this));\n      }\n\n      parent.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [\" \", children, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this));\n    }\n\n    table.push( /*#__PURE__*/_jsxDEV(\"table\", {\n      children: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 20\n    }, this));\n    setChart(table);\n  };\n\n  const updateChart = () => {\n    setRead(false);\n  };\n\n  const handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seatingPlanForm\",\n    children: [chart, /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"seatingPlanUpdate\",\n      onClick: updateChart,\n      children: \" Update the seating plan \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SeatingPlan, \"PYja5rAef7FBZffQMOMb7tWUXOA=\");\n\n_c = SeatingPlan;\nexport default SeatingPlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeatingPlan\");","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/SeatingPlan.js"],"names":["React","useEffect","useState","SeatingPlan","chart","setChart","data","setData","rowNo","setRowNo","columnNo","setColumnNo","read","setRead","fetchSeatingPlan","saveStudent","event","seatId","target","id","studentId","value","temp","table","parent","i","children","j","push","String","fromCharCode","updateChart","handleChange","setState","name"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nconst SeatingPlan =()=>\n{\n\n    const [chart, setChart] = useState([]);\n    const [data, setData] = useState([21902461, 21902444, \"ccc\", \"ddd\", 2190222,\"\", \"xxx\"]);\n    const [rowNo, setRowNo] = useState(2);\n    const [columnNo, setColumnNo] = useState(4);\n    const [read, setRead] = useState(false);\n\n\n    useEffect(()=>{\n        fetchSeatingPlan();\n    },[])\n\n    const saveStudent = (event) => {\n        let seatId = event.target.id;\n        let studentId = event.target.value;\n        let temp = data;\n        temp[seatId] = studentId;\n        setData(temp);\n    };\n\n    const fetchSeatingPlan=()=>\n    {\n        let table = [];\n        let parent = [];\n        for (let i = 0; i <= rowNo; i++)\n        {\n            let children = [];\n            for (let j = 0; j <= columnNo; j++)\n            {\n                let id = j+(i*columnNo);\n                if (j === 0)\n                    children.push(<td> <label type=\"text\" name=\"seat\" /> {i}</td>)\n                if (i === 0)\n                    children.push(<td> <label type=\"text\" name=\"seat\" /> {String.fromCharCode(j+97)}</td>)\n                else\n                    children.push(<td>\n                        <input type=\"text\" name=\"seat\" id = {id}\n                               onChange={saveStudent} readOnly={false} contentEditable={true} placeholder={data[id]}>\n\n                        </input> </td>);\n            }\n            parent.push(<tr> {children} </tr>);\n        }\n        table.push(<table>{parent}</table>)\n\n        setChart(table);\n    }\n\n    const updateChart=()=>{\n        setRead(false);\n    }\n\n    const handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    };\n\n\n        return(\n\n            <div className=\"seatingPlanForm\">\n                {chart}\n                <button id = \"seatingPlanUpdate\" onClick={updateChart}> Update the seating plan </button>\n            </div>\n        )\n\n}\n\nexport default SeatingPlan;"]},"metadata":{},"sourceType":"module"}