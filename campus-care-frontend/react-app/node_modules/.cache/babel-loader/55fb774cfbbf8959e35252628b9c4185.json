{"ast":null,"code":"import axios from \"axios\";\nimport LocalStorageService from \"./LocalStorageService\";\n\nconst CovidInfoService = function () {\n  const _getNotAllowedStudents = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/covid/students\", {\n      headers: {\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotAllowedInstructors = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/covid/instructors\", {\n      headers: {\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotAllowedStaffs = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/covid/staffs\", {\n      headers: {\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotAllowedStudentsInCourse = async courseCode => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/covid/courses/\".concat(courseCode), {\n      headers: {\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotAllowedStudentsInCafeteria = async cafeteriaName => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/covid/cafeterias/\".concat(cafeteriaName), {\n      headers: {\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotAllowedStudentsInSmokingArea = async smokingAreaName => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/covid/smokingAreas/\".concat(smokingAreaName), {\n      headers: {\n        Authorization: \"Bearer \" + LocalStorageService.getToken()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _validateHesCode = async (hesCode, trIdNumber, eGovernmentPassword) => {\n    const response = await axios.put(\"http://localhost:8080/api/v1/covid\", {}, {\n      headers: {\n        hesCode: hesCode,\n        tridNumber: trIdNumber,\n        eGovernmentPassword: eGovernmentPassword\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _validateHesCode2 = async (trIdNumber, eGovernmentPassword) => {\n    const response = await axios.put(\"http://localhost:8080/api/v1/covid\", {}, {\n      headers: {\n        tridNumber: trIdNumber,\n        eGovernmentPassword: eGovernmentPassword\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotAllowedStatistics = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/covid/statistics/notAllowed\");\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getVaccinatedStatistics = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/covid/statistics/vaccinated\");\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotVaccinatedStatistics = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/covid/statistics/notVaccinated\");\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getTestedStatistics = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/covid/statistics/tested\");\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  return {\n    getNotAllowedStudents: _getNotAllowedStudents,\n    getNotAllowedInstructors: _getNotAllowedInstructors,\n    getNotAllowedStaffs: _getNotAllowedStaffs,\n    getNotAllowedStudentsInCourse: _getNotAllowedStudentsInCourse,\n    getNotAllowedStudentsInCafeteria: _getNotAllowedStudentsInCafeteria,\n    getNotAllowedStudentsInSmokingArea: _getNotAllowedStudentsInSmokingArea,\n    validateHesCode: _validateHesCode,\n    validateHesCode2: _validateHesCode2,\n    getNotAllowedStatistics: _getNotAllowedStatistics,\n    getVaccinatedStatistics: _getVaccinatedStatistics,\n    getNotVaccinatedStatistics: _getNotVaccinatedStatistics,\n    getTestedStatistics: _getTestedStatistics\n  };\n}();\n\nexport default CovidInfoService;","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/service/CovidInfoService.js"],"names":["axios","LocalStorageService","CovidInfoService","_getNotAllowedStudents","response","get","headers","Authorization","getToken","data","_getNotAllowedInstructors","_getNotAllowedStaffs","_getNotAllowedStudentsInCourse","courseCode","concat","_getNotAllowedStudentsInCafeteria","cafeteriaName","_getNotAllowedStudentsInSmokingArea","smokingAreaName","_validateHesCode","hesCode","trIdNumber","eGovernmentPassword","put","tridNumber","_validateHesCode2","_getNotAllowedStatistics","_getVaccinatedStatistics","_getNotVaccinatedStatistics","_getTestedStatistics","getNotAllowedStudents","getNotAllowedInstructors","getNotAllowedStaffs","getNotAllowedStudentsInCourse","getNotAllowedStudentsInCafeteria","getNotAllowedStudentsInSmokingArea","validateHesCode","validateHesCode2","getNotAllowedStatistics","getVaccinatedStatistics","getNotVaccinatedStatistics","getTestedStatistics"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;AAEA,MAAMC,gBAAgB,GAAI,YAAY;AACpC,QAAMC,sBAAsB,GAAG,YAAY;AACzC,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACrB,6CADqB,EACyB;AAC1CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYN,mBAAmB,CAACO,QAApB;AADpB;AADiC,KADzB,CAAvB;;AAMA,QAAIJ,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAVD;;AAYA,QAAMC,yBAAyB,GAAG,YAAY;AAC5C,UAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACrB,gDADqB,EAC4B;AAC7CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYN,mBAAmB,CAACO,QAApB;AADpB;AADoC,KAD5B,CAAvB;;AAMA,QAAIJ,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAVD;;AAYA,QAAME,oBAAoB,GAAG,YAAY;AACvC,UAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACrB,2CADqB,EACuB;AACxCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYN,mBAAmB,CAACO,QAApB;AADpB;AAD+B,KADvB,CAAvB;;AAMA,QAAIJ,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAVD;;AAYA,QAAMG,8BAA8B,GAAG,MAAOC,UAAP,IAAsB;AAC3D,UAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACrB,8CAA8CS,MAA9C,CAAqDD,UAArD,CADqB,EAC4C;AAC7DP,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYN,mBAAmB,CAACO,QAApB;AADpB;AADoD,KAD5C,CAAvB;;AAMA,QAAIJ,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAVD;;AAYA,QAAMM,iCAAiC,GAAG,MAAOC,aAAP,IAAyB;AACjE,UAAMZ,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACrB,iDAAiDS,MAAjD,CAAwDE,aAAxD,CADqB,EACkD;AACnEV,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYN,mBAAmB,CAACO,QAApB;AADpB;AAD0D,KADlD,CAAvB;;AAMA,QAAIJ,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAVD;;AAYA,QAAMQ,mCAAmC,GAAG,MAAOC,eAAP,IAA2B;AACrE,UAAMd,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACrB,mDAAmDS,MAAnD,CAA0DI,eAA1D,CADqB,EACsD;AACvEZ,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYN,mBAAmB,CAACO,QAApB;AADpB;AAD8D,KADtD,CAAvB;;AAMA,QAAIJ,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAVD;;AAYA,QAAMU,gBAAgB,GAAG,OAAOC,OAAP,EAAgBC,UAAhB,EAA4BC,mBAA5B,KAAoD;AAC3E,UAAMlB,QAAQ,GAAG,MAAMJ,KAAK,CAACuB,GAAN,CACrB,oCADqB,EAErB,EAFqB,EAGrB;AACEjB,MAAAA,OAAO,EAAE;AACPc,QAAAA,OAAO,EAAEA,OADF;AAEPI,QAAAA,UAAU,EAAEH,UAFL;AAGPC,QAAAA,mBAAmB,EAAEA;AAHd;AADX,KAHqB,CAAvB;;AAWA,QAAIlB,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAfD;;AAiBA,QAAMgB,iBAAiB,GAAG,OAAOJ,UAAP,EAAmBC,mBAAnB,KAA2C;AACnE,UAAMlB,QAAQ,GAAG,MAAMJ,KAAK,CAACuB,GAAN,CACrB,oCADqB,EAErB,EAFqB,EAGrB;AACEjB,MAAAA,OAAO,EAAE;AACPkB,QAAAA,UAAU,EAAEH,UADL;AAEPC,QAAAA,mBAAmB,EAAEA;AAFd;AADX,KAHqB,CAAvB;;AAUA,QAAIlB,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAdD;;AAgBA,QAAMiB,wBAAwB,GAAG,YAAY;AAC3C,UAAMtB,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACnB,0DADmB,CAAvB;;AAGA,QAAID,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAPD;;AASA,QAAMkB,wBAAwB,GAAG,YAAY;AAC3C,UAAMvB,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACnB,0DADmB,CAAvB;;AAGA,QAAID,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAPD;;AASA,QAAMmB,2BAA2B,GAAG,YAAY;AAC9C,UAAMxB,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACnB,6DADmB,CAAvB;;AAGA,QAAID,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAPD;;AASA,QAAMoB,oBAAoB,GAAG,YAAY;AACvC,UAAMzB,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACnB,sDADmB,CAAvB;;AAGA,QAAID,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACK,IAAhB;AACD;AACF,GAPD;;AAUA,SAAO;AACLqB,IAAAA,qBAAqB,EAAE3B,sBADlB;AAEL4B,IAAAA,wBAAwB,EAAErB,yBAFrB;AAGLsB,IAAAA,mBAAmB,EAAErB,oBAHhB;AAILsB,IAAAA,6BAA6B,EAAErB,8BAJ1B;AAKLsB,IAAAA,gCAAgC,EAAEnB,iCAL7B;AAMLoB,IAAAA,kCAAkC,EAAElB,mCAN/B;AAOLmB,IAAAA,eAAe,EAAEjB,gBAPZ;AAQLkB,IAAAA,gBAAgB,EAAEZ,iBARb;AASLa,IAAAA,uBAAuB,EAAEZ,wBATpB;AAULa,IAAAA,uBAAuB,EAACZ,wBAVnB;AAWLa,IAAAA,0BAA0B,EAACZ,2BAXtB;AAYLa,IAAAA,mBAAmB,EAACZ;AAZf,GAAP;AAcD,CA7JwB,EAAzB;;AA+JA,eAAe3B,gBAAf","sourcesContent":["import axios from \"axios\";\nimport LocalStorageService from \"./LocalStorageService\";\n\nconst CovidInfoService = (function () {\n  const _getNotAllowedStudents = async () => {\n    const response = await axios.get(\n      \"http://localhost:8080/api/v1/covid/students\",{\n          headers: {\n            Authorization: \"Bearer \" + LocalStorageService.getToken()\n          }}\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotAllowedInstructors = async () => {\n    const response = await axios.get(\n      \"http://localhost:8080/api/v1/covid/instructors\",{\n          headers: {\n            Authorization: \"Bearer \" + LocalStorageService.getToken()\n          }}\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotAllowedStaffs = async () => {\n    const response = await axios.get(\n      \"http://localhost:8080/api/v1/covid/staffs\",{\n          headers: {\n            Authorization: \"Bearer \" + LocalStorageService.getToken()\n          }}\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotAllowedStudentsInCourse = async (courseCode) => {\n    const response = await axios.get(\n      \"http://localhost:8080/api/v1/covid/courses/\".concat(courseCode),{\n          headers: {\n            Authorization: \"Bearer \" + LocalStorageService.getToken()\n          }}\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotAllowedStudentsInCafeteria = async (cafeteriaName) => {\n    const response = await axios.get(\n      \"http://localhost:8080/api/v1/covid/cafeterias/\".concat(cafeteriaName),{\n          headers: {\n            Authorization: \"Bearer \" + LocalStorageService.getToken()\n          }}\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotAllowedStudentsInSmokingArea = async (smokingAreaName) => {\n    const response = await axios.get(\n      \"http://localhost:8080/api/v1/covid/smokingAreas/\".concat(smokingAreaName),{\n          headers: {\n            Authorization: \"Bearer \" + LocalStorageService.getToken()\n          }}\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _validateHesCode = async (hesCode, trIdNumber, eGovernmentPassword) => {\n    const response = await axios.put(\n      \"http://localhost:8080/api/v1/covid\",\n      {},\n      {\n        headers: {\n          hesCode: hesCode,\n          tridNumber: trIdNumber,\n          eGovernmentPassword: eGovernmentPassword,\n        },\n      }\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _validateHesCode2 = async (trIdNumber, eGovernmentPassword) => {\n    const response = await axios.put(\n      \"http://localhost:8080/api/v1/covid\",\n      {},\n      {\n        headers: {\n          tridNumber: trIdNumber,\n          eGovernmentPassword: eGovernmentPassword,\n        },\n      }\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotAllowedStatistics = async () => {\n    const response = await axios.get(\n        \"http://localhost:8080/api/v1/covid/statistics/notAllowed\"\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getVaccinatedStatistics = async () => {\n    const response = await axios.get(\n        \"http://localhost:8080/api/v1/covid/statistics/vaccinated\"\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotVaccinatedStatistics = async () => {\n    const response = await axios.get(\n        \"http://localhost:8080/api/v1/covid/statistics/notVaccinated\"\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getTestedStatistics = async () => {\n    const response = await axios.get(\n        \"http://localhost:8080/api/v1/covid/statistics/tested\"\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n\n  return {\n    getNotAllowedStudents: _getNotAllowedStudents,\n    getNotAllowedInstructors: _getNotAllowedInstructors,\n    getNotAllowedStaffs: _getNotAllowedStaffs,\n    getNotAllowedStudentsInCourse: _getNotAllowedStudentsInCourse,\n    getNotAllowedStudentsInCafeteria: _getNotAllowedStudentsInCafeteria,\n    getNotAllowedStudentsInSmokingArea: _getNotAllowedStudentsInSmokingArea,\n    validateHesCode: _validateHesCode,\n    validateHesCode2: _validateHesCode2,\n    getNotAllowedStatistics: _getNotAllowedStatistics,\n    getVaccinatedStatistics:_getVaccinatedStatistics,\n    getNotVaccinatedStatistics:_getNotVaccinatedStatistics,\n    getTestedStatistics:_getTestedStatistics,\n  };\n})();\n\nexport default CovidInfoService;\n\n"]},"metadata":{},"sourceType":"module"}