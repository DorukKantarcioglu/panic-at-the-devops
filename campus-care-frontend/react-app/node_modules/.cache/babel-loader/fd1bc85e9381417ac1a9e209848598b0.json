{"ast":null,"code":"var _jsxFileName = \"/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/NotificationList.js\",\n    _s = $RefreshSig$();\n\nimport ReservationService from \"../../service/ReservationService\";\nimport { useEffect, useState } from \"react\";\nimport NotificationService from \"../../service/NotificationService\";\nimport InstructorService from \"../../service/InstructorService\";\nimport LocalStorageService from \"../../service/LocalStorageService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotificationList = props => {\n  _s();\n\n  const notifications = [{\n    header: \"covid risk\",\n    date: \"3 \",\n    content: \"There is a covid student in your className\"\n  }, {\n    header: \"covid risk\",\n    date: \"4 \",\n    content: \"Risky student in your cs className\"\n  }];\n  const [notification, setNotification] = useState();\n\n  async function fetchNotifications() {\n    const response = await InstructorService.getNotifications(LocalStorageService.getId());\n    {\n      setNotification(response);\n    }\n  }\n\n  useEffect(async () => {\n    await fetchNotifications();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: notification && notification.map(notification => {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"list-group-item list-group-item-action\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex w-100 justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-1\",\n            children: notification.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\" \", notification.date, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1\",\n          children: notification.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotificationList, \"zf8Lv0H5WB/0fnYTRN+wXsSOwb8=\");\n\n_c = NotificationList;\nexport default NotificationList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationList\");","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/NotificationList.js"],"names":["ReservationService","useEffect","useState","NotificationService","InstructorService","LocalStorageService","NotificationList","props","notifications","header","date","content","notification","setNotification","fetchNotifications","response","getNotifications","getId","map","type"],"mappings":";;;AAAA,OAAOA,kBAAP,MAA+B,kCAA/B;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAMC,aAAa,GAAG,CACpB;AACEC,IAAAA,MAAM,EAAE,YADV;AAEEC,IAAAA,IAAI,EAAE,IAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GADoB,EAMpB;AACEF,IAAAA,MAAM,EAAE,YADV;AAEEC,IAAAA,IAAI,EAAE,IAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GANoB,CAAtB;AAYA,QAAM,CAACC,YAAD,EAAcC,eAAd,IAA+BX,QAAQ,EAA7C;;AACA,iBAAeY,kBAAf,GAAmC;AAEjC,UAAMC,QAAQ,GAAG,MAAMX,iBAAiB,CAACY,gBAAlB,CAAmCX,mBAAmB,CAACY,KAApB,EAAnC,CAAvB;AACA;AACIJ,MAAAA,eAAe,CAACE,QAAD,CAAf;AACH;AAEF;;AACDd,EAAAA,SAAS,CAAE,YAAY;AACrB,UAAMa,kBAAkB,EAAxB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,cACGF,YAAY,IACXA,YAAY,CAACM,GAAb,CAAkBN,YAAD,IAAmB;AAClC,0BACE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,wCAAtB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,sCAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,sBAAsBA,YAAY,CAACO;AAAnC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,4BAASP,YAAY,CAACF,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,oBAAqBE,YAAY,CAACD;AAAlC;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVD;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA1CD;;GAAML,gB;;KAAAA,gB;AA2CN,eAAeA,gBAAf","sourcesContent":["import ReservationService from \"../../service/ReservationService\";\nimport {useEffect, useState} from \"react\";\nimport NotificationService from \"../../service/NotificationService\";\nimport InstructorService from \"../../service/InstructorService\";\nimport LocalStorageService from \"../../service/LocalStorageService\";\n\nconst NotificationList = (props) => {\n  const notifications = [\n    {\n      header: \"covid risk\",\n      date: \"3 \",\n      content: \"There is a covid student in your className\",\n    },\n    {\n      header: \"covid risk\",\n      date: \"4 \",\n      content: \"Risky student in your cs className\",\n    },\n  ];\n  const [notification,setNotification]=useState();\n  async function fetchNotifications(){\n\n    const response = await InstructorService.getNotifications(LocalStorageService.getId());\n    {\n        setNotification(response)\n    }\n\n  }\n  useEffect( async () => {\n    await fetchNotifications();\n  }, [])\n\n  return (\n    <div>\n      {notification &&\n        notification.map((notification ) => {\n          return (\n            <a href=\"#\" className=\"list-group-item list-group-item-action\">\n              <div className=\"d-flex w-100 justify-content-between\">\n                <h5 className=\"mb-1\">{notification.type}</h5>\n                <small> {notification.date} </small>\n              </div>\n              <p className=\"mb-1\">{notification.content}</p>\n            </a>\n          );\n        })}\n    </div>\n  );\n};\nexport default NotificationList;\n"]},"metadata":{},"sourceType":"module"}