{"ast":null,"code":"import axios from \"axios\";\n\nconst NotificationService = function () {\n  const _getNotifications = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/notifications\");\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotification = async id => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/notifications/\".concat(id));\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getRandomMotivationalQuote = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/notifications/motivationalQuotes\", {\n      headers: {\n        content: motivationalQuote.content\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _createMotivationalQuote = async motivationalQuote => {\n    const response = await axios.post(\"http://localhost:8080/api/v1/notifications\", {}, {\n      headers: {\n        content: motivationalQuote.content\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _deleteNotification = async id => {\n    const url = \"http://localhost:8080/api/v1/notifications/\" + id;\n    const response = await axios.delete(url);\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  return {\n    getNotifications: _getNotifications,\n    getNotification: _getNotification,\n    getRandomMotivationalQuote: _getRandomMotivationalQuote,\n    _createMotivationalQuote: _createMotivationalQuote,\n    _deleteNotification: _deleteNotification\n  };\n}();\n\nexport default NotificationService;","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/service/NotificationService.js"],"names":["axios","NotificationService","_getNotifications","response","get","data","_getNotification","id","concat","_getRandomMotivationalQuote","headers","content","motivationalQuote","_createMotivationalQuote","post","_deleteNotification","url","delete","getNotifications","getNotification","getRandomMotivationalQuote"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,mBAAmB,GAAI,YAAY;AACvC,QAAMC,iBAAiB,GAAG,YAAY;AACpC,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACrB,4CADqB,CAAvB;;AAGA,QAAID,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACE,IAAhB;AACD;AACF,GAPD;;AASA,QAAMC,gBAAgB,GAAG,MAAOC,EAAP,IAAc;AACrC,UAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACrB,8CAA8CI,MAA9C,CAAqDD,EAArD,CADqB,CAAvB;;AAGA,QAAIJ,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACE,IAAhB;AACD;AACF,GAPD;;AASA,QAAMI,2BAA2B,GAAG,YAAY;AAC9C,UAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACrB,+DADqB,EAC2C;AAC5DM,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAEC,iBAAiB,CAACD;AADpB;AADmD,KAD3C,CAAvB;;AAMA,QAAIR,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACE,IAAhB;AACD;AACF,GAVD;;AAYA,QAAMQ,wBAAwB,GAAG,MAAOD,iBAAP,IAA6B;AAC5D,UAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACc,IAAN,CACrB,4CADqB,EAErB,EAFqB,EAGrB;AACEJ,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAEC,iBAAiB,CAACD;AADpB;AADX,KAHqB,CAAvB;;AASA,QAAIR,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACE,IAAhB;AACD;AACF,GAbD;;AAeA,QAAMU,mBAAmB,GAAG,MAAOR,EAAP,IAAc;AACxC,UAAMS,GAAG,GAAG,gDAAgDT,EAA5D;AACA,UAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACiB,MAAN,CAAaD,GAAb,CAAvB;;AACA,QAAIb,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACE,IAAhB;AACD;AACF,GAND;;AAOA,SAAO;AACLa,IAAAA,gBAAgB,EAAEhB,iBADb;AAELiB,IAAAA,eAAe,EAAEb,gBAFZ;AAGLc,IAAAA,0BAA0B,EAAEX,2BAHvB;AAILI,IAAAA,wBAAwB,EAAEA,wBAJrB;AAKLE,IAAAA,mBAAmB,EAAEA;AALhB,GAAP;AAOD,CA5D2B,EAA5B;;AA8DA,eAAed,mBAAf","sourcesContent":["import axios from \"axios\";\n\nconst NotificationService = (function () {\n  const _getNotifications = async () => {\n    const response = await axios.get(\n      \"http://localhost:8080/api/v1/notifications\"\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotification = async (id) => {\n    const response = await axios.get(\n      \"http://localhost:8080/api/v1/notifications/\".concat(id)\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getRandomMotivationalQuote = async () => {\n    const response = await axios.get(\n      \"http://localhost:8080/api/v1/notifications/motivationalQuotes\",{\n          headers: {\n            content: motivationalQuote.content,\n          }}\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _createMotivationalQuote = async (motivationalQuote) => {\n    const response = await axios.post(\n      \"http://localhost:8080/api/v1/notifications\",\n      {},\n      {\n        headers: {\n          content: motivationalQuote.content,\n        },\n      }\n    );\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _deleteNotification = async (id) => {\n    const url = \"http://localhost:8080/api/v1/notifications/\" + id;\n    const response = await axios.delete(url);\n    if (response) {\n      return response.data;\n    }\n  };\n  return {\n    getNotifications: _getNotifications,\n    getNotification: _getNotification,\n    getRandomMotivationalQuote: _getRandomMotivationalQuote,\n    _createMotivationalQuote: _createMotivationalQuote,\n    _deleteNotification: _deleteNotification,\n  };\n})();\n\nexport default NotificationService;\n"]},"metadata":{},"sourceType":"module"}