{"ast":null,"code":"var _jsxFileName = \"/Users/yagmureryilmaz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/dashboardComponents/MyResponsiveLine.js\",\n    _s = $RefreshSig$();\n\nimport { ResponsiveLine } from \"@nivo/line\";\nimport MyResponsivePie from \"./MyResponsivePie\";\nimport { useEffect, useState } from \"react\";\nimport CovidInfoService from \"../../../service/CovidInfoService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyResponsiveLine() {\n  _s();\n\n  const [notAllowed, setNotAllowedStudentNum] = useState();\n  const [vaccinated, setVaccinatedStudentNum] = useState();\n  const [tested, setTestedStudentNum] = useState();\n\n  async function fetchStatistics() {\n    const response1 = await CovidInfoService.getNotAllowedStatistics();\n    const response2 = await CovidInfoService.getVaccinatedStatistics();\n    const response3 = await CovidInfoService.getTestedStatistics();\n    {\n      setNotAllowedStudentNum(response1);\n      setVaccinatedStudentNum(response2);\n      setTestedStudentNum(response3);\n    }\n  }\n\n  useEffect(async () => {\n    console.log(vaccinated);\n    await fetchStatistics();\n  });\n  const data = [{\n    id: \"covid cases\",\n    color: \"hsl(222, 70%, 50%)\",\n    data: [{\n      x: \"monday\",\n      y: 20\n    }, {\n      x: \"tuesday\",\n      y: 12\n    }, {\n      x: \"wednesday\",\n      y: 16\n    }, {\n      x: \"thursday\",\n      y: 10\n    }, {\n      x: \"friday\",\n      y: 17\n    }, {\n      x: \"saturday\",\n      y: 13\n    }, {\n      x: \"sunday\",\n      y: 15\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(ResponsiveLine, {\n    data: data,\n    margin: {\n      top: 50,\n      right: 110,\n      bottom: 50,\n      left: 60\n    },\n    xScale: {\n      type: \"point\"\n    },\n    yScale: {\n      type: \"linear\",\n      min: \"auto\",\n      max: \"auto\",\n      stacked: true,\n      reverse: false\n    },\n    yFormat: \" >-.2f\",\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      orient: \"bottom\",\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: \"\",\n      legendOffset: 36,\n      legendPosition: \"middle\"\n    },\n    axisLeft: {\n      orient: \"left\",\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: \"count\",\n      legendOffset: -40,\n      legendPosition: \"middle\"\n    },\n    colors: {\n      scheme: \"accent\"\n    },\n    pointSize: 10,\n    pointColor: {\n      theme: \"background\"\n    },\n    pointBorderWidth: 2,\n    pointBorderColor: {\n      from: \"serieColor\"\n    },\n    pointLabelYOffset: -12,\n    enableArea: true,\n    useMesh: true,\n    legends: [{\n      anchor: \"bottom-right\",\n      direction: \"column\",\n      justify: false,\n      translateX: 100,\n      translateY: 0,\n      itemsSpacing: 0,\n      itemDirection: \"left-to-right\",\n      itemWidth: 80,\n      itemHeight: 20,\n      itemOpacity: 0.75,\n      symbolSize: 12,\n      symbolShape: \"circle\",\n      symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n      effects: [{\n        on: \"hover\",\n        style: {\n          itemBackground: \"rgba(0, 0, 0, .03)\",\n          itemOpacity: 1\n        }\n      }]\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyResponsiveLine, \"kKw40wMjt+p8kzdLY9nC7Abc6HU=\");\n\n_c = MyResponsiveLine;\nexport default MyResponsiveLine;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyResponsiveLine\");","map":{"version":3,"sources":["/Users/yagmureryilmaz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/dashboardComponents/MyResponsiveLine.js"],"names":["ResponsiveLine","MyResponsivePie","useEffect","useState","CovidInfoService","MyResponsiveLine","notAllowed","setNotAllowedStudentNum","vaccinated","setVaccinatedStudentNum","tested","setTestedStudentNum","fetchStatistics","response1","getNotAllowedStatistics","response2","getVaccinatedStatistics","response3","getTestedStatistics","console","log","data","id","color","x","y","top","right","bottom","left","type","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","scheme","theme","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground"],"mappings":"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","sourcesContent":["import { ResponsiveLine } from \"@nivo/line\";\nimport MyResponsivePie from \"./MyResponsivePie\";\nimport {useEffect, useState} from \"react\";\nimport CovidInfoService from \"../../../service/CovidInfoService\";\n\nfunction MyResponsiveLine() {\n  const [notAllowed, setNotAllowedStudentNum] = useState();\n  const [vaccinated, setVaccinatedStudentNum] = useState();\n  const [tested, setTestedStudentNum] = useState();\n\n  async function fetchStatistics(){\n    const response1 = await CovidInfoService.getNotAllowedStatistics();\n    const response2 = await CovidInfoService.getVaccinatedStatistics();\n    const response3 = await CovidInfoService.getTestedStatistics();\n    {\n      setNotAllowedStudentNum(response1);\n      setVaccinatedStudentNum(response2);\n      setTestedStudentNum(response3);\n    }\n  }\n  useEffect(async () => {\n    console.log(vaccinated)\n    await fetchStatistics()\n  })\n\n  const data = [\n    {\n      id: \"covid cases\",\n      color: \"hsl(222, 70%, 50%)\",\n      data: [\n        {\n          x: \"monday\",\n          y: 20,\n        },\n        {\n          x: \"tuesday\",\n          y: 12,\n        },\n        {\n          x: \"wednesday\",\n          y: 16,\n        },\n        {\n          x: \"thursday\",\n          y: 10,\n        },\n        {\n          x: \"friday\",\n          y: 17,\n        },\n        {\n          x: \"saturday\",\n          y: 13,\n        },\n        {\n          x: \"sunday\",\n          y: 15,\n        },\n      ],\n    },\n\n  ];\n  return (\n    <ResponsiveLine\n      data={data}\n      margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n      xScale={{ type: \"point\" }}\n      yScale={{\n        type: \"linear\",\n        min: \"auto\",\n        max: \"auto\",\n        stacked: true,\n        reverse: false,\n      }}\n      yFormat=\" >-.2f\"\n      axisTop={null}\n      axisRight={null}\n      axisBottom={{\n        orient: \"bottom\",\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: \"\",\n        legendOffset: 36,\n        legendPosition: \"middle\",\n      }}\n      axisLeft={{\n        orient: \"left\",\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: \"count\",\n        legendOffset: -40,\n        legendPosition: \"middle\",\n      }}\n      colors={{ scheme: \"accent\" }}\n      pointSize={10}\n      pointColor={{ theme: \"background\" }}\n      pointBorderWidth={2}\n      pointBorderColor={{ from: \"serieColor\" }}\n      pointLabelYOffset={-12}\n      enableArea={true}\n      useMesh={true}\n      legends={[\n        {\n          anchor: \"bottom-right\",\n          direction: \"column\",\n          justify: false,\n          translateX: 100,\n          translateY: 0,\n          itemsSpacing: 0,\n          itemDirection: \"left-to-right\",\n          itemWidth: 80,\n          itemHeight: 20,\n          itemOpacity: 0.75,\n          symbolSize: 12,\n          symbolShape: \"circle\",\n          symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n          effects: [\n            {\n              on: \"hover\",\n              style: {\n                itemBackground: \"rgba(0, 0, 0, .03)\",\n                itemOpacity: 1,\n              },\n            },\n          ],\n        },\n      ]}\n    />\n  );\n}\nexport default MyResponsiveLine;\n"]},"metadata":{},"sourceType":"module"}