{"ast":null,"code":"import axios from \"axios\";\n\nconst InstructorService = function () {\n  const _getAllInstructors = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/instructors\");\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _createInstructor = async instructor => {\n    const response = await axios.post(\"http://localhost:8080/api/v1/instructors\", {\n      id: instructor.id,\n      name: instructor.name,\n      email: instructor.email,\n      hesCode: instructor.hesCode,\n      coursesGiven: instructor.coursesGiven\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getInstructorById = async id => {\n    const url = \"http://localhost:8080/api/v1/instructors\".concat(id);\n    const response = await axios.get(url);\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getInstructorByHesCode = async hesCode => {\n    const response = await axios.get(\"http://localhost:8080/api/v1/instructors\", {\n      headers: {\n        \"hesCode\": {\n          hesCode\n        }.toString()\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _updateHesCode = async (id, hesCode) => {\n    const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n    const response = await axios.patch(url, {}, {\n      headers: {\n        \"hesCode\": hesCode\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _getNotAllowedStudents = async courseCode => {\n    const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n    const response = await axios.get(url, {}, {\n      headers: {\n        \"courseCode\": courseCode\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _deleteInstructor = async id => {\n    const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n    const response = await axios.delete(url);\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _addCourse = async courseCode => {\n    const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n    const response = await axios.patch(url, {}, {\n      headers: {\n        \"courseCode\": courseCode\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  const _deleteCourse = async courseCode => {\n    const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n    const response = await axios.delete(url, {}, {\n      headers: {\n        \"courseCode\": courseCode\n      }\n    });\n\n    if (response) {\n      return response.data;\n    }\n  };\n\n  return {\n    createInstructor: _createInstructor,\n    getAllInstructors: _getAllInstructors,\n    getInstructorById: _getInstructorById,\n    getInstructorByHesCode: _getInstructorByHesCode,\n    updateHesCode: _updateHesCode,\n    getNotAllowedStudents: _getNotAllowedStudents,\n    deleteInstructor: _deleteInstructor,\n    addCourse: _addCourse,\n    deleteCourse: _deleteCourse\n  };\n}();\n\nexport default InstructorService;","map":{"version":3,"sources":["/Users/elifcenesiz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/service/InstructorService.js"],"names":["axios","InstructorService","_getAllInstructors","response","get","data","_createInstructor","instructor","post","id","name","email","hesCode","coursesGiven","_getInstructorById","url","concat","_getInstructorByHesCode","headers","toString","_updateHesCode","patch","_getNotAllowedStudents","courseCode","_deleteInstructor","delete","_addCourse","_deleteCourse","createInstructor","getAllInstructors","getInstructorById","getInstructorByHesCode","updateHesCode","getNotAllowedStudents","deleteInstructor","addCourse","deleteCourse"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst InstructorService =(function () {\n    \n    const _getAllInstructors=async()=>\n    {\n        const response = await axios.get(\"http://localhost:8080/api/v1/instructors\");\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _createInstructor=async(instructor)=>\n    {\n        const response = await axios.post(\"http://localhost:8080/api/v1/instructors\", {\n            id: instructor.id,\n            name: instructor.name,\n            email: instructor.email,\n            hesCode: instructor.hesCode,\n            coursesGiven: instructor.coursesGiven\n        });\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _getInstructorById=async(id)=>\n    {\n        const url = \"http://localhost:8080/api/v1/instructors\".concat(id);\n        const response = await axios.get(url);\n        if (response) {\n            return response.data;\n        }\n    }\n    \n    const _getInstructorByHesCode=async(hesCode)=>\n    {\n        const response = await axios.get(\"http://localhost:8080/api/v1/instructors\", { headers:{\n                \"hesCode\": {hesCode}.toString()\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _updateHesCode = async (id, hesCode)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id)\n        const response = await axios.patch(url,{}, {headers: {\n                \"hesCode\": hesCode\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _getNotAllowedStudents =async(courseCode)=>\n    {\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.get(url,{}, {headers: {\n                \"courseCode\": courseCode\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _deleteInstructor = async (id)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.delete(url)\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _addCourse =async(courseCode)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.patch(url,{}, {headers: {\n                \"courseCode\": courseCode\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n    const _deleteCourse =async(courseCode)=>{\n        const url = \"http://localhost:8080/api/v1/instructors/\".concat(id);\n        const response = await axios.delete(url,{}, {headers: {\n                \"courseCode\": courseCode\n            }});\n        if (response) {\n            return response.data;\n        }\n    }\n\n\n    return(\n        {\n            createInstructor: _createInstructor,\n            getAllInstructors: _getAllInstructors,\n            getInstructorById: _getInstructorById,\n            getInstructorByHesCode: _getInstructorByHesCode,\n            updateHesCode: _updateHesCode,\n            getNotAllowedStudents: _getNotAllowedStudents,\n            deleteInstructor: _deleteInstructor,\n            addCourse: _addCourse,\n            deleteCourse: _deleteCourse\n        }\n    );\n\n})();\nexport default InstructorService;\n\n"]},"metadata":{},"sourceType":"module"}