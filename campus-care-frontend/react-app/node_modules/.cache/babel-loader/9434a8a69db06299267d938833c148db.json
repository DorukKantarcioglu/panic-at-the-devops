{"ast":null,"code":"var _jsxFileName = \"/Users/yagmureryilmaz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/SeatingPlan.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewSeatingPlanForm from \"./profileComponents/NewSeatingPlanForm\";\nimport { Modal } from \"react-bootstrap\";\nimport { ModalBody } from \"react-bootstrap\";\nimport SeatingPlanService from \"../../service/SeatingPlanService\";\nimport CourseService from \"../../service/CourseService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SeatingPlan(props) {\n  _s();\n\n  const [chart, setChart] = useState([]);\n  const [data, setData] = useState([]);\n  const [rowNo, setRowNo] = useState(2);\n  const [columnNo, setColumnNo] = useState(4);\n  const [read, setRead] = useState(true);\n  const [exist, setExist] = useState(false);\n  const [list, setList] = useState();\n  useEffect(async () => {\n    await fetch();\n\n    if (exist) {\n      getSeatingPlan();\n      fetchSeatingPlan();\n    }\n  }, [exist]);\n\n  fetch = async function () {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const seatingList = await CourseService.getSeatingPlan(props.courseCode);\n    setList(seatingList);\n    if (seatingList != null) setExist(true);\n  };\n\n  const getSeatingPlan = () => {\n    for (let x = 0; x < list.length; x++) {\n      let i = list[x].rowNo;\n      let j = list[x].columnNo;\n      let id = j + i * 1;\n      let temp = data;\n      temp[id] = list[x].student.id;\n      setData(temp);\n    }\n  };\n\n  const saveStudent = event => {\n    let seatId = event.target.id;\n    let studentId = event.target.value;\n    let temp = data;\n    temp[seatId] = studentId;\n    setData(temp);\n  };\n\n  const fetchSeatingPlan = () => {\n    let table = [];\n    let parent = [];\n\n    for (let i = 0; i < rowNo; i++) {\n      let children = [];\n\n      for (let j = 0; j < columnNo; j++) {\n        let id = j + i * columnNo;\n        children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"seat\",\n            id: id,\n            onChange: saveStudent,\n            readOnly: read,\n            defaultValue: data[id]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 31\n        }, this));\n      }\n\n      parent.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [\" \", children, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this));\n    }\n\n    table.push( /*#__PURE__*/_jsxDEV(\"table\", {\n      children: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 20\n    }, this));\n    setChart(table);\n  };\n\n  const save = () => {\n    setExist(true);\n  };\n\n  const updateChart = () => {\n    setRead(false);\n  };\n\n  const handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: props.show,\n      className: \"seatingPlanForm\",\n      children: /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: exist ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [chart, /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"seatingPlanUpdate\",\n            onClick: updateChart,\n            children: \" Update the seating plan \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(NewSeatingPlanForm, {\n          onSave: save,\n          courseCode: props.courseCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SeatingPlan, \"4XbjvjGRe1VHFivNf8gPH0vqA98=\");\n\n_c = SeatingPlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeatingPlan\");","map":{"version":3,"sources":["/Users/yagmureryilmaz/Documents/GitHub/panic-at-the-devops/campus-care-frontend/react-app/src/app/components/SeatingPlan.js"],"names":["React","useEffect","useState","NewSeatingPlanForm","Modal","ModalBody","SeatingPlanService","CourseService","SeatingPlan","props","chart","setChart","data","setData","rowNo","setRowNo","columnNo","setColumnNo","read","setRead","exist","setExist","list","setList","fetch","getSeatingPlan","fetchSeatingPlan","params","seatingList","courseCode","x","length","i","j","id","temp","student","saveStudent","event","seatId","target","studentId","value","table","parent","children","push","save","updateChart","handleChange","setState","name","show"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport NewSeatingPlanForm from \"./profileComponents/NewSeatingPlanForm\";\nimport {  Modal } from \"react-bootstrap\";\nimport {ModalBody} from \"react-bootstrap\";\nimport SeatingPlanService from \"../../service/SeatingPlanService\";\nimport CourseService from \"../../service/CourseService\";\n\nexport default function SeatingPlan (props)\n{\n\n    const [chart, setChart] = useState([]);\n    const [data, setData] = useState([]);\n    const [rowNo, setRowNo] = useState(2);\n    const [columnNo, setColumnNo] = useState(4);\n    const [read, setRead] = useState(true);\n    const [exist, setExist] = useState(false);\n    const [list, setList] = useState()\n\n    useEffect(async () => {\n\n        await fetch()\n        if (exist)\n        {\n            getSeatingPlan();\n            fetchSeatingPlan();\n        }\n    },[exist])\n\n    fetch = async (params = {}) => {\n\n        const seatingList = await CourseService.getSeatingPlan(props.courseCode);\n        setList(seatingList);\n        if (seatingList != null)\n            setExist(true);\n    };\n\n    const getSeatingPlan= () => {\n\n\n        for (let x = 0; x < list.length; x++)\n        {\n            let i = list[x].rowNo;\n            let j = list[x].columnNo;\n            let id = j + (i * 1);\n\n            let temp = data;\n            temp[id] = list[x].student.id;\n            setData(temp);\n        }\n    }\n\n    const saveStudent = (event) => {\n        let seatId = event.target.id;\n        let studentId = event.target.value;\n        let temp = data;\n        temp[seatId] = studentId;\n        setData(temp);\n    };\n\n    const fetchSeatingPlan=()=>\n    {\n        let table = [];\n        let parent = [];\n        for (let i = 0; i < rowNo; i++)\n        {\n            let children = [];\n            for (let j = 0; j < columnNo; j++)\n            {\n                let id = j+(i*columnNo);\n\n                children.push(<td>\n                    <input type=\"text\" name=\"seat\" id = {id}\n                           onChange={saveStudent} readOnly={read}  defaultValue={data[id]} >\n\n                    </input> </td>);\n            }\n            parent.push(<tr> {children} </tr>);\n        }\n        table.push(<table>{parent}</table>)\n\n        setChart(table);\n    }\n    const save=()=>\n    {\n        setExist(true);\n\n    }\n\n    const updateChart=()=>{\n        setRead(false);\n    }\n\n    const handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    return(\n        <div>\n            <Modal show ={props.show} className=\"seatingPlanForm\" >\n                <ModalBody>\n                    {exist?(<div>\n                                {chart}\n                                <button id = \"seatingPlanUpdate\" onClick={updateChart}> Update the seating plan </button>\n                            </div>\n                        ):\n                        (\n                            <NewSeatingPlanForm onSave = {save} courseCode = {props.courseCode}/>\n                        )\n                    }\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}